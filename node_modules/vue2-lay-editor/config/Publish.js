class Publish {
  constructor() {
    this.id = 0;
    this.listenList = {};
    this.emit = this.emit;
    this.on = this.on;
    this.cancel = this.cancel;
  }
  // 发布
  emit(name, data) {
    if (!name) {
      return new Error("发布消息,请先传入消息名称");
    }
    if (this.listenList[name]) {
      Object.values(this.listenList[name]).forEach((callback) => {
        callback(data);
      });
    }
  }
  // 监听
  on(name, callback) {
    if (!name) {
      return new Error("监听消息,请先传入消息名称");
    }
    let token = "token-" + this.id++;
    if (this.listenList[name]) {
      this.listenList[name][token] = callback || function () { };
    } else {
      this.listenList[name] = {};
      this.listenList[name][token] = callback || function () { };
    }
    return token;
  }
  // 取消
  cancel(name, token) {
    if (!name) {
      return new Error("取消监听消息,请先传入消息名称");
    }
    if (this.listenList[name]) {
      if (token) {
        delete this.listenList[name][token];
      } else {
        this.listenList[name] = {};
      }
    }
  }
}
const $publish = new Publish();
export default $publish
