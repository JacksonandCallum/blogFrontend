{"ast":null,"code":"import dropdownSelect from \"../../components/dropdown-select.vue\";\nimport config from \"../../config/index\";\nimport lazyLoad from \"../../directives/lazy-load\";\nexport default {\n  name: \"WorkspaceJsonAlignMode\",\n  components: {\n    dropdownSelect\n  },\n  directives: {\n    lazyLoad\n  },\n  data() {\n    return {\n      isOpen: false,\n      load: false,\n      checked: 0,\n      config\n    };\n  },\n  computed: {\n    emoticonList() {\n      return config.minEmoticon;\n    },\n    currentList() {\n      return config.minEmoticon[this.checked] ? config.minEmoticon[this.checked].list : [];\n    }\n  },\n  watch: {\n    isOpen() {\n      if (this.isOpen) this.load = true;\n    }\n  },\n  methods: {\n    switchTabs(item, index) {\n      this.checked = index;\n    },\n    execCommand(item) {\n      document.execCommand(\"insertHTML\", false, `<img class=\"laytEditor-emoticon\" style=\"width:21px;height:21px;position: relative;top: 3px;\" src=\"${item.src}\" alt=\"\">&nbsp`);\n    }\n  }\n};","map":{"version":3,"names":["dropdownSelect","config","lazyLoad","name","components","directives","data","isOpen","load","checked","computed","emoticonList","minEmoticon","currentList","list","watch","methods","switchTabs","item","index","execCommand","document","src"],"sources":["node_modules/vue2-lay-editor/edit-tools/components/emoticon.vue"],"sourcesContent":["<template>\n  <div class=\"emoticon\" @mousedown.prevent>\n    <dropdown-select v-model=\"isOpen\">\n      <!-- 展示 -->\n      <div slot=\"title\">\n        <div class=\"head\">\n          <!-- 表情 -->\n          <i class=\"iconfont icon-biaoqing-xue\"></i>\n        </div>\n      </div>\n      <!-- 操作 -->\n      <div class=\"dropdown-panel\">\n        <div v-if=\"load\" class=\"list\">\n          <div\n            @click=\"execCommand(item)\"\n            v-for=\"(item, index) in currentList\"\n            :key=\"index\"\n            class=\"img-item\"\n          >\n            <img v-lazy-load=\"item.src\" alt=\"\" />\n          </div>\n        </div>\n        <div class=\"tabs\" :style=\"{ '--theme': config.themeColor }\">\n          <span\n            @click=\"switchTabs(item, index)\"\n            :class=\"[{ active: index == checked }]\"\n            v-for=\"(item, index) in emoticonList\"\n            :key=\"index\"\n            >{{ item.title }}</span\n          >\n        </div>\n      </div>\n    </dropdown-select>\n  </div>\n</template>\n\n<script>\nimport dropdownSelect from \"../../components/dropdown-select.vue\";\nimport config from \"../../config/index\";\nimport lazyLoad from \"../../directives/lazy-load\";\n\nexport default {\n  name: \"WorkspaceJsonAlignMode\",\n  components: {\n    dropdownSelect,\n  },\n  directives: {\n    lazyLoad,\n  },\n  data() {\n    return {\n      isOpen: false,\n      load: false,\n      checked: 0,\n      config,\n    };\n  },\n  computed: {\n    emoticonList() {\n      return config.minEmoticon;\n    },\n    currentList() {\n      return config.minEmoticon[this.checked]\n        ? config.minEmoticon[this.checked].list\n        : [];\n    },\n  },\n  watch: {\n    isOpen() {\n      if (this.isOpen) this.load = true;\n    },\n  },\n\n  methods: {\n    switchTabs(item, index) {\n      this.checked = index;\n    },\n    execCommand(item) {\n      document.execCommand(\n        \"insertHTML\",\n        false,\n        `<img class=\"laytEditor-emoticon\" style=\"width:21px;height:21px;position: relative;top: 3px;\" src=\"${item.src}\" alt=\"\">&nbsp`\n      );\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.emoticon .head {\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.emoticon .head:hover {\n  background: #f5f5f5;\n}\n\n.emoticon .dropdown-panel {\n  width: 310px;\n  height: 310px;\n  background: rgba(255, 255, 255, 0.7);\n  box-shadow: 0 5px 20px 0 #e4e8eb;\n  display: flex;\n  flex-direction: column;\n}\n.emoticon .dropdown-panel .list {\n  flex: 1;\n  overflow: auto;\n  display: flex;\n  flex-wrap: wrap;\n  align-content: baseline;\n  padding-top: 5px;\n  position: relative;\n}\n\n.emoticon .dropdown-panel .list .img-item {\n  height: 30px;\n  padding: 5px;\n  margin: 5px;\n}\n\n.emoticon .dropdown-panel .list .img-item:hover {\n  background: #eee;\n}\n\n.emoticon .dropdown-panel .list img {\n  width: 30px;\n  height: 30px;\n}\n\n.emoticon .dropdown-panel .tabs {\n  border-top: 1px solid #f5f5f5;\n  display: flex;\n}\n.emoticon .dropdown-panel .tabs span {\n  padding: 10px;\n  border-right: 1px solid #f5f5f5;\n  cursor: pointer;\n}\n\n.emoticon .dropdown-panel .tabs .active {\n  color: var(--theme);\n}\n\n.emoticon .dropdown-panel .emoticon .dropdown-panel p {\n  padding: 10px 0;\n  margin: 0;\n}\n.emoticon .dropdown-panel p:hover {\n  background: #eee;\n}\n\n/*滚动条样式*/\n.emoticon .dropdown-panel .list::-webkit-scrollbar {\n  width: 4px;\n}\n.emoticon .dropdown-panel .list::-webkit-scrollbar-track {\n  background: #f5f5f5;\n}\n.emoticon .dropdown-panel .list::-webkit-scrollbar-thumb {\n  background: #eee;\n}\n</style>\n"],"mappings":"AAqCA,OAAAA,cAAA;AACA,OAAAC,MAAA;AACA,OAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAJ;EACA;EACAK,UAAA;IACAH;EACA;EACAI,KAAA;IACA;MACAC,MAAA;MACAC,IAAA;MACAC,OAAA;MACAR;IACA;EACA;EACAS,QAAA;IACAC,aAAA;MACA,OAAAV,MAAA,CAAAW,WAAA;IACA;IACAC,YAAA;MACA,OAAAZ,MAAA,CAAAW,WAAA,MAAAH,OAAA,IACAR,MAAA,CAAAW,WAAA,MAAAH,OAAA,EAAAK,IAAA,GACA;IACA;EACA;EACAC,KAAA;IACAR,OAAA;MACA,SAAAA,MAAA,OAAAC,IAAA;IACA;EACA;EAEAQ,OAAA;IACAC,WAAAC,IAAA,EAAAC,KAAA;MACA,KAAAV,OAAA,GAAAU,KAAA;IACA;IACAC,YAAAF,IAAA;MACAG,QAAA,CAAAD,WAAA,CACA,cACA,OACA,qGAAAF,IAAA,CAAAI,GAAA,gBACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}