{"ast":null,"code":"export default {\n  props: {\n    isHitokoto: {\n      type: Boolean,\n      default: true\n    },\n    isShehui: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      guShi: {\n        \"content\": \"...\",\n        \"origin\": \"...\",\n        \"author\": \"...\",\n        \"category\": \"...\"\n      },\n      hitokoto: {\n        \"hitokoto\": \"...\",\n        \"from\": \"...\",\n        \"from_who\": \"...\"\n      }\n    };\n  },\n  created() {\n    if (!this.isShehui) {\n      if (this.isHitokoto) {\n        this.getHitokoto();\n      } else {\n        this.getGuShi();\n      }\n    } else {\n      this.hitokoto.from = \"\";\n      this.hitokoto.from_who = \"\";\n      this.sendShehui();\n    }\n  },\n  mounted() {\n    if (!this.isShehui) {\n      if (this.isHitokoto) {\n        this.getHitokoto();\n      } else {\n        this.getGuShi();\n      }\n    } else {\n      this.hitokoto.from = \"\";\n      this.hitokoto.from_who = \"\";\n      this.sendShehui();\n    }\n  },\n  methods: {\n    sendShehui() {\n      let that = this;\n      let xhr = new XMLHttpRequest();\n      xhr.open('get', this.$constant.shehui);\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          let shehui = xhr.responseText;\n          that.hitokoto.hitokoto = shehui.substring(1, shehui.length - 1);\n        }\n      };\n      xhr.send();\n    },\n    getGuShi() {\n      let that = this;\n      let xhr = new XMLHttpRequest();\n      xhr.open('get', this.$constant.jinrishici);\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          that.guShi = JSON.parse(xhr.responseText);\n        }\n      };\n      xhr.send();\n    },\n    getHitokoto() {\n      let that = this;\n      let xhr = new XMLHttpRequest();\n      xhr.open('get', this.$constant.hitokoto);\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          that.hitokoto = JSON.parse(xhr.responseText);\n        }\n      };\n      xhr.send();\n    }\n  }\n};","map":{"version":3,"names":["props","isHitokoto","type","Boolean","default","isShehui","data","guShi","hitokoto","created","getHitokoto","getGuShi","from","from_who","sendShehui","mounted","methods","that","xhr","XMLHttpRequest","open","$constant","shehui","onreadystatechange","readyState","responseText","substring","length","send","jinrishici","JSON","parse"],"sources":["src/components/twoPoem.vue"],"sourcesContent":["<template>\r\n  <div class=\"poem-container myCenter my-animation-hideToShow\"\r\n    v-if=\"!$common.isEmpty(guShi.origin) || !$common.isEmpty(hitokoto.hitokoto)\">\r\n    <!-- 背景图片 -->\r\n    <el-image class=\"my-el-image poem-image\" style=\"position: absolute;margin-top: -50px\" v-once lazy\r\n      :src=\"$constant.random_image + new Date() + Math.floor(Math.random() * 10)\" fit=\"cover\">\r\n      <div slot=\"error\" class=\"image-slot\"></div>\r\n    </el-image>\r\n    <div class=\"poem-wrap\">\r\n      <div v-if=\"isShehui\"><span>鬼畜全明星</span></div>\r\n      <div v-else><span>{{ isHitokoto ? hitokoto.from : guShi.origin }}</span></div>\r\n      <p class=\"poem\">{{ isHitokoto ? hitokoto.hitokoto : guShi.content }}</p>\r\n      <p class=\"info\" v-if=\"!isShehui && (!isHitokoto || (isHitokoto && !$common.isEmpty(hitokoto.from_who)))\">\r\n        {{ isHitokoto ? hitokoto.from_who : guShi.author }}\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  props: {\r\n    isHitokoto: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    isShehui: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      guShi: {\r\n        \"content\": \"...\",\r\n        \"origin\": \"...\",\r\n        \"author\": \"...\",\r\n        \"category\": \"...\"\r\n      },\r\n      hitokoto: {\r\n        \"hitokoto\": \"...\",\r\n        \"from\": \"...\",\r\n        \"from_who\": \"...\"\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    if (!this.isShehui) {\r\n      if (this.isHitokoto) {\r\n        this.getHitokoto();\r\n      } else {\r\n        this.getGuShi();\r\n      }\r\n    } else {\r\n      this.hitokoto.from = \"\";\r\n      this.hitokoto.from_who = \"\";\r\n      this.sendShehui();\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    if (!this.isShehui) {\r\n      if (this.isHitokoto) {\r\n        this.getHitokoto();\r\n      } else {\r\n        this.getGuShi();\r\n      }\r\n    } else {\r\n      this.hitokoto.from = \"\";\r\n      this.hitokoto.from_who = \"\";\r\n      this.sendShehui();\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    sendShehui() {\r\n      let that = this;\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.open('get', this.$constant.shehui);\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 4) {\r\n          let shehui = xhr.responseText;\r\n          that.hitokoto.hitokoto = shehui.substring(1, shehui.length - 1);\r\n        }\r\n      };\r\n      xhr.send();\r\n    },\r\n    getGuShi() {\r\n      let that = this;\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.open('get', this.$constant.jinrishici);\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 4) {\r\n          that.guShi = JSON.parse(xhr.responseText);\r\n        }\r\n      };\r\n      xhr.send();\r\n    },\r\n    getHitokoto() {\r\n      let that = this;\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.open('get', this.$constant.hitokoto);\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 4) {\r\n          that.hitokoto = JSON.parse(xhr.responseText);\r\n        }\r\n      }\r\n      xhr.send();\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n.poem-container {\r\n  padding: 90px 0 40px;\r\n  position: relative;\r\n}\r\n\r\n/* 以my-animation-开头的class */\r\n[class*=my-animation-] {\r\n  animation-duration: 1s;\r\n  animation-timing-function: ease-out;\r\n  animation-fill-mode: both;\r\n}\r\n\r\n.my-animation-hideToShow {\r\n  animation-name: hideToShow\r\n}\r\n\r\n\r\n/* 遮罩 */\r\n.poem-image::before {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  content: \"\";\r\n}\r\n\r\n.poem-wrap {\r\n  border-radius: 10px;\r\n  z-index: 10;\r\n  text-align: center;\r\n  letter-spacing: 4px;\r\n  font-weight: 300;\r\n  width: 100%;\r\n  max-width: 800px;\r\n}\r\n\r\n.poem-wrap div span {\r\n  padding: 5px 10px;\r\n  color: white;\r\n  font-size: 2em;\r\n  border-radius: 5px;\r\n}\r\n\r\n.poem-wrap p {\r\n  width: 100%;\r\n  max-width: 800px;\r\n  color: white;\r\n}\r\n\r\n.poem-wrap p.poem {\r\n  margin: 40px auto;\r\n  font-size: 1.5em;\r\n}\r\n\r\n.poem-wrap p.info {\r\n  margin: 20px auto 40px;\r\n  font-size: 1.1em;\r\n}\r\n</style>\r\n"],"mappings":"AAmBA;EACAA,KAAA;IACAC,UAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACAC,QAAA;MACAH,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;EACA;EACAE,KAAA;IACA;MACAC,KAAA;QACA;QACA;QACA;QACA;MACA;MACAC,QAAA;QACA;QACA;QACA;MACA;IACA;EACA;EACAC,QAAA;IACA,UAAAJ,QAAA;MACA,SAAAJ,UAAA;QACA,KAAAS,WAAA;MACA;QACA,KAAAC,QAAA;MACA;IACA;MACA,KAAAH,QAAA,CAAAI,IAAA;MACA,KAAAJ,QAAA,CAAAK,QAAA;MACA,KAAAC,UAAA;IACA;EACA;EAEAC,QAAA;IACA,UAAAV,QAAA;MACA,SAAAJ,UAAA;QACA,KAAAS,WAAA;MACA;QACA,KAAAC,QAAA;MACA;IACA;MACA,KAAAH,QAAA,CAAAI,IAAA;MACA,KAAAJ,QAAA,CAAAK,QAAA;MACA,KAAAC,UAAA;IACA;EACA;EAEAE,OAAA;IACAF,WAAA;MACA,IAAAG,IAAA;MACA,IAAAC,GAAA,OAAAC,cAAA;MACAD,GAAA,CAAAE,IAAA,aAAAC,SAAA,CAAAC,MAAA;MACAJ,GAAA,CAAAK,kBAAA;QACA,IAAAL,GAAA,CAAAM,UAAA;UACA,IAAAF,MAAA,GAAAJ,GAAA,CAAAO,YAAA;UACAR,IAAA,CAAAT,QAAA,CAAAA,QAAA,GAAAc,MAAA,CAAAI,SAAA,IAAAJ,MAAA,CAAAK,MAAA;QACA;MACA;MACAT,GAAA,CAAAU,IAAA;IACA;IACAjB,SAAA;MACA,IAAAM,IAAA;MACA,IAAAC,GAAA,OAAAC,cAAA;MACAD,GAAA,CAAAE,IAAA,aAAAC,SAAA,CAAAQ,UAAA;MACAX,GAAA,CAAAK,kBAAA;QACA,IAAAL,GAAA,CAAAM,UAAA;UACAP,IAAA,CAAAV,KAAA,GAAAuB,IAAA,CAAAC,KAAA,CAAAb,GAAA,CAAAO,YAAA;QACA;MACA;MACAP,GAAA,CAAAU,IAAA;IACA;IACAlB,YAAA;MACA,IAAAO,IAAA;MACA,IAAAC,GAAA,OAAAC,cAAA;MACAD,GAAA,CAAAE,IAAA,aAAAC,SAAA,CAAAb,QAAA;MACAU,GAAA,CAAAK,kBAAA;QACA,IAAAL,GAAA,CAAAM,UAAA;UACAP,IAAA,CAAAT,QAAA,GAAAsB,IAAA,CAAAC,KAAA,CAAAb,GAAA,CAAAO,YAAA;QACA;MACA;MACAP,GAAA,CAAAU,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}