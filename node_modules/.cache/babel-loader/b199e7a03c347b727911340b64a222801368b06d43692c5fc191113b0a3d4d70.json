{"ast":null,"code":"export default {\n  /**\r\n  * 判断是否为空\r\n  */\n  isEmpty(value) {\n    if (typeof value === \"undefined\" || value === null || typeof value === \"string\" && value.trim() === \"\" || Array.prototype.isPrototypeOf(value) && value.length === 0 || Object.prototype.isPrototypeOf(value) && Object.keys(value).length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n  /**\r\n  * 表情包转换\r\n  */\n  faceReg(content) {\n    content = content.replace(/\\[[^\\[^\\]]+\\]/g, word => {\n      let index = constant.emojiList.indexOf(word.replace(\"[\", \"\").replace(\"]\", \"\"));\n      if (index > -1) {\n        let url = constant.qiniuDownload + \"emoji/q\" + (index + 1) + \".gif\";\n        return '<img style=\"vertical-align: middle;width: 32px;height: 32px\" src=\"' + url + '\" title=\"' + word + '\"/>';\n      } else {\n        return word;\n      }\n    });\n    return content;\n  },\n  /**\r\n  * 图片转换\r\n  */\n  pictureReg(content) {\n    content = content.replace(/\\[[^\\[^\\]]+\\]/g, word => {\n      let index = word.indexOf(\",\");\n      if (index > -1) {\n        let arr = word.replace(\"[\", \"\").replace(\"]\", \"\").split(\",\");\n        return '<img class=\"pictureReg\" style=\"border-radius: 5px;width: 100%;max-width: 250px;display: block\" src=\"' + arr[1] + '\" title=\"' + arr[0] + '\"/>';\n      } else {\n        return word;\n      }\n    });\n    return content;\n  },\n  imgShow(select) {\n    $(select).click(function () {\n      let src = $(this).attr(\"src\");\n      $(\"#bigImg\").attr(\"src\", src);\n\n      /** 获取当前点击图片的真实大小，并显示弹出层及大图 */\n      $(\"<img/>\").attr(\"src\", src).load(function () {\n        let windowW = $(window).width(); //获取当前窗口宽度\n        let windowH = $(window).height(); //获取当前窗口高度\n        let realWidth = this.width; //获取图片真实宽度\n        let realHeight = this.height; //获取图片真实高度\n        let imgWidth, imgHeight;\n        let scale = 0.8; //缩放尺寸，当图片真实宽度和高度大于窗口宽度和高度时进行缩放\n\n        if (realHeight > windowH * scale) {\n          //判断图片高度\n          imgHeight = windowH * scale; //如大于窗口高度，图片高度进行缩放\n          imgWidth = imgHeight / realHeight * realWidth; //等比例缩放宽度\n          if (imgWidth > windowW * scale) {\n            //如宽度仍大于窗口宽度\n            imgWidth = windowW * scale; //再对宽度进行缩放\n          }\n        } else if (realWidth > windowW * scale) {\n          //如图片高度合适，判断图片宽度\n          imgWidth = windowW * scale; //如大于窗口宽度，图片宽度进行缩放\n          imgHeight = imgWidth / realWidth * realHeight; //等比例缩放高度\n        } else {\n          //如果图片真实高度和宽度都符合要求，高宽不变\n          imgWidth = realWidth;\n          imgHeight = realHeight;\n        }\n        $(\"#bigImg\").css(\"width\", imgWidth); //以最终的宽度对图片缩放\n\n        let w = (windowW - imgWidth) / 2; //计算图片与窗口左边距\n        let h = (windowH - imgHeight) / 2; //计算图片与窗口上边距\n        $(\"#innerImg\").css({\n          \"top\": h,\n          \"left\": w\n        }); //设置top和left属性\n        $(\"#outerImg\").fadeIn(\"fast\"); //淡入显示\n      });\n      $(\"#outerImg\").click(function () {\n        //再次点击淡出消失弹出层\n        $(this).fadeOut(\"fast\");\n      });\n    });\n  }\n};","map":{"version":3,"names":["isEmpty","value","trim","Array","prototype","isPrototypeOf","length","Object","keys","faceReg","content","replace","word","index","constant","emojiList","indexOf","url","qiniuDownload","pictureReg","arr","split","imgShow","select","$","click","src","attr","load","windowW","window","width","windowH","height","realWidth","realHeight","imgWidth","imgHeight","scale","css","w","h","fadeIn","fadeOut"],"sources":["D:/Java_Projects/MYBLOG/frontend/blog-frontend/src/utils/common.js"],"sourcesContent":["export default {\r\n    /**\r\n   * 判断是否为空\r\n   */\r\n    isEmpty(value) {\r\n        if (typeof value === \"undefined\" || value === null || (typeof value === \"string\" && value.trim() === \"\") || (Array.prototype.isPrototypeOf(value) && value.length === 0) || (Object.prototype.isPrototypeOf(value) && Object.keys(value).length === 0)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    /**\r\n   * 表情包转换\r\n   */\r\n    faceReg(content) {\r\n        content = content.replace(/\\[[^\\[^\\]]+\\]/g, (word) => {\r\n            let index = constant.emojiList.indexOf(word.replace(\"[\", \"\").replace(\"]\", \"\"));\r\n            if (index > -1) {\r\n                let url = constant.qiniuDownload + \"emoji/q\" + (index + 1) + \".gif\";\r\n                return '<img style=\"vertical-align: middle;width: 32px;height: 32px\" src=\"' + url + '\" title=\"' + word + '\"/>';\r\n            } else {\r\n                return word;\r\n            }\r\n        });\r\n        return content;\r\n    },\r\n\r\n    /**\r\n   * 图片转换\r\n   */\r\n    pictureReg(content) {\r\n        content = content.replace(/\\[[^\\[^\\]]+\\]/g, (word) => {\r\n            let index = word.indexOf(\",\");\r\n            if (index > -1) {\r\n                let arr = word.replace(\"[\", \"\").replace(\"]\", \"\").split(\",\");\r\n                return '<img class=\"pictureReg\" style=\"border-radius: 5px;width: 100%;max-width: 250px;display: block\" src=\"' + arr[1] + '\" title=\"' + arr[0] + '\"/>';\r\n            } else {\r\n                return word;\r\n            }\r\n        });\r\n        return content;\r\n    },\r\n\r\n    imgShow(select) {\r\n        $(select).click(function () {\r\n            let src = $(this).attr(\"src\");\r\n            $(\"#bigImg\").attr(\"src\", src);\r\n\r\n            /** 获取当前点击图片的真实大小，并显示弹出层及大图 */\r\n            $(\"<img/>\").attr(\"src\", src).load(function () {\r\n                let windowW = $(window).width();//获取当前窗口宽度\r\n                let windowH = $(window).height();//获取当前窗口高度\r\n                let realWidth = this.width;//获取图片真实宽度\r\n                let realHeight = this.height;//获取图片真实高度\r\n                let imgWidth, imgHeight;\r\n                let scale = 0.8;//缩放尺寸，当图片真实宽度和高度大于窗口宽度和高度时进行缩放\r\n\r\n                if (realHeight > windowH * scale) {//判断图片高度\r\n                    imgHeight = windowH * scale;//如大于窗口高度，图片高度进行缩放\r\n                    imgWidth = imgHeight / realHeight * realWidth;//等比例缩放宽度\r\n                    if (imgWidth > windowW * scale) {//如宽度仍大于窗口宽度\r\n                        imgWidth = windowW * scale;//再对宽度进行缩放\r\n                    }\r\n                } else if (realWidth > windowW * scale) {//如图片高度合适，判断图片宽度\r\n                    imgWidth = windowW * scale;//如大于窗口宽度，图片宽度进行缩放\r\n                    imgHeight = imgWidth / realWidth * realHeight;//等比例缩放高度\r\n                } else {//如果图片真实高度和宽度都符合要求，高宽不变\r\n                    imgWidth = realWidth;\r\n                    imgHeight = realHeight;\r\n                }\r\n                $(\"#bigImg\").css(\"width\", imgWidth);//以最终的宽度对图片缩放\r\n\r\n                let w = (windowW - imgWidth) / 2;//计算图片与窗口左边距\r\n                let h = (windowH - imgHeight) / 2;//计算图片与窗口上边距\r\n                $(\"#innerImg\").css({ \"top\": h, \"left\": w });//设置top和left属性\r\n                $(\"#outerImg\").fadeIn(\"fast\");//淡入显示\r\n            });\r\n\r\n            $(\"#outerImg\").click(function () {//再次点击淡出消失弹出层\r\n                $(this).fadeOut(\"fast\");\r\n            });\r\n        });\r\n    },\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}