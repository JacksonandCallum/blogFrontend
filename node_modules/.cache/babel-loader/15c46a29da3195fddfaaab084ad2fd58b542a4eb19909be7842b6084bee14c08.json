{"ast":null,"code":"// 安装 : \"vue-codemirror\": \"^4.0.6\"\nimport { js_beautify, css_beautify, html_beautify } from \"js-beautify\";\nimport { codemirror } from \"vue-codemirror\";\nimport \"codemirror/lib/codemirror.css\";\n// 语言/主题\nimport langs from \"./langs\";\nimport theme from \"./theme\";\nconst createUid = (() => {\n  let regxy = /[xy]/g;\n  let reg = /-/g;\n  let empty = \"\";\n  return () => {\n    let uuid = \"xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx\".replace(regxy, function (c) {\n      var r = Math.random() * 16 | 0,\n        v = c == \"x\" ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n    return uuid.replace(reg, empty);\n  };\n})();\nexport default {\n  model: {\n    prop: \"value\",\n    event: \"input\"\n  },\n  props: {\n    value: {},\n    // 主题\n    theme: {\n      default: \"one-dark\"\n    },\n    // 语言\n    lang: {\n      default: \"javascript\"\n    },\n    styles: {\n      default() {\n        return {\n          width: \"100%\",\n          height: \"auto\",\n          minHeight: \"50px\"\n        };\n      }\n    }\n  },\n  components: {\n    codemirror\n  },\n  data() {\n    return {\n      codemirrorValue: `\n        options: {\n          tabSize: 4, // tabsize默认为4\n          // 行号\n          lineNumbers: true,\n          // lint: true,\n          indentUnit: 4,\n          // lineWrapping: true, // 自动换行\n          // 选择代码语言\n          mode: \"text/javascript\",\n          // 主题根据需要自行配置\n          theme: \"one-dark\",\n          //自动提示配置\n          // extraKeys: { Ctrl: \"autocomplete\" },\n          readOnly: false, // 是否只读\n          smartIndent: false,\n          indentWithTabs: true,\n          // matchBrackets: true, // 括号匹配\n          // styleActiveLine: true, // line选择是是否加亮\n  \n          // origLeft: null,\n          // connect: \"align\",\n          // collapseIdentical: false,\n          // highlightDifferences: true,\n          // foldGutter: true,\n  \n          // autofocus: false, // 初始化的时候是否自动获取焦点\n          // gutters: [\n          //   \"CodeMirror-linenumbers\",\n          //   \"CodeMirror-foldgutter\",\n          //   \"CodeMirror-lint-markers\",\n          // ],\n        },`,\n      scoped: \"token\" + createUid(),\n      options: {\n        tabSize: 2,\n        // tabsize默认为4\n        indentUnit: 2,\n        // 缩进\n        // 行号\n        lineNumbers: true,\n        // 选择代码语言\n        mode: \"\",\n        // 主题根据需要自行配置\n        theme: \"\",\n        //自动提示配置\n        readOnly: false,\n        // 是否只读\n        smartIndent: false,\n        // 根据上下文自动缩进 - (关闭避免换行缩进)\n        styleActiveLine: true,\n        // line选择是是否加亮\n        autofocus: false,\n        // 自动获取焦点\n        // lineWrapping: true, // 自动换行\n        // matchBrackets: true, // 括号匹配\n        extraKeys: {\n          // 缩进\n          Tab: cm => {\n            if (cm.somethingSelected()) {\n              // 存在文本选择\n              cm.indentSelection(\"add\"); // 正向缩进文本\n            } else {\n              // 无文本选择\n              // cm.indentLine(cm.getCursor().line, \"add\"); // 整行缩进 不符合预期\n              // 光标处插入 indentUnit 个空格\n              cm.replaceSelection(Array(cm.getOption(\"indentUnit\") + 1).join(\" \"), \"end\", \"+input\");\n            }\n          },\n          // 反向缩进\n          \"Shift-Tab\": cm => {\n            // cm.setValue(js_beautify(cm.getValue()));\n            if (cm.somethingSelected()) {\n              // 存在文本选择\n              cm.indentSelection(\"subtract\"); // 反向缩进\n            } else {\n              // 无文本选择\n              // cm.indentLine(cm.getCursor().line, \"subtract\"); // 直接缩进整行\n              const cursor = cm.getCursor();\n              // 光标回退 indexUnit 字符\n              cm.setCursor({\n                line: cursor.line,\n                ch: cursor.ch - 4\n              });\n            }\n          },\n          // 格式化代码\n          \"Alt-F\": cm => {\n            if (this.lang.indexOf(\"javascript\") != -1) {\n              cm.setValue(js_beautify(cm.getValue()));\n            }\n          },\n          // 保存\n          \"Ctrl-S\": cm => {\n            if (this.lang.indexOf(\"javascript\") != -1) {\n              cm.setValue(js_beautify(cm.getValue()));\n            }\n          }\n        }\n      }\n    };\n  },\n  mounted() {\n    let lang = langs.find(item => this.lang == item.name) || {};\n    this.setTheme(this.theme);\n    this.setMode(lang.id);\n    this.updateStyle();\n  },\n  watch: {\n    lang() {\n      let lang = langs.find(item => this.lang == item.name) || {};\n      this.setMode(lang.id);\n    },\n    theme() {\n      this.setTheme(this.theme);\n    },\n    styles() {\n      this.updateStyle();\n    },\n    value: {\n      immediate: true,\n      handler() {\n        this.codemirrorValue = this.value;\n      }\n    }\n  },\n  methods: {\n    // 删除dom字符串下面的指定元素\n    removeElementFromString(domString, elementId) {\n      // 创建虚拟DOM\n      var parser = new DOMParser();\n      var doc = parser.parseFromString(domString, \"text/html\");\n      // 获取指定元素\n      var element = doc.querySelectorAll(elementId);\n      // 删除元素\n      element.forEach(i => i.parentNode.removeChild(i));\n      // 返回修改后的DOM字符串\n\n      return doc.querySelector(\"body\").innerHTML;\n    },\n    // 初始化\n    onCmReady(cm) {\n      // https://blog.csdn.net/mafan121/article/details/49178945?spm=1001.2101.3001.6650.14&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-14-49178945-blog-106748616.pc_relevant_3mothn_strategy_recovery&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-14-49178945-blog-106748616.pc_relevant_3mothn_strategy_recovery&utm_relevant_index=15\n      // https://blog.csdn.net/weixin_30873847/article/details/95114367?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1-95114367-blog-49178945.pc_relevant_aa2&spm=1001.2101.3001.4242.2&utm_relevant_index=4\n      //  监听输入\n      this.$emit(\"ready\", {\n        theme,\n        langs\n      });\n      cm.on(\"change\", data => {\n        setTimeout(() => {\n          console.log(data.getValue);\n          let value = data.getValue();\n          // 获取code内容\n\n          let htmlDom = document.querySelector(`#${this.scoped} .CodeMirror-code`).innerHTML;\n          // 剔除索引元素\n          htmlDom = this.removeElementFromString(htmlDom, \".CodeMirror-gutter-wrapper\");\n          htmlDom = `<div class=\"CodeMirror-render cm-s-one-dark\"><span class=\"lay-lang\">${this.lang}</span><div class=\"code-main\"><div class=\"code-content\">${htmlDom}</div></div></div>`;\n          this.$emit(\"input\", value);\n          this.$emit(\"change\", htmlDom, this.lang, value);\n        });\n      });\n      // 输入前触发\n      cm.on(\"beforeChange\", data => {\n        let value = data.getValue();\n        this.$emit(\"beforeChange\", value, data);\n      });\n      // 编辑器内容被改变时触发\n      cm.on(\"update\", data => {\n        let value = data.getValue();\n        this.$emit(\"update\", value, data);\n      });\n      // 编辑器获得焦点时触发\n      cm.on(\"focus\", value => {\n        this.$emit(\"focus\", value);\n      });\n      // 编辑器获得焦点时触发\n      cm.on(\"blur\", value => {\n        this.$emit(\"blur\", value);\n      });\n      // 当按下扩展快捷键触发\n      cm.on(\"keyHandled\", value => {\n        this.$emit(\"keyHandled\", value);\n      });\n      // 快捷键设置\n      cm.addKeyMap({\n        // 保存\n        \"Ctrl-S\": cm => {\n          if (this.lang.indexOf(\"javascript\") != -1) {\n            cm.setValue(js_beautify(cm.getValue()));\n          }\n          this.$emit(\"save\");\n        }\n      });\n    },\n    // 获取鼠标选中区域的代码\n    getSelection() {\n      return this.$refs.codemirror.codemirror.getSelection();\n    },\n    // 替换选中区域的代码\n    replaceSelection(value) {\n      this.$refs.codemirror.codemirror.replaceSelection(value);\n    },\n    // undo\n    undo() {\n      this.$refs.codemirror.codemirror.undo(js_beautify(value));\n    },\n    // 回退\n    redo() {\n      this.$refs.codemirror.codemirror.redo(js_beautify(value));\n    },\n    // 刷新\n    refresh() {\n      this.$refs.codemirror.codemirror.refresh();\n    },\n    // 设置编辑器大小\n    setSize(width, height) {\n      this.$refs.codemirror.codemirror.setSize(width, height);\n    },\n    // 设置编辑器内容\n    setValue(value) {\n      this.$refs.codemirror.codemirror.setValue(value);\n    },\n    // 设置只读\n    setReadOnly(value) {\n      this.$refs.codemirror.codemirror.setOption(\"readOnly\", value);\n    },\n    // 设置语言\n    setMode(value) {\n      this.$refs.codemirror.codemirror.setOption(\"mode\", value);\n    },\n    // 设置主题\n    setTheme(value) {\n      this.$refs.codemirror.codemirror.setOption(\"theme\", value);\n    },\n    // 设置快捷键\n    setExtraKeys(extraKeys) {\n      this.$refs.codemirror.codemirror.setOption(\"extraKeys\", {\n        // Tab: function (cm) {},\n        ...extraKeys\n      });\n    },\n    // 格式化代码\n    formatCode() {\n      const code = this.$refs.codemirror.codemirror.getValue();\n      this.$refs.codemirror.codemirror.setValue(js_beautify(code));\n    },\n    // 更新样式\n    updateStyle() {\n      for (let item in this.styles) {\n        this.$refs.codemirror.$el.style[item] = this.styles[item];\n      }\n      let CodeMirror = document.querySelector(`#${this.scoped} .CodeMirror`);\n      let scroll = document.querySelector(`#${this.scoped} .CodeMirror-scroll`);\n      let minHeight = this.styles.minHeight || \"200px\";\n      scroll.style.minHeight = minHeight;\n      CodeMirror.style.minHeight = minHeight;\n      CodeMirror.style.width = \"100%\";\n      this.$refs.codemirror.$el.style.minHeight = minHeight;\n    }\n  }\n};","map":{"version":3,"names":["js_beautify","css_beautify","html_beautify","codemirror","langs","theme","createUid","regxy","reg","empty","uuid","replace","c","r","Math","random","v","toString","model","prop","event","props","value","default","lang","styles","width","height","minHeight","components","data","codemirrorValue","scoped","options","tabSize","indentUnit","lineNumbers","mode","readOnly","smartIndent","styleActiveLine","autofocus","extraKeys","Tab","cm","somethingSelected","indentSelection","replaceSelection","Array","getOption","join","cursor","getCursor","setCursor","line","ch","indexOf","setValue","getValue","mounted","find","item","name","setTheme","setMode","id","updateStyle","watch","immediate","handler","methods","removeElementFromString","domString","elementId","parser","DOMParser","doc","parseFromString","element","querySelectorAll","forEach","i","parentNode","removeChild","querySelector","innerHTML","onCmReady","$emit","on","setTimeout","console","log","htmlDom","document","addKeyMap","getSelection","$refs","undo","redo","refresh","setSize","setReadOnly","setOption","setExtraKeys","formatCode","code","$el","style","CodeMirror","scroll"],"sources":["node_modules/vue2-lay-editor/components/codemirror/codemirror.vue"],"sourcesContent":["<template>\n  <div :id=\"scoped\" class=\"codemirror lay-editor-codemirror\">\n    <div class=\"codemirror-main\">\n      <codemirror\n        ref=\"codemirror\"\n        v-model=\"codemirrorValue\"\n        :options=\"options\"\n        @ready=\"onCmReady\"\n      >\n      </codemirror>\n    </div>\n  </div>\n</template>\n\n<script>\n// 安装 : \"vue-codemirror\": \"^4.0.6\"\nimport { js_beautify, css_beautify, html_beautify } from \"js-beautify\";\nimport { codemirror } from \"vue-codemirror\";\nimport \"codemirror/lib/codemirror.css\";\n// 语言/主题\nimport langs from \"./langs\";\nimport theme from \"./theme\";\n\nconst createUid = (() => {\n  let regxy = /[xy]/g;\n  let reg = /-/g;\n  let empty = \"\";\n  return () => {\n    let uuid = \"xxxxxxxx-xxxx-xxxx-yxxx-xxxxxxxxxxxx\".replace(\n      regxy,\n      function (c) {\n        var r = (Math.random() * 16) | 0,\n          v = c == \"x\" ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n      }\n    );\n    return uuid.replace(reg, empty);\n  };\n})();\nexport default {\n  model: {\n    prop: \"value\",\n    event: \"input\",\n  },\n  props: {\n    value: {},\n    // 主题\n    theme: {\n      default: \"one-dark\",\n    },\n    // 语言\n    lang: {\n      default: \"javascript\",\n    },\n    styles: {\n      default() {\n        return {\n          width: \"100%\",\n          height: \"auto\",\n          minHeight: \"50px\",\n        };\n      },\n    },\n  },\n  components: {\n    codemirror,\n  },\n  data() {\n    return {\n      codemirrorValue: `\n        options: {\n          tabSize: 4, // tabsize默认为4\n          // 行号\n          lineNumbers: true,\n          // lint: true,\n          indentUnit: 4,\n          // lineWrapping: true, // 自动换行\n          // 选择代码语言\n          mode: \"text/javascript\",\n          // 主题根据需要自行配置\n          theme: \"one-dark\",\n          //自动提示配置\n          // extraKeys: { Ctrl: \"autocomplete\" },\n          readOnly: false, // 是否只读\n          smartIndent: false,\n          indentWithTabs: true,\n          // matchBrackets: true, // 括号匹配\n          // styleActiveLine: true, // line选择是是否加亮\n  \n          // origLeft: null,\n          // connect: \"align\",\n          // collapseIdentical: false,\n          // highlightDifferences: true,\n          // foldGutter: true,\n  \n          // autofocus: false, // 初始化的时候是否自动获取焦点\n          // gutters: [\n          //   \"CodeMirror-linenumbers\",\n          //   \"CodeMirror-foldgutter\",\n          //   \"CodeMirror-lint-markers\",\n          // ],\n        },`,\n\n      scoped: \"token\" + createUid(),\n      options: {\n        tabSize: 2, // tabsize默认为4\n        indentUnit: 2, // 缩进\n        // 行号\n        lineNumbers: true,\n        // 选择代码语言\n        mode: \"\",\n        // 主题根据需要自行配置\n        theme: \"\",\n        //自动提示配置\n        readOnly: false, // 是否只读\n        smartIndent: false, // 根据上下文自动缩进 - (关闭避免换行缩进)\n        styleActiveLine: true, // line选择是是否加亮\n        autofocus: false, // 自动获取焦点\n        // lineWrapping: true, // 自动换行\n        // matchBrackets: true, // 括号匹配\n        extraKeys: {\n          // 缩进\n          Tab: (cm) => {\n            if (cm.somethingSelected()) {\n              // 存在文本选择\n              cm.indentSelection(\"add\"); // 正向缩进文本\n            } else {\n              // 无文本选择\n              // cm.indentLine(cm.getCursor().line, \"add\"); // 整行缩进 不符合预期\n              // 光标处插入 indentUnit 个空格\n              cm.replaceSelection(\n                Array(cm.getOption(\"indentUnit\") + 1).join(\" \"),\n                \"end\",\n                \"+input\"\n              );\n            }\n          },\n          // 反向缩进\n          \"Shift-Tab\": (cm) => {\n            // cm.setValue(js_beautify(cm.getValue()));\n            if (cm.somethingSelected()) {\n              // 存在文本选择\n              cm.indentSelection(\"subtract\"); // 反向缩进\n            } else {\n              // 无文本选择\n              // cm.indentLine(cm.getCursor().line, \"subtract\"); // 直接缩进整行\n              const cursor = cm.getCursor();\n              // 光标回退 indexUnit 字符\n              cm.setCursor({ line: cursor.line, ch: cursor.ch - 4 });\n            }\n          },\n          // 格式化代码\n          \"Alt-F\": (cm) => {\n            if (this.lang.indexOf(\"javascript\") != -1) {\n              cm.setValue(js_beautify(cm.getValue()));\n            }\n          },\n          // 保存\n          \"Ctrl-S\": (cm) => {\n            if (this.lang.indexOf(\"javascript\") != -1) {\n              cm.setValue(js_beautify(cm.getValue()));\n            }\n          },\n        },\n      },\n    };\n  },\n  mounted() {\n    let lang = langs.find((item) => this.lang == item.name) || {};\n    this.setTheme(this.theme);\n    this.setMode(lang.id);\n    this.updateStyle();\n  },\n  watch: {\n    lang() {\n      let lang = langs.find((item) => this.lang == item.name) || {};\n      this.setMode(lang.id);\n    },\n    theme() {\n      this.setTheme(this.theme);\n    },\n    styles() {\n      this.updateStyle();\n    },\n    value: {\n      immediate: true,\n      handler() {\n        this.codemirrorValue = this.value;\n      },\n    },\n  },\n  methods: {\n    // 删除dom字符串下面的指定元素\n    removeElementFromString(domString, elementId) {\n      // 创建虚拟DOM\n      var parser = new DOMParser();\n      var doc = parser.parseFromString(domString, \"text/html\");\n      // 获取指定元素\n      var element = doc.querySelectorAll(elementId);\n      // 删除元素\n      element.forEach((i) => i.parentNode.removeChild(i));\n      // 返回修改后的DOM字符串\n\n      return doc.querySelector(\"body\").innerHTML;\n    },\n\n    // 初始化\n    onCmReady(cm) {\n      // https://blog.csdn.net/mafan121/article/details/49178945?spm=1001.2101.3001.6650.14&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-14-49178945-blog-106748616.pc_relevant_3mothn_strategy_recovery&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-14-49178945-blog-106748616.pc_relevant_3mothn_strategy_recovery&utm_relevant_index=15\n      // https://blog.csdn.net/weixin_30873847/article/details/95114367?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1-95114367-blog-49178945.pc_relevant_aa2&spm=1001.2101.3001.4242.2&utm_relevant_index=4\n      //  监听输入\n      this.$emit(\"ready\", {\n        theme,\n        langs,\n      });\n      cm.on(\"change\", (data) => {\n        setTimeout(() => {\n          console.log(data.getValue);\n          let value = data.getValue();\n          // 获取code内容\n\n          let htmlDom = document.querySelector(\n            `#${this.scoped} .CodeMirror-code`\n          ).innerHTML;\n          // 剔除索引元素\n          htmlDom = this.removeElementFromString(\n            htmlDom,\n            \".CodeMirror-gutter-wrapper\"\n          );\n          htmlDom = `<div class=\"CodeMirror-render cm-s-one-dark\"><span class=\"lay-lang\">${this.lang}</span><div class=\"code-main\"><div class=\"code-content\">${htmlDom}</div></div></div>`;\n          this.$emit(\"input\", value);\n          this.$emit(\"change\", htmlDom, this.lang, value);\n        });\n      });\n      // 输入前触发\n      cm.on(\"beforeChange\", (data) => {\n        let value = data.getValue();\n        this.$emit(\"beforeChange\", value, data);\n      });\n      // 编辑器内容被改变时触发\n      cm.on(\"update\", (data) => {\n        let value = data.getValue();\n        this.$emit(\"update\", value, data);\n      });\n      // 编辑器获得焦点时触发\n      cm.on(\"focus\", (value) => {\n        this.$emit(\"focus\", value);\n      });\n      // 编辑器获得焦点时触发\n      cm.on(\"blur\", (value) => {\n        this.$emit(\"blur\", value);\n      });\n      // 当按下扩展快捷键触发\n      cm.on(\"keyHandled\", (value) => {\n        this.$emit(\"keyHandled\", value);\n      });\n      // 快捷键设置\n      cm.addKeyMap({\n        // 保存\n        \"Ctrl-S\": (cm) => {\n          if (this.lang.indexOf(\"javascript\") != -1) {\n            cm.setValue(js_beautify(cm.getValue()));\n          }\n          this.$emit(\"save\");\n        },\n      });\n    },\n    // 获取鼠标选中区域的代码\n    getSelection() {\n      return this.$refs.codemirror.codemirror.getSelection();\n    },\n    // 替换选中区域的代码\n    replaceSelection(value) {\n      this.$refs.codemirror.codemirror.replaceSelection(value);\n    },\n    // undo\n    undo() {\n      this.$refs.codemirror.codemirror.undo(js_beautify(value));\n    },\n    // 回退\n    redo() {\n      this.$refs.codemirror.codemirror.redo(js_beautify(value));\n    },\n    // 刷新\n    refresh() {\n      this.$refs.codemirror.codemirror.refresh();\n    },\n    // 设置编辑器大小\n    setSize(width, height) {\n      this.$refs.codemirror.codemirror.setSize(width, height);\n    },\n    // 设置编辑器内容\n    setValue(value) {\n      this.$refs.codemirror.codemirror.setValue(value);\n    },\n    // 设置只读\n    setReadOnly(value) {\n      this.$refs.codemirror.codemirror.setOption(\"readOnly\", value);\n    },\n    // 设置语言\n    setMode(value) {\n      this.$refs.codemirror.codemirror.setOption(\"mode\", value);\n    },\n    // 设置主题\n    setTheme(value) {\n      this.$refs.codemirror.codemirror.setOption(\"theme\", value);\n    },\n    // 设置快捷键\n    setExtraKeys(extraKeys) {\n      this.$refs.codemirror.codemirror.setOption(\"extraKeys\", {\n        // Tab: function (cm) {},\n        ...extraKeys,\n      });\n    },\n    // 格式化代码\n    formatCode() {\n      const code = this.$refs.codemirror.codemirror.getValue();\n      this.$refs.codemirror.codemirror.setValue(js_beautify(code));\n    },\n    // 更新样式\n    updateStyle() {\n      for (let item in this.styles) {\n        this.$refs.codemirror.$el.style[item] = this.styles[item];\n      }\n      let CodeMirror = document.querySelector(`#${this.scoped} .CodeMirror`);\n      let scroll = document.querySelector(`#${this.scoped} .CodeMirror-scroll`);\n      let minHeight = this.styles.minHeight || \"200px\";\n      scroll.style.minHeight = minHeight;\n      CodeMirror.style.minHeight = minHeight;\n      CodeMirror.style.width = \"100%\";\n      this.$refs.codemirror.$el.style.minHeight = minHeight;\n    },\n  },\n};\n</script>\n\n<style>\n.lay-editor-codemirror .codemirror-main {\n  margin: auto;\n}\n\n.lay-editor-codemirror .codemirror-main .CodeMirror {\n  background: #282c34;\n  height: 100% !important;\n}\n\n.lay-editor-codemirror .codemirror-main .CodeMirror-scroll {\n}\n.codemirror-main .CodeMirror-sizer {\n  margin-bottom: 0 !important;\n}\n\n.lay-editor-codemirror .CodeMirror-scrollbar-filler,\n.lay-editor-codemirror .CodeMirror-gutter-filler {\n  background-color: transparent;\n}\n\n.lay-editor-codemirror .CodeMirror-hscrollbar::-webkit-scrollbar-track {\n  background: transparent !important;\n  background: pink;\n}\n.lay-editor-codemirror .CodeMirror-scroll {\n  padding-bottom: 55px !important;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}