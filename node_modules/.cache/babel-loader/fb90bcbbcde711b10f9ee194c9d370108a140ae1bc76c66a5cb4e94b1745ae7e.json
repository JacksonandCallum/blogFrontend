{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// Stylus mode created by Dmitry Kiselyov http://git.io/AaRB\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"stylus\", function (config) {\n    var indentUnit = config.indentUnit,\n      indentUnitString = '',\n      tagKeywords = keySet(tagKeywords_),\n      tagVariablesRegexp = /^(a|b|i|s|col|em)$/i,\n      propertyKeywords = keySet(propertyKeywords_),\n      nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_),\n      valueKeywords = keySet(valueKeywords_),\n      colorKeywords = keySet(colorKeywords_),\n      documentTypes = keySet(documentTypes_),\n      documentTypesRegexp = wordRegexp(documentTypes_),\n      mediaFeatures = keySet(mediaFeatures_),\n      mediaTypes = keySet(mediaTypes_),\n      fontProperties = keySet(fontProperties_),\n      operatorsRegexp = /^\\s*([.]{2,3}|&&|\\|\\||\\*\\*|[?!=:]?=|[-+*\\/%<>]=?|\\?:|\\~)/,\n      wordOperatorKeywordsRegexp = wordRegexp(wordOperatorKeywords_),\n      blockKeywords = keySet(blockKeywords_),\n      vendorPrefixesRegexp = new RegExp(/^\\-(moz|ms|o|webkit)-/i),\n      commonAtoms = keySet(commonAtoms_),\n      firstWordMatch = \"\",\n      states = {},\n      ch,\n      style,\n      type,\n      override;\n    while (indentUnitString.length < indentUnit) indentUnitString += ' ';\n\n    /**\n     * Tokenizers\n     */\n    function tokenBase(stream, state) {\n      firstWordMatch = stream.string.match(/(^[\\w-]+\\s*=\\s*$)|(^\\s*[\\w-]+\\s*=\\s*[\\w-])|(^\\s*(\\.|#|@|\\$|\\&|\\[|\\d|\\+|::?|\\{|\\>|~|\\/)?\\s*[\\w-]*([a-z0-9-]|\\*|\\/\\*)(\\(|,)?)/);\n      state.context.line.firstWord = firstWordMatch ? firstWordMatch[0].replace(/^\\s*/, \"\") : \"\";\n      state.context.line.indent = stream.indentation();\n      ch = stream.peek();\n\n      // Line comment\n      if (stream.match(\"//\")) {\n        stream.skipToEnd();\n        return [\"comment\", \"comment\"];\n      }\n      // Block comment\n      if (stream.match(\"/*\")) {\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      }\n      // String\n      if (ch == \"\\\"\" || ch == \"'\") {\n        stream.next();\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      }\n      // Def\n      if (ch == \"@\") {\n        stream.next();\n        stream.eatWhile(/[\\w\\\\-]/);\n        return [\"def\", stream.current()];\n      }\n      // ID selector or Hex color\n      if (ch == \"#\") {\n        stream.next();\n        // Hex color\n        if (stream.match(/^[0-9a-f]{3}([0-9a-f]([0-9a-f]{2}){0,2})?\\b(?!-)/i)) {\n          return [\"atom\", \"atom\"];\n        }\n        // ID selector\n        if (stream.match(/^[a-z][\\w-]*/i)) {\n          return [\"builtin\", \"hash\"];\n        }\n      }\n      // Vendor prefixes\n      if (stream.match(vendorPrefixesRegexp)) {\n        return [\"meta\", \"vendor-prefixes\"];\n      }\n      // Numbers\n      if (stream.match(/^-?[0-9]?\\.?[0-9]/)) {\n        stream.eatWhile(/[a-z%]/i);\n        return [\"number\", \"unit\"];\n      }\n      // !important|optional\n      if (ch == \"!\") {\n        stream.next();\n        return [stream.match(/^(important|optional)/i) ? \"keyword\" : \"operator\", \"important\"];\n      }\n      // Class\n      if (ch == \".\" && stream.match(/^\\.[a-z][\\w-]*/i)) {\n        return [\"qualifier\", \"qualifier\"];\n      }\n      // url url-prefix domain regexp\n      if (stream.match(documentTypesRegexp)) {\n        if (stream.peek() == \"(\") state.tokenize = tokenParenthesized;\n        return [\"property\", \"word\"];\n      }\n      // Mixins / Functions\n      if (stream.match(/^[a-z][\\w-]*\\(/i)) {\n        stream.backUp(1);\n        return [\"keyword\", \"mixin\"];\n      }\n      // Block mixins\n      if (stream.match(/^(\\+|-)[a-z][\\w-]*\\(/i)) {\n        stream.backUp(1);\n        return [\"keyword\", \"block-mixin\"];\n      }\n      // Parent Reference BEM naming\n      if (stream.string.match(/^\\s*&/) && stream.match(/^[-_]+[a-z][\\w-]*/)) {\n        return [\"qualifier\", \"qualifier\"];\n      }\n      // / Root Reference & Parent Reference\n      if (stream.match(/^(\\/|&)(-|_|:|\\.|#|[a-z])/)) {\n        stream.backUp(1);\n        return [\"variable-3\", \"reference\"];\n      }\n      if (stream.match(/^&{1}\\s*$/)) {\n        return [\"variable-3\", \"reference\"];\n      }\n      // Word operator\n      if (stream.match(wordOperatorKeywordsRegexp)) {\n        return [\"operator\", \"operator\"];\n      }\n      // Word\n      if (stream.match(/^\\$?[-_]*[a-z0-9]+[\\w-]*/i)) {\n        // Variable\n        if (stream.match(/^(\\.|\\[)[\\w-\\'\\\"\\]]+/i, false)) {\n          if (!wordIsTag(stream.current())) {\n            stream.match('.');\n            return [\"variable-2\", \"variable-name\"];\n          }\n        }\n        return [\"variable-2\", \"word\"];\n      }\n      // Operators\n      if (stream.match(operatorsRegexp)) {\n        return [\"operator\", stream.current()];\n      }\n      // Delimiters\n      if (/[:;,{}\\[\\]\\(\\)]/.test(ch)) {\n        stream.next();\n        return [null, ch];\n      }\n      // Non-detected items\n      stream.next();\n      return [null, null];\n    }\n\n    /**\n     * Token comment\n     */\n    function tokenCComment(stream, state) {\n      var maybeEnd = false,\n        ch;\n      while ((ch = stream.next()) != null) {\n        if (maybeEnd && ch == \"/\") {\n          state.tokenize = null;\n          break;\n        }\n        maybeEnd = ch == \"*\";\n      }\n      return [\"comment\", \"comment\"];\n    }\n\n    /**\n     * Token string\n     */\n    function tokenString(quote) {\n      return function (stream, state) {\n        var escaped = false,\n          ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && !escaped) {\n            if (quote == \")\") stream.backUp(1);\n            break;\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n        return [\"string\", \"string\"];\n      };\n    }\n\n    /**\n     * Token parenthesized\n     */\n    function tokenParenthesized(stream, state) {\n      stream.next(); // Must be \"(\"\n      if (!stream.match(/\\s*[\\\"\\')]/, false)) state.tokenize = tokenString(\")\");else state.tokenize = null;\n      return [null, \"(\"];\n    }\n\n    /**\n     * Context management\n     */\n    function Context(type, indent, prev, line) {\n      this.type = type;\n      this.indent = indent;\n      this.prev = prev;\n      this.line = line || {\n        firstWord: \"\",\n        indent: 0\n      };\n    }\n    function pushContext(state, stream, type, indent) {\n      indent = indent >= 0 ? indent : indentUnit;\n      state.context = new Context(type, stream.indentation() + indent, state.context);\n      return type;\n    }\n    function popContext(state, currentIndent) {\n      var contextIndent = state.context.indent - indentUnit;\n      currentIndent = currentIndent || false;\n      state.context = state.context.prev;\n      if (currentIndent) state.context.indent = contextIndent;\n      return state.context.type;\n    }\n    function pass(type, stream, state) {\n      return states[state.context.type](type, stream, state);\n    }\n    function popAndPass(type, stream, state, n) {\n      for (var i = n || 1; i > 0; i--) state.context = state.context.prev;\n      return pass(type, stream, state);\n    }\n\n    /**\n     * Parser\n     */\n    function wordIsTag(word) {\n      return word.toLowerCase() in tagKeywords;\n    }\n    function wordIsProperty(word) {\n      word = word.toLowerCase();\n      return word in propertyKeywords || word in fontProperties;\n    }\n    function wordIsBlock(word) {\n      return word.toLowerCase() in blockKeywords;\n    }\n    function wordIsVendorPrefix(word) {\n      return word.toLowerCase().match(vendorPrefixesRegexp);\n    }\n    function wordAsValue(word) {\n      var wordLC = word.toLowerCase();\n      var override = \"variable-2\";\n      if (wordIsTag(word)) override = \"tag\";else if (wordIsBlock(word)) override = \"block-keyword\";else if (wordIsProperty(word)) override = \"property\";else if (wordLC in valueKeywords || wordLC in commonAtoms) override = \"atom\";else if (wordLC == \"return\" || wordLC in colorKeywords) override = \"keyword\";\n\n      // Font family\n      else if (word.match(/^[A-Z]/)) override = \"string\";\n      return override;\n    }\n    function typeIsBlock(type, stream) {\n      return endOfLine(stream) && (type == \"{\" || type == \"]\" || type == \"hash\" || type == \"qualifier\") || type == \"block-mixin\";\n    }\n    function typeIsInterpolation(type, stream) {\n      return type == \"{\" && stream.match(/^\\s*\\$?[\\w-]+/i, false);\n    }\n    function typeIsPseudo(type, stream) {\n      return type == \":\" && stream.match(/^[a-z-]+/, false);\n    }\n    function startOfLine(stream) {\n      return stream.sol() || stream.string.match(new RegExp(\"^\\\\s*\" + escapeRegExp(stream.current())));\n    }\n    function endOfLine(stream) {\n      return stream.eol() || stream.match(/^\\s*$/, false);\n    }\n    function firstWordOfLine(line) {\n      var re = /^\\s*[-_]*[a-z0-9]+[\\w-]*/i;\n      var result = typeof line == \"string\" ? line.match(re) : line.string.match(re);\n      return result ? result[0].replace(/^\\s*/, \"\") : \"\";\n    }\n\n    /**\n     * Block\n     */\n    states.block = function (type, stream, state) {\n      if (type == \"comment\" && startOfLine(stream) || type == \",\" && endOfLine(stream) || type == \"mixin\") {\n        return pushContext(state, stream, \"block\", 0);\n      }\n      if (typeIsInterpolation(type, stream)) {\n        return pushContext(state, stream, \"interpolation\");\n      }\n      if (endOfLine(stream) && type == \"]\") {\n        if (!/^\\s*(\\.|#|:|\\[|\\*|&)/.test(stream.string) && !wordIsTag(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n      }\n      if (typeIsBlock(type, stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"}\" && endOfLine(stream)) {\n        return pushContext(state, stream, \"block\", 0);\n      }\n      if (type == \"variable-name\") {\n        if (stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/) || wordIsBlock(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"variableName\");\n        } else {\n          return pushContext(state, stream, \"variableName\", 0);\n        }\n      }\n      if (type == \"=\") {\n        if (!endOfLine(stream) && !wordIsBlock(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"*\") {\n        if (endOfLine(stream) || stream.match(/\\s*(,|\\.|#|\\[|:|{)/, false)) {\n          override = \"tag\";\n          return pushContext(state, stream, \"block\");\n        }\n      }\n      if (typeIsPseudo(type, stream)) {\n        return pushContext(state, stream, \"pseudo\");\n      }\n      if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n        return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n      }\n      if (/@(-(moz|ms|o|webkit)-)?keyframes$/.test(type)) {\n        return pushContext(state, stream, \"keyframes\");\n      }\n      if (/@extends?/.test(type)) {\n        return pushContext(state, stream, \"extend\", 0);\n      }\n      if (type && type.charAt(0) == \"@\") {\n        // Property Lookup\n        if (stream.indentation() > 0 && wordIsProperty(stream.current().slice(1))) {\n          override = \"variable-2\";\n          return \"block\";\n        }\n        if (/(@import|@require|@charset)/.test(type)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"reference\" && endOfLine(stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"(\") {\n        return pushContext(state, stream, \"parens\");\n      }\n      if (type == \"vendor-prefixes\") {\n        return pushContext(state, stream, \"vendorPrefixes\");\n      }\n      if (type == \"word\") {\n        var word = stream.current();\n        override = wordAsValue(word);\n        if (override == \"property\") {\n          if (startOfLine(stream)) {\n            return pushContext(state, stream, \"block\", 0);\n          } else {\n            override = \"atom\";\n            return \"block\";\n          }\n        }\n        if (override == \"tag\") {\n          // tag is a css value\n          if (/embed|menu|pre|progress|sub|table/.test(word)) {\n            if (wordIsProperty(firstWordOfLine(stream))) {\n              override = \"atom\";\n              return \"block\";\n            }\n          }\n\n          // tag is an attribute\n          if (stream.string.match(new RegExp(\"\\\\[\\\\s*\" + word + \"|\" + word + \"\\\\s*\\\\]\"))) {\n            override = \"atom\";\n            return \"block\";\n          }\n\n          // tag is a variable\n          if (tagVariablesRegexp.test(word)) {\n            if (startOfLine(stream) && stream.string.match(/=/) || !startOfLine(stream) && !stream.string.match(/^(\\s*\\.|#|\\&|\\[|\\/|>|\\*)/) && !wordIsTag(firstWordOfLine(stream))) {\n              override = \"variable-2\";\n              if (wordIsBlock(firstWordOfLine(stream))) return \"block\";\n              return pushContext(state, stream, \"block\", 0);\n            }\n          }\n          if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        }\n        if (override == \"block-keyword\") {\n          override = \"keyword\";\n\n          // Postfix conditionals\n          if (stream.current(/(if|unless)/) && !startOfLine(stream)) {\n            return \"block\";\n          }\n          return pushContext(state, stream, \"block\");\n        }\n        if (word == \"return\") return pushContext(state, stream, \"block\", 0);\n\n        // Placeholder selector\n        if (override == \"variable-2\" && stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/)) {\n          return pushContext(state, stream, \"block\");\n        }\n      }\n      return state.context.type;\n    };\n\n    /**\n     * Parens\n     */\n    states.parens = function (type, stream, state) {\n      if (type == \"(\") return pushContext(state, stream, \"parens\");\n      if (type == \")\") {\n        if (state.context.prev.type == \"parens\") {\n          return popContext(state);\n        }\n        if (stream.string.match(/^[a-z][\\w-]*\\(/i) && endOfLine(stream) || wordIsBlock(firstWordOfLine(stream)) || /(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(firstWordOfLine(stream)) || !stream.string.match(/^-?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) && wordIsTag(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"block\");\n        }\n        if (stream.string.match(/^[\\$-]?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) || stream.string.match(/^\\s*(\\(|\\)|[0-9])/) || stream.string.match(/^\\s+[a-z][\\w-]*\\(/i) || stream.string.match(/^\\s+[\\$-]?[a-z]/i)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");else return pushContext(state, stream, \"block\", 0);\n      }\n      if (type && type.charAt(0) == \"@\" && wordIsProperty(stream.current().slice(1))) {\n        override = \"variable-2\";\n      }\n      if (type == \"word\") {\n        var word = stream.current();\n        override = wordAsValue(word);\n        if (override == \"tag\" && tagVariablesRegexp.test(word)) {\n          override = \"variable-2\";\n        }\n        if (override == \"property\" || word == \"to\") override = \"atom\";\n      }\n      if (type == \"variable-name\") {\n        return pushContext(state, stream, \"variableName\");\n      }\n      if (typeIsPseudo(type, stream)) {\n        return pushContext(state, stream, \"pseudo\");\n      }\n      return state.context.type;\n    };\n\n    /**\n     * Vendor prefixes\n     */\n    states.vendorPrefixes = function (type, stream, state) {\n      if (type == \"word\") {\n        override = \"property\";\n        return pushContext(state, stream, \"block\", 0);\n      }\n      return popContext(state);\n    };\n\n    /**\n     * Pseudo\n     */\n    states.pseudo = function (type, stream, state) {\n      if (!wordIsProperty(firstWordOfLine(stream.string))) {\n        stream.match(/^[a-z-]+/);\n        override = \"variable-3\";\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        return popContext(state);\n      }\n      return popAndPass(type, stream, state);\n    };\n\n    /**\n     * atBlock\n     */\n    states.atBlock = function (type, stream, state) {\n      if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\n      if (typeIsBlock(type, stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n      if (typeIsInterpolation(type, stream)) {\n        return pushContext(state, stream, \"interpolation\");\n      }\n      if (type == \"word\") {\n        var word = stream.current().toLowerCase();\n        if (/^(only|not|and|or)$/.test(word)) override = \"keyword\";else if (documentTypes.hasOwnProperty(word)) override = \"tag\";else if (mediaTypes.hasOwnProperty(word)) override = \"attribute\";else if (mediaFeatures.hasOwnProperty(word)) override = \"property\";else if (nonStandardPropertyKeywords.hasOwnProperty(word)) override = \"string-2\";else override = wordAsValue(stream.current());\n        if (override == \"tag\" && endOfLine(stream)) {\n          return pushContext(state, stream, \"block\");\n        }\n      }\n      if (type == \"operator\" && /^(not|and|or)$/.test(stream.current())) {\n        override = \"keyword\";\n      }\n      return state.context.type;\n    };\n    states.atBlock_parens = function (type, stream, state) {\n      if (type == \"{\" || type == \"}\") return state.context.type;\n      if (type == \")\") {\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");else return pushContext(state, stream, \"atBlock\");\n      }\n      if (type == \"word\") {\n        var word = stream.current().toLowerCase();\n        override = wordAsValue(word);\n        if (/^(max|min)/.test(word)) override = \"property\";\n        if (override == \"tag\") {\n          tagVariablesRegexp.test(word) ? override = \"variable-2\" : override = \"atom\";\n        }\n        return state.context.type;\n      }\n      return states.atBlock(type, stream, state);\n    };\n\n    /**\n     * Keyframes\n     */\n    states.keyframes = function (type, stream, state) {\n      if (stream.indentation() == \"0\" && (type == \"}\" && startOfLine(stream) || type == \"]\" || type == \"hash\" || type == \"qualifier\" || wordIsTag(stream.current()))) {\n        return popAndPass(type, stream, state);\n      }\n      if (type == \"{\") return pushContext(state, stream, \"keyframes\");\n      if (type == \"}\") {\n        if (startOfLine(stream)) return popContext(state, true);else return pushContext(state, stream, \"keyframes\");\n      }\n      if (type == \"unit\" && /^[0-9]+\\%$/.test(stream.current())) {\n        return pushContext(state, stream, \"keyframes\");\n      }\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        if (override == \"block-keyword\") {\n          override = \"keyword\";\n          return pushContext(state, stream, \"keyframes\");\n        }\n      }\n      if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n        return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n      }\n      if (type == \"mixin\") {\n        return pushContext(state, stream, \"block\", 0);\n      }\n      return state.context.type;\n    };\n\n    /**\n     * Interpolation\n     */\n    states.interpolation = function (type, stream, state) {\n      if (type == \"{\") popContext(state) && pushContext(state, stream, \"block\");\n      if (type == \"}\") {\n        if (stream.string.match(/^\\s*(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/i) || stream.string.match(/^\\s*[a-z]/i) && wordIsTag(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"block\");\n        }\n        if (!stream.string.match(/^(\\{|\\s*\\&)/) || stream.match(/\\s*[\\w-]/, false)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"variable-name\") {\n        return pushContext(state, stream, \"variableName\", 0);\n      }\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        if (override == \"tag\") override = \"atom\";\n      }\n      return state.context.type;\n    };\n\n    /**\n     * Extend/s\n     */\n    states.extend = function (type, stream, state) {\n      if (type == \"[\" || type == \"=\") return \"extend\";\n      if (type == \"]\") return popContext(state);\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        return \"extend\";\n      }\n      return popContext(state);\n    };\n\n    /**\n     * Variable name\n     */\n    states.variableName = function (type, stream, state) {\n      if (type == \"string\" || type == \"[\" || type == \"]\" || stream.current().match(/^(\\.|\\$)/)) {\n        if (stream.current().match(/^\\.[\\w-]+/i)) override = \"variable-2\";\n        return \"variableName\";\n      }\n      return popAndPass(type, stream, state);\n    };\n    return {\n      startState: function (base) {\n        return {\n          tokenize: null,\n          state: \"block\",\n          context: new Context(\"block\", base || 0, null)\n        };\n      },\n      token: function (stream, state) {\n        if (!state.tokenize && stream.eatSpace()) return null;\n        style = (state.tokenize || tokenBase)(stream, state);\n        if (style && typeof style == \"object\") {\n          type = style[1];\n          style = style[0];\n        }\n        override = style;\n        state.state = states[state.state](type, stream, state);\n        return override;\n      },\n      indent: function (state, textAfter, line) {\n        var cx = state.context,\n          ch = textAfter && textAfter.charAt(0),\n          indent = cx.indent,\n          lineFirstWord = firstWordOfLine(textAfter),\n          lineIndent = line.match(/^\\s*/)[0].replace(/\\t/g, indentUnitString).length,\n          prevLineFirstWord = state.context.prev ? state.context.prev.line.firstWord : \"\",\n          prevLineIndent = state.context.prev ? state.context.prev.line.indent : lineIndent;\n        if (cx.prev && (ch == \"}\" && (cx.type == \"block\" || cx.type == \"atBlock\" || cx.type == \"keyframes\") || ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") || ch == \"{\" && cx.type == \"at\")) {\n          indent = cx.indent - indentUnit;\n        } else if (!/(\\})/.test(ch)) {\n          if (/@|\\$|\\d/.test(ch) || /^\\{/.test(textAfter) || /^\\s*\\/(\\/|\\*)/.test(textAfter) || /^\\s*\\/\\*/.test(prevLineFirstWord) || /^\\s*[\\w-\\.\\[\\]\\'\\\"]+\\s*(\\?|:|\\+)?=/i.test(textAfter) || /^(\\+|-)?[a-z][\\w-]*\\(/i.test(textAfter) || /^return/.test(textAfter) || wordIsBlock(lineFirstWord)) {\n            indent = lineIndent;\n          } else if (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(ch) || wordIsTag(lineFirstWord)) {\n            if (/\\,\\s*$/.test(prevLineFirstWord)) {\n              indent = prevLineIndent;\n            } else if (/^\\s+/.test(line) && (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(prevLineFirstWord) || wordIsTag(prevLineFirstWord))) {\n              indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + indentUnit;\n            } else {\n              indent = lineIndent;\n            }\n          } else if (!/,\\s*$/.test(line) && (wordIsVendorPrefix(lineFirstWord) || wordIsProperty(lineFirstWord))) {\n            if (wordIsBlock(prevLineFirstWord)) {\n              indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + indentUnit;\n            } else if (/^\\{/.test(prevLineFirstWord)) {\n              indent = lineIndent <= prevLineIndent ? lineIndent : prevLineIndent + indentUnit;\n            } else if (wordIsVendorPrefix(prevLineFirstWord) || wordIsProperty(prevLineFirstWord)) {\n              indent = lineIndent >= prevLineIndent ? prevLineIndent : lineIndent;\n            } else if (/^(\\.|#|:|\\[|\\*|&|@|\\+|\\-|>|~|\\/)/.test(prevLineFirstWord) || /=\\s*$/.test(prevLineFirstWord) || wordIsTag(prevLineFirstWord) || /^\\$[\\w-\\.\\[\\]\\'\\\"]/.test(prevLineFirstWord)) {\n              indent = prevLineIndent + indentUnit;\n            } else {\n              indent = lineIndent;\n            }\n          }\n        }\n        return indent;\n      },\n      electricChars: \"}\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      lineComment: \"//\",\n      fold: \"indent\"\n    };\n  });\n\n  // developer.mozilla.org/en-US/docs/Web/HTML/Element\n  var tagKeywords_ = [\"a\", \"abbr\", \"address\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"bdi\", \"bdo\", \"bgsound\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"cite\", \"code\", \"col\", \"colgroup\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"img\", \"input\", \"ins\", \"kbd\", \"keygen\", \"label\", \"legend\", \"li\", \"link\", \"main\", \"map\", \"mark\", \"marquee\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"nav\", \"nobr\", \"noframes\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"pre\", \"progress\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"small\", \"source\", \"span\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"tr\", \"track\", \"u\", \"ul\", \"var\", \"video\"];\n\n  // github.com/codemirror/CodeMirror/blob/master/mode/css/css.js\n  // Note, \"url-prefix\" should precede \"url\" in order to match correctly in documentTypesRegexp\n  var documentTypes_ = [\"domain\", \"regexp\", \"url-prefix\", \"url\"];\n  var mediaTypes_ = [\"all\", \"aural\", \"braille\", \"handheld\", \"print\", \"projection\", \"screen\", \"tty\", \"tv\", \"embossed\"];\n  var mediaFeatures_ = [\"width\", \"min-width\", \"max-width\", \"height\", \"min-height\", \"max-height\", \"device-width\", \"min-device-width\", \"max-device-width\", \"device-height\", \"min-device-height\", \"max-device-height\", \"aspect-ratio\", \"min-aspect-ratio\", \"max-aspect-ratio\", \"device-aspect-ratio\", \"min-device-aspect-ratio\", \"max-device-aspect-ratio\", \"color\", \"min-color\", \"max-color\", \"color-index\", \"min-color-index\", \"max-color-index\", \"monochrome\", \"min-monochrome\", \"max-monochrome\", \"resolution\", \"min-resolution\", \"max-resolution\", \"scan\", \"grid\", \"dynamic-range\", \"video-dynamic-range\"];\n  var propertyKeywords_ = [\"align-content\", \"align-items\", \"align-self\", \"alignment-adjust\", \"alignment-baseline\", \"anchor-point\", \"animation\", \"animation-delay\", \"animation-direction\", \"animation-duration\", \"animation-fill-mode\", \"animation-iteration-count\", \"animation-name\", \"animation-play-state\", \"animation-timing-function\", \"appearance\", \"azimuth\", \"backface-visibility\", \"background\", \"background-attachment\", \"background-clip\", \"background-color\", \"background-image\", \"background-origin\", \"background-position\", \"background-repeat\", \"background-size\", \"baseline-shift\", \"binding\", \"bleed\", \"bookmark-label\", \"bookmark-level\", \"bookmark-state\", \"bookmark-target\", \"border\", \"border-bottom\", \"border-bottom-color\", \"border-bottom-left-radius\", \"border-bottom-right-radius\", \"border-bottom-style\", \"border-bottom-width\", \"border-collapse\", \"border-color\", \"border-image\", \"border-image-outset\", \"border-image-repeat\", \"border-image-slice\", \"border-image-source\", \"border-image-width\", \"border-left\", \"border-left-color\", \"border-left-style\", \"border-left-width\", \"border-radius\", \"border-right\", \"border-right-color\", \"border-right-style\", \"border-right-width\", \"border-spacing\", \"border-style\", \"border-top\", \"border-top-color\", \"border-top-left-radius\", \"border-top-right-radius\", \"border-top-style\", \"border-top-width\", \"border-width\", \"bottom\", \"box-decoration-break\", \"box-shadow\", \"box-sizing\", \"break-after\", \"break-before\", \"break-inside\", \"caption-side\", \"clear\", \"clip\", \"color\", \"color-profile\", \"column-count\", \"column-fill\", \"column-gap\", \"column-rule\", \"column-rule-color\", \"column-rule-style\", \"column-rule-width\", \"column-span\", \"column-width\", \"columns\", \"content\", \"counter-increment\", \"counter-reset\", \"crop\", \"cue\", \"cue-after\", \"cue-before\", \"cursor\", \"direction\", \"display\", \"dominant-baseline\", \"drop-initial-after-adjust\", \"drop-initial-after-align\", \"drop-initial-before-adjust\", \"drop-initial-before-align\", \"drop-initial-size\", \"drop-initial-value\", \"elevation\", \"empty-cells\", \"fit\", \"fit-position\", \"flex\", \"flex-basis\", \"flex-direction\", \"flex-flow\", \"flex-grow\", \"flex-shrink\", \"flex-wrap\", \"float\", \"float-offset\", \"flow-from\", \"flow-into\", \"font\", \"font-feature-settings\", \"font-family\", \"font-kerning\", \"font-language-override\", \"font-size\", \"font-size-adjust\", \"font-stretch\", \"font-style\", \"font-synthesis\", \"font-variant\", \"font-variant-alternates\", \"font-variant-caps\", \"font-variant-east-asian\", \"font-variant-ligatures\", \"font-variant-numeric\", \"font-variant-position\", \"font-weight\", \"grid\", \"grid-area\", \"grid-auto-columns\", \"grid-auto-flow\", \"grid-auto-position\", \"grid-auto-rows\", \"grid-column\", \"grid-column-end\", \"grid-column-start\", \"grid-row\", \"grid-row-end\", \"grid-row-start\", \"grid-template\", \"grid-template-areas\", \"grid-template-columns\", \"grid-template-rows\", \"hanging-punctuation\", \"height\", \"hyphens\", \"icon\", \"image-orientation\", \"image-rendering\", \"image-resolution\", \"inline-box-align\", \"justify-content\", \"left\", \"letter-spacing\", \"line-break\", \"line-height\", \"line-stacking\", \"line-stacking-ruby\", \"line-stacking-shift\", \"line-stacking-strategy\", \"list-style\", \"list-style-image\", \"list-style-position\", \"list-style-type\", \"margin\", \"margin-bottom\", \"margin-left\", \"margin-right\", \"margin-top\", \"marker-offset\", \"marks\", \"marquee-direction\", \"marquee-loop\", \"marquee-play-count\", \"marquee-speed\", \"marquee-style\", \"max-height\", \"max-width\", \"min-height\", \"min-width\", \"move-to\", \"nav-down\", \"nav-index\", \"nav-left\", \"nav-right\", \"nav-up\", \"object-fit\", \"object-position\", \"opacity\", \"order\", \"orphans\", \"outline\", \"outline-color\", \"outline-offset\", \"outline-style\", \"outline-width\", \"overflow\", \"overflow-style\", \"overflow-wrap\", \"overflow-x\", \"overflow-y\", \"padding\", \"padding-bottom\", \"padding-left\", \"padding-right\", \"padding-top\", \"page\", \"page-break-after\", \"page-break-before\", \"page-break-inside\", \"page-policy\", \"pause\", \"pause-after\", \"pause-before\", \"perspective\", \"perspective-origin\", \"pitch\", \"pitch-range\", \"play-during\", \"position\", \"presentation-level\", \"punctuation-trim\", \"quotes\", \"region-break-after\", \"region-break-before\", \"region-break-inside\", \"region-fragment\", \"rendering-intent\", \"resize\", \"rest\", \"rest-after\", \"rest-before\", \"richness\", \"right\", \"rotation\", \"rotation-point\", \"ruby-align\", \"ruby-overhang\", \"ruby-position\", \"ruby-span\", \"shape-image-threshold\", \"shape-inside\", \"shape-margin\", \"shape-outside\", \"size\", \"speak\", \"speak-as\", \"speak-header\", \"speak-numeral\", \"speak-punctuation\", \"speech-rate\", \"stress\", \"string-set\", \"tab-size\", \"table-layout\", \"target\", \"target-name\", \"target-new\", \"target-position\", \"text-align\", \"text-align-last\", \"text-decoration\", \"text-decoration-color\", \"text-decoration-line\", \"text-decoration-skip\", \"text-decoration-style\", \"text-emphasis\", \"text-emphasis-color\", \"text-emphasis-position\", \"text-emphasis-style\", \"text-height\", \"text-indent\", \"text-justify\", \"text-outline\", \"text-overflow\", \"text-shadow\", \"text-size-adjust\", \"text-space-collapse\", \"text-transform\", \"text-underline-position\", \"text-wrap\", \"top\", \"transform\", \"transform-origin\", \"transform-style\", \"transition\", \"transition-delay\", \"transition-duration\", \"transition-property\", \"transition-timing-function\", \"unicode-bidi\", \"vertical-align\", \"visibility\", \"voice-balance\", \"voice-duration\", \"voice-family\", \"voice-pitch\", \"voice-range\", \"voice-rate\", \"voice-stress\", \"voice-volume\", \"volume\", \"white-space\", \"widows\", \"width\", \"will-change\", \"word-break\", \"word-spacing\", \"word-wrap\", \"z-index\", \"clip-path\", \"clip-rule\", \"mask\", \"enable-background\", \"filter\", \"flood-color\", \"flood-opacity\", \"lighting-color\", \"stop-color\", \"stop-opacity\", \"pointer-events\", \"color-interpolation\", \"color-interpolation-filters\", \"color-rendering\", \"fill\", \"fill-opacity\", \"fill-rule\", \"image-rendering\", \"marker\", \"marker-end\", \"marker-mid\", \"marker-start\", \"shape-rendering\", \"stroke\", \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-linecap\", \"stroke-linejoin\", \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\", \"text-rendering\", \"baseline-shift\", \"dominant-baseline\", \"glyph-orientation-horizontal\", \"glyph-orientation-vertical\", \"text-anchor\", \"writing-mode\", \"font-smoothing\", \"osx-font-smoothing\"];\n  var nonStandardPropertyKeywords_ = [\"scrollbar-arrow-color\", \"scrollbar-base-color\", \"scrollbar-dark-shadow-color\", \"scrollbar-face-color\", \"scrollbar-highlight-color\", \"scrollbar-shadow-color\", \"scrollbar-3d-light-color\", \"scrollbar-track-color\", \"shape-inside\", \"searchfield-cancel-button\", \"searchfield-decoration\", \"searchfield-results-button\", \"searchfield-results-decoration\", \"zoom\"];\n  var fontProperties_ = [\"font-family\", \"src\", \"unicode-range\", \"font-variant\", \"font-feature-settings\", \"font-stretch\", \"font-weight\", \"font-style\"];\n  var colorKeywords_ = [\"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\", \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\", \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\", \"cornsilk\", \"crimson\", \"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\", \"darkgray\", \"darkgreen\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\", \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\", \"darkslateblue\", \"darkslategray\", \"darkturquoise\", \"darkviolet\", \"deeppink\", \"deepskyblue\", \"dimgray\", \"dodgerblue\", \"firebrick\", \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\", \"gold\", \"goldenrod\", \"gray\", \"grey\", \"green\", \"greenyellow\", \"honeydew\", \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\", \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\", \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightpink\", \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\", \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\", \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\", \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\", \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\", \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\", \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\", \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\", \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\", \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\", \"slateblue\", \"slategray\", \"snow\", \"springgreen\", \"steelblue\", \"tan\", \"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\", \"whitesmoke\", \"yellow\", \"yellowgreen\"];\n  var valueKeywords_ = [\"above\", \"absolute\", \"activeborder\", \"additive\", \"activecaption\", \"afar\", \"after-white-space\", \"ahead\", \"alias\", \"all\", \"all-scroll\", \"alphabetic\", \"alternate\", \"always\", \"amharic\", \"amharic-abegede\", \"antialiased\", \"appworkspace\", \"arabic-indic\", \"armenian\", \"asterisks\", \"attr\", \"auto\", \"avoid\", \"avoid-column\", \"avoid-page\", \"avoid-region\", \"background\", \"backwards\", \"baseline\", \"below\", \"bidi-override\", \"binary\", \"bengali\", \"blink\", \"block\", \"block-axis\", \"bold\", \"bolder\", \"border\", \"border-box\", \"both\", \"bottom\", \"break\", \"break-all\", \"break-word\", \"bullets\", \"button\", \"buttonface\", \"buttonhighlight\", \"buttonshadow\", \"buttontext\", \"calc\", \"cambodian\", \"capitalize\", \"caps-lock-indicator\", \"caption\", \"captiontext\", \"caret\", \"cell\", \"center\", \"checkbox\", \"circle\", \"cjk-decimal\", \"cjk-earthly-branch\", \"cjk-heavenly-stem\", \"cjk-ideographic\", \"clear\", \"clip\", \"close-quote\", \"col-resize\", \"collapse\", \"column\", \"compact\", \"condensed\", \"conic-gradient\", \"contain\", \"content\", \"contents\", \"content-box\", \"context-menu\", \"continuous\", \"copy\", \"counter\", \"counters\", \"cover\", \"crop\", \"cross\", \"crosshair\", \"currentcolor\", \"cursive\", \"cyclic\", \"dashed\", \"decimal\", \"decimal-leading-zero\", \"default\", \"default-button\", \"destination-atop\", \"destination-in\", \"destination-out\", \"destination-over\", \"devanagari\", \"disc\", \"discard\", \"disclosure-closed\", \"disclosure-open\", \"document\", \"dot-dash\", \"dot-dot-dash\", \"dotted\", \"double\", \"down\", \"e-resize\", \"ease\", \"ease-in\", \"ease-in-out\", \"ease-out\", \"element\", \"ellipse\", \"ellipsis\", \"embed\", \"end\", \"ethiopic\", \"ethiopic-abegede\", \"ethiopic-abegede-am-et\", \"ethiopic-abegede-gez\", \"ethiopic-abegede-ti-er\", \"ethiopic-abegede-ti-et\", \"ethiopic-halehame-aa-er\", \"ethiopic-halehame-aa-et\", \"ethiopic-halehame-am-et\", \"ethiopic-halehame-gez\", \"ethiopic-halehame-om-et\", \"ethiopic-halehame-sid-et\", \"ethiopic-halehame-so-et\", \"ethiopic-halehame-ti-er\", \"ethiopic-halehame-ti-et\", \"ethiopic-halehame-tig\", \"ethiopic-numeric\", \"ew-resize\", \"expanded\", \"extends\", \"extra-condensed\", \"extra-expanded\", \"fantasy\", \"fast\", \"fill\", \"fixed\", \"flat\", \"flex\", \"footnotes\", \"forwards\", \"from\", \"geometricPrecision\", \"georgian\", \"graytext\", \"groove\", \"gujarati\", \"gurmukhi\", \"hand\", \"hangul\", \"hangul-consonant\", \"hebrew\", \"help\", \"hidden\", \"hide\", \"high\", \"higher\", \"highlight\", \"highlighttext\", \"hiragana\", \"hiragana-iroha\", \"horizontal\", \"hsl\", \"hsla\", \"icon\", \"ignore\", \"inactiveborder\", \"inactivecaption\", \"inactivecaptiontext\", \"infinite\", \"infobackground\", \"infotext\", \"inherit\", \"initial\", \"inline\", \"inline-axis\", \"inline-block\", \"inline-flex\", \"inline-table\", \"inset\", \"inside\", \"intrinsic\", \"invert\", \"italic\", \"japanese-formal\", \"japanese-informal\", \"justify\", \"kannada\", \"katakana\", \"katakana-iroha\", \"keep-all\", \"khmer\", \"korean-hangul-formal\", \"korean-hanja-formal\", \"korean-hanja-informal\", \"landscape\", \"lao\", \"large\", \"larger\", \"left\", \"level\", \"lighter\", \"line-through\", \"linear\", \"linear-gradient\", \"lines\", \"list-item\", \"listbox\", \"listitem\", \"local\", \"logical\", \"loud\", \"lower\", \"lower-alpha\", \"lower-armenian\", \"lower-greek\", \"lower-hexadecimal\", \"lower-latin\", \"lower-norwegian\", \"lower-roman\", \"lowercase\", \"ltr\", \"malayalam\", \"match\", \"matrix\", \"matrix3d\", \"media-play-button\", \"media-slider\", \"media-sliderthumb\", \"media-volume-slider\", \"media-volume-sliderthumb\", \"medium\", \"menu\", \"menulist\", \"menulist-button\", \"menutext\", \"message-box\", \"middle\", \"min-intrinsic\", \"mix\", \"mongolian\", \"monospace\", \"move\", \"multiple\", \"myanmar\", \"n-resize\", \"narrower\", \"ne-resize\", \"nesw-resize\", \"no-close-quote\", \"no-drop\", \"no-open-quote\", \"no-repeat\", \"none\", \"normal\", \"not-allowed\", \"nowrap\", \"ns-resize\", \"numbers\", \"numeric\", \"nw-resize\", \"nwse-resize\", \"oblique\", \"octal\", \"open-quote\", \"optimizeLegibility\", \"optimizeSpeed\", \"oriya\", \"oromo\", \"outset\", \"outside\", \"outside-shape\", \"overlay\", \"overline\", \"padding\", \"padding-box\", \"painted\", \"page\", \"paused\", \"persian\", \"perspective\", \"plus-darker\", \"plus-lighter\", \"pointer\", \"polygon\", \"portrait\", \"pre\", \"pre-line\", \"pre-wrap\", \"preserve-3d\", \"progress\", \"push-button\", \"radial-gradient\", \"radio\", \"read-only\", \"read-write\", \"read-write-plaintext-only\", \"rectangle\", \"region\", \"relative\", \"repeat\", \"repeating-linear-gradient\", \"repeating-radial-gradient\", \"repeating-conic-gradient\", \"repeat-x\", \"repeat-y\", \"reset\", \"reverse\", \"rgb\", \"rgba\", \"ridge\", \"right\", \"rotate\", \"rotate3d\", \"rotateX\", \"rotateY\", \"rotateZ\", \"round\", \"row-resize\", \"rtl\", \"run-in\", \"running\", \"s-resize\", \"sans-serif\", \"scale\", \"scale3d\", \"scaleX\", \"scaleY\", \"scaleZ\", \"scroll\", \"scrollbar\", \"scroll-position\", \"se-resize\", \"searchfield\", \"searchfield-cancel-button\", \"searchfield-decoration\", \"searchfield-results-button\", \"searchfield-results-decoration\", \"semi-condensed\", \"semi-expanded\", \"separate\", \"serif\", \"show\", \"sidama\", \"simp-chinese-formal\", \"simp-chinese-informal\", \"single\", \"skew\", \"skewX\", \"skewY\", \"skip-white-space\", \"slide\", \"slider-horizontal\", \"slider-vertical\", \"sliderthumb-horizontal\", \"sliderthumb-vertical\", \"slow\", \"small\", \"small-caps\", \"small-caption\", \"smaller\", \"solid\", \"somali\", \"source-atop\", \"source-in\", \"source-out\", \"source-over\", \"space\", \"spell-out\", \"square\", \"square-button\", \"standard\", \"start\", \"static\", \"status-bar\", \"stretch\", \"stroke\", \"sub\", \"subpixel-antialiased\", \"super\", \"sw-resize\", \"symbolic\", \"symbols\", \"table\", \"table-caption\", \"table-cell\", \"table-column\", \"table-column-group\", \"table-footer-group\", \"table-header-group\", \"table-row\", \"table-row-group\", \"tamil\", \"telugu\", \"text\", \"text-bottom\", \"text-top\", \"textarea\", \"textfield\", \"thai\", \"thick\", \"thin\", \"threeddarkshadow\", \"threedface\", \"threedhighlight\", \"threedlightshadow\", \"threedshadow\", \"tibetan\", \"tigre\", \"tigrinya-er\", \"tigrinya-er-abegede\", \"tigrinya-et\", \"tigrinya-et-abegede\", \"to\", \"top\", \"trad-chinese-formal\", \"trad-chinese-informal\", \"translate\", \"translate3d\", \"translateX\", \"translateY\", \"translateZ\", \"transparent\", \"ultra-condensed\", \"ultra-expanded\", \"underline\", \"up\", \"upper-alpha\", \"upper-armenian\", \"upper-greek\", \"upper-hexadecimal\", \"upper-latin\", \"upper-norwegian\", \"upper-roman\", \"uppercase\", \"urdu\", \"url\", \"var\", \"vertical\", \"vertical-text\", \"visible\", \"visibleFill\", \"visiblePainted\", \"visibleStroke\", \"visual\", \"w-resize\", \"wait\", \"wave\", \"wider\", \"window\", \"windowframe\", \"windowtext\", \"words\", \"x-large\", \"x-small\", \"xor\", \"xx-large\", \"xx-small\", \"bicubic\", \"optimizespeed\", \"grayscale\", \"row\", \"row-reverse\", \"wrap\", \"wrap-reverse\", \"column-reverse\", \"flex-start\", \"flex-end\", \"space-between\", \"space-around\", \"unset\"];\n  var wordOperatorKeywords_ = [\"in\", \"and\", \"or\", \"not\", \"is not\", \"is a\", \"is\", \"isnt\", \"defined\", \"if unless\"],\n    blockKeywords_ = [\"for\", \"if\", \"else\", \"unless\", \"from\", \"to\"],\n    commonAtoms_ = [\"null\", \"true\", \"false\", \"href\", \"title\", \"type\", \"not-allowed\", \"readonly\", \"disabled\"],\n    commonDef_ = [\"@font-face\", \"@keyframes\", \"@media\", \"@viewport\", \"@page\", \"@host\", \"@supports\", \"@block\", \"@css\"];\n  var hintWords = tagKeywords_.concat(documentTypes_, mediaTypes_, mediaFeatures_, propertyKeywords_, nonStandardPropertyKeywords_, colorKeywords_, valueKeywords_, fontProperties_, wordOperatorKeywords_, blockKeywords_, commonAtoms_, commonDef_);\n  function wordRegexp(words) {\n    words = words.sort(function (a, b) {\n      return b > a;\n    });\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n  function keySet(array) {\n    var keys = {};\n    for (var i = 0; i < array.length; ++i) keys[array[i]] = true;\n    return keys;\n  }\n  function escapeRegExp(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n  }\n  CodeMirror.registerHelper(\"hintWords\", \"stylus\", hintWords);\n  CodeMirror.defineMIME(\"text/x-styl\", \"stylus\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","indentUnit","indentUnitString","tagKeywords","keySet","tagKeywords_","tagVariablesRegexp","propertyKeywords","propertyKeywords_","nonStandardPropertyKeywords","nonStandardPropertyKeywords_","valueKeywords","valueKeywords_","colorKeywords","colorKeywords_","documentTypes","documentTypes_","documentTypesRegexp","wordRegexp","mediaFeatures","mediaFeatures_","mediaTypes","mediaTypes_","fontProperties","fontProperties_","operatorsRegexp","wordOperatorKeywordsRegexp","wordOperatorKeywords_","blockKeywords","blockKeywords_","vendorPrefixesRegexp","RegExp","commonAtoms","commonAtoms_","firstWordMatch","states","ch","style","type","override","length","tokenBase","stream","state","string","match","context","line","firstWord","replace","indent","indentation","peek","skipToEnd","tokenize","tokenCComment","next","tokenString","eatWhile","current","tokenParenthesized","backUp","wordIsTag","test","maybeEnd","quote","escaped","Context","prev","pushContext","popContext","currentIndent","contextIndent","pass","popAndPass","n","i","word","toLowerCase","wordIsProperty","wordIsBlock","wordIsVendorPrefix","wordAsValue","wordLC","typeIsBlock","endOfLine","typeIsInterpolation","typeIsPseudo","startOfLine","sol","escapeRegExp","eol","firstWordOfLine","re","result","block","charAt","slice","parens","vendorPrefixes","pseudo","atBlock","hasOwnProperty","atBlock_parens","keyframes","interpolation","extend","variableName","startState","base","token","eatSpace","textAfter","cx","lineFirstWord","lineIndent","prevLineFirstWord","prevLineIndent","electricChars","blockCommentStart","blockCommentEnd","blockCommentContinue","lineComment","fold","commonDef_","hintWords","concat","words","sort","a","b","join","array","keys","text","registerHelper","defineMIME"],"sources":["D:/Java_Projects/MYBLOG-备份/frontend/blog-frontend/node_modules/codemirror/mode/stylus/stylus.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// Stylus mode created by Dmitry Kiselyov http://git.io/AaRB\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"stylus\", function(config) {\n    var indentUnit = config.indentUnit,\n        indentUnitString = '',\n        tagKeywords = keySet(tagKeywords_),\n        tagVariablesRegexp = /^(a|b|i|s|col|em)$/i,\n        propertyKeywords = keySet(propertyKeywords_),\n        nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_),\n        valueKeywords = keySet(valueKeywords_),\n        colorKeywords = keySet(colorKeywords_),\n        documentTypes = keySet(documentTypes_),\n        documentTypesRegexp = wordRegexp(documentTypes_),\n        mediaFeatures = keySet(mediaFeatures_),\n        mediaTypes = keySet(mediaTypes_),\n        fontProperties = keySet(fontProperties_),\n        operatorsRegexp = /^\\s*([.]{2,3}|&&|\\|\\||\\*\\*|[?!=:]?=|[-+*\\/%<>]=?|\\?:|\\~)/,\n        wordOperatorKeywordsRegexp = wordRegexp(wordOperatorKeywords_),\n        blockKeywords = keySet(blockKeywords_),\n        vendorPrefixesRegexp = new RegExp(/^\\-(moz|ms|o|webkit)-/i),\n        commonAtoms = keySet(commonAtoms_),\n        firstWordMatch = \"\",\n        states = {},\n        ch,\n        style,\n        type,\n        override;\n\n    while (indentUnitString.length < indentUnit) indentUnitString += ' ';\n\n    /**\n     * Tokenizers\n     */\n    function tokenBase(stream, state) {\n      firstWordMatch = stream.string.match(/(^[\\w-]+\\s*=\\s*$)|(^\\s*[\\w-]+\\s*=\\s*[\\w-])|(^\\s*(\\.|#|@|\\$|\\&|\\[|\\d|\\+|::?|\\{|\\>|~|\\/)?\\s*[\\w-]*([a-z0-9-]|\\*|\\/\\*)(\\(|,)?)/);\n      state.context.line.firstWord = firstWordMatch ? firstWordMatch[0].replace(/^\\s*/, \"\") : \"\";\n      state.context.line.indent = stream.indentation();\n      ch = stream.peek();\n\n      // Line comment\n      if (stream.match(\"//\")) {\n        stream.skipToEnd();\n        return [\"comment\", \"comment\"];\n      }\n      // Block comment\n      if (stream.match(\"/*\")) {\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      }\n      // String\n      if (ch == \"\\\"\" || ch == \"'\") {\n        stream.next();\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      }\n      // Def\n      if (ch == \"@\") {\n        stream.next();\n        stream.eatWhile(/[\\w\\\\-]/);\n        return [\"def\", stream.current()];\n      }\n      // ID selector or Hex color\n      if (ch == \"#\") {\n        stream.next();\n        // Hex color\n        if (stream.match(/^[0-9a-f]{3}([0-9a-f]([0-9a-f]{2}){0,2})?\\b(?!-)/i)) {\n          return [\"atom\", \"atom\"];\n        }\n        // ID selector\n        if (stream.match(/^[a-z][\\w-]*/i)) {\n          return [\"builtin\", \"hash\"];\n        }\n      }\n      // Vendor prefixes\n      if (stream.match(vendorPrefixesRegexp)) {\n        return [\"meta\", \"vendor-prefixes\"];\n      }\n      // Numbers\n      if (stream.match(/^-?[0-9]?\\.?[0-9]/)) {\n        stream.eatWhile(/[a-z%]/i);\n        return [\"number\", \"unit\"];\n      }\n      // !important|optional\n      if (ch == \"!\") {\n        stream.next();\n        return [stream.match(/^(important|optional)/i) ? \"keyword\": \"operator\", \"important\"];\n      }\n      // Class\n      if (ch == \".\" && stream.match(/^\\.[a-z][\\w-]*/i)) {\n        return [\"qualifier\", \"qualifier\"];\n      }\n      // url url-prefix domain regexp\n      if (stream.match(documentTypesRegexp)) {\n        if (stream.peek() == \"(\") state.tokenize = tokenParenthesized;\n        return [\"property\", \"word\"];\n      }\n      // Mixins / Functions\n      if (stream.match(/^[a-z][\\w-]*\\(/i)) {\n        stream.backUp(1);\n        return [\"keyword\", \"mixin\"];\n      }\n      // Block mixins\n      if (stream.match(/^(\\+|-)[a-z][\\w-]*\\(/i)) {\n        stream.backUp(1);\n        return [\"keyword\", \"block-mixin\"];\n      }\n      // Parent Reference BEM naming\n      if (stream.string.match(/^\\s*&/) && stream.match(/^[-_]+[a-z][\\w-]*/)) {\n        return [\"qualifier\", \"qualifier\"];\n      }\n      // / Root Reference & Parent Reference\n      if (stream.match(/^(\\/|&)(-|_|:|\\.|#|[a-z])/)) {\n        stream.backUp(1);\n        return [\"variable-3\", \"reference\"];\n      }\n      if (stream.match(/^&{1}\\s*$/)) {\n        return [\"variable-3\", \"reference\"];\n      }\n      // Word operator\n      if (stream.match(wordOperatorKeywordsRegexp)) {\n        return [\"operator\", \"operator\"];\n      }\n      // Word\n      if (stream.match(/^\\$?[-_]*[a-z0-9]+[\\w-]*/i)) {\n        // Variable\n        if (stream.match(/^(\\.|\\[)[\\w-\\'\\\"\\]]+/i, false)) {\n          if (!wordIsTag(stream.current())) {\n            stream.match('.');\n            return [\"variable-2\", \"variable-name\"];\n          }\n        }\n        return [\"variable-2\", \"word\"];\n      }\n      // Operators\n      if (stream.match(operatorsRegexp)) {\n        return [\"operator\", stream.current()];\n      }\n      // Delimiters\n      if (/[:;,{}\\[\\]\\(\\)]/.test(ch)) {\n        stream.next();\n        return [null, ch];\n      }\n      // Non-detected items\n      stream.next();\n      return [null, null];\n    }\n\n    /**\n     * Token comment\n     */\n    function tokenCComment(stream, state) {\n      var maybeEnd = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (maybeEnd && ch == \"/\") {\n          state.tokenize = null;\n          break;\n        }\n        maybeEnd = (ch == \"*\");\n      }\n      return [\"comment\", \"comment\"];\n    }\n\n    /**\n     * Token string\n     */\n    function tokenString(quote) {\n      return function(stream, state) {\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && !escaped) {\n            if (quote == \")\") stream.backUp(1);\n            break;\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n        return [\"string\", \"string\"];\n      };\n    }\n\n    /**\n     * Token parenthesized\n     */\n    function tokenParenthesized(stream, state) {\n      stream.next(); // Must be \"(\"\n      if (!stream.match(/\\s*[\\\"\\')]/, false))\n        state.tokenize = tokenString(\")\");\n      else\n        state.tokenize = null;\n      return [null, \"(\"];\n    }\n\n    /**\n     * Context management\n     */\n    function Context(type, indent, prev, line) {\n      this.type = type;\n      this.indent = indent;\n      this.prev = prev;\n      this.line = line || {firstWord: \"\", indent: 0};\n    }\n\n    function pushContext(state, stream, type, indent) {\n      indent = indent >= 0 ? indent : indentUnit;\n      state.context = new Context(type, stream.indentation() + indent, state.context);\n      return type;\n    }\n\n    function popContext(state, currentIndent) {\n      var contextIndent = state.context.indent - indentUnit;\n      currentIndent = currentIndent || false;\n      state.context = state.context.prev;\n      if (currentIndent) state.context.indent = contextIndent;\n      return state.context.type;\n    }\n\n    function pass(type, stream, state) {\n      return states[state.context.type](type, stream, state);\n    }\n\n    function popAndPass(type, stream, state, n) {\n      for (var i = n || 1; i > 0; i--)\n        state.context = state.context.prev;\n      return pass(type, stream, state);\n    }\n\n\n    /**\n     * Parser\n     */\n    function wordIsTag(word) {\n      return word.toLowerCase() in tagKeywords;\n    }\n\n    function wordIsProperty(word) {\n      word = word.toLowerCase();\n      return word in propertyKeywords || word in fontProperties;\n    }\n\n    function wordIsBlock(word) {\n      return word.toLowerCase() in blockKeywords;\n    }\n\n    function wordIsVendorPrefix(word) {\n      return word.toLowerCase().match(vendorPrefixesRegexp);\n    }\n\n    function wordAsValue(word) {\n      var wordLC = word.toLowerCase();\n      var override = \"variable-2\";\n      if (wordIsTag(word)) override = \"tag\";\n      else if (wordIsBlock(word)) override = \"block-keyword\";\n      else if (wordIsProperty(word)) override = \"property\";\n      else if (wordLC in valueKeywords || wordLC in commonAtoms) override = \"atom\";\n      else if (wordLC == \"return\" || wordLC in colorKeywords) override = \"keyword\";\n\n      // Font family\n      else if (word.match(/^[A-Z]/)) override = \"string\";\n      return override;\n    }\n\n    function typeIsBlock(type, stream) {\n      return ((endOfLine(stream) && (type == \"{\" || type == \"]\" || type == \"hash\" || type == \"qualifier\")) || type == \"block-mixin\");\n    }\n\n    function typeIsInterpolation(type, stream) {\n      return type == \"{\" && stream.match(/^\\s*\\$?[\\w-]+/i, false);\n    }\n\n    function typeIsPseudo(type, stream) {\n      return type == \":\" && stream.match(/^[a-z-]+/, false);\n    }\n\n    function startOfLine(stream) {\n      return stream.sol() || stream.string.match(new RegExp(\"^\\\\s*\" + escapeRegExp(stream.current())));\n    }\n\n    function endOfLine(stream) {\n      return stream.eol() || stream.match(/^\\s*$/, false);\n    }\n\n    function firstWordOfLine(line) {\n      var re = /^\\s*[-_]*[a-z0-9]+[\\w-]*/i;\n      var result = typeof line == \"string\" ? line.match(re) : line.string.match(re);\n      return result ? result[0].replace(/^\\s*/, \"\") : \"\";\n    }\n\n\n    /**\n     * Block\n     */\n    states.block = function(type, stream, state) {\n      if ((type == \"comment\" && startOfLine(stream)) ||\n          (type == \",\" && endOfLine(stream)) ||\n          type == \"mixin\") {\n        return pushContext(state, stream, \"block\", 0);\n      }\n      if (typeIsInterpolation(type, stream)) {\n        return pushContext(state, stream, \"interpolation\");\n      }\n      if (endOfLine(stream) && type == \"]\") {\n        if (!/^\\s*(\\.|#|:|\\[|\\*|&)/.test(stream.string) && !wordIsTag(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n      }\n      if (typeIsBlock(type, stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"}\" && endOfLine(stream)) {\n        return pushContext(state, stream, \"block\", 0);\n      }\n      if (type == \"variable-name\") {\n        if (stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/) || wordIsBlock(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"variableName\");\n        }\n        else {\n          return pushContext(state, stream, \"variableName\", 0);\n        }\n      }\n      if (type == \"=\") {\n        if (!endOfLine(stream) && !wordIsBlock(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"*\") {\n        if (endOfLine(stream) || stream.match(/\\s*(,|\\.|#|\\[|:|{)/,false)) {\n          override = \"tag\";\n          return pushContext(state, stream, \"block\");\n        }\n      }\n      if (typeIsPseudo(type, stream)) {\n        return pushContext(state, stream, \"pseudo\");\n      }\n      if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n        return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n      }\n      if (/@(-(moz|ms|o|webkit)-)?keyframes$/.test(type)) {\n        return pushContext(state, stream, \"keyframes\");\n      }\n      if (/@extends?/.test(type)) {\n        return pushContext(state, stream, \"extend\", 0);\n      }\n      if (type && type.charAt(0) == \"@\") {\n\n        // Property Lookup\n        if (stream.indentation() > 0 && wordIsProperty(stream.current().slice(1))) {\n          override = \"variable-2\";\n          return \"block\";\n        }\n        if (/(@import|@require|@charset)/.test(type)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"reference\" && endOfLine(stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"(\") {\n        return pushContext(state, stream, \"parens\");\n      }\n\n      if (type == \"vendor-prefixes\") {\n        return pushContext(state, stream, \"vendorPrefixes\");\n      }\n      if (type == \"word\") {\n        var word = stream.current();\n        override = wordAsValue(word);\n\n        if (override == \"property\") {\n          if (startOfLine(stream)) {\n            return pushContext(state, stream, \"block\", 0);\n          } else {\n            override = \"atom\";\n            return \"block\";\n          }\n        }\n\n        if (override == \"tag\") {\n\n          // tag is a css value\n          if (/embed|menu|pre|progress|sub|table/.test(word)) {\n            if (wordIsProperty(firstWordOfLine(stream))) {\n              override = \"atom\";\n              return \"block\";\n            }\n          }\n\n          // tag is an attribute\n          if (stream.string.match(new RegExp(\"\\\\[\\\\s*\" + word + \"|\" + word +\"\\\\s*\\\\]\"))) {\n            override = \"atom\";\n            return \"block\";\n          }\n\n          // tag is a variable\n          if (tagVariablesRegexp.test(word)) {\n            if ((startOfLine(stream) && stream.string.match(/=/)) ||\n                (!startOfLine(stream) &&\n                 !stream.string.match(/^(\\s*\\.|#|\\&|\\[|\\/|>|\\*)/) &&\n                 !wordIsTag(firstWordOfLine(stream)))) {\n              override = \"variable-2\";\n              if (wordIsBlock(firstWordOfLine(stream)))  return \"block\";\n              return pushContext(state, stream, \"block\", 0);\n            }\n          }\n\n          if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        }\n        if (override == \"block-keyword\") {\n          override = \"keyword\";\n\n          // Postfix conditionals\n          if (stream.current(/(if|unless)/) && !startOfLine(stream)) {\n            return \"block\";\n          }\n          return pushContext(state, stream, \"block\");\n        }\n        if (word == \"return\") return pushContext(state, stream, \"block\", 0);\n\n        // Placeholder selector\n        if (override == \"variable-2\" && stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/)) {\n          return pushContext(state, stream, \"block\");\n        }\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Parens\n     */\n    states.parens = function(type, stream, state) {\n      if (type == \"(\") return pushContext(state, stream, \"parens\");\n      if (type == \")\") {\n        if (state.context.prev.type == \"parens\") {\n          return popContext(state);\n        }\n        if ((stream.string.match(/^[a-z][\\w-]*\\(/i) && endOfLine(stream)) ||\n            wordIsBlock(firstWordOfLine(stream)) ||\n            /(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(firstWordOfLine(stream)) ||\n            (!stream.string.match(/^-?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) &&\n             wordIsTag(firstWordOfLine(stream)))) {\n          return pushContext(state, stream, \"block\");\n        }\n        if (stream.string.match(/^[\\$-]?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) ||\n            stream.string.match(/^\\s*(\\(|\\)|[0-9])/) ||\n            stream.string.match(/^\\s+[a-z][\\w-]*\\(/i) ||\n            stream.string.match(/^\\s+[\\$-]?[a-z]/i)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        else return pushContext(state, stream, \"block\", 0);\n      }\n      if (type && type.charAt(0) == \"@\" && wordIsProperty(stream.current().slice(1))) {\n        override = \"variable-2\";\n      }\n      if (type == \"word\") {\n        var word = stream.current();\n        override = wordAsValue(word);\n        if (override == \"tag\" && tagVariablesRegexp.test(word)) {\n          override = \"variable-2\";\n        }\n        if (override == \"property\" || word == \"to\") override = \"atom\";\n      }\n      if (type == \"variable-name\") {\n        return pushContext(state, stream, \"variableName\");\n      }\n      if (typeIsPseudo(type, stream)) {\n        return pushContext(state, stream, \"pseudo\");\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Vendor prefixes\n     */\n    states.vendorPrefixes = function(type, stream, state) {\n      if (type == \"word\") {\n        override = \"property\";\n        return pushContext(state, stream, \"block\", 0);\n      }\n      return popContext(state);\n    };\n\n\n    /**\n     * Pseudo\n     */\n    states.pseudo = function(type, stream, state) {\n      if (!wordIsProperty(firstWordOfLine(stream.string))) {\n        stream.match(/^[a-z-]+/);\n        override = \"variable-3\";\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        return popContext(state);\n      }\n      return popAndPass(type, stream, state);\n    };\n\n\n    /**\n     * atBlock\n     */\n    states.atBlock = function(type, stream, state) {\n      if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\n      if (typeIsBlock(type, stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n      if (typeIsInterpolation(type, stream)) {\n        return pushContext(state, stream, \"interpolation\");\n      }\n      if (type == \"word\") {\n        var word = stream.current().toLowerCase();\n        if (/^(only|not|and|or)$/.test(word))\n          override = \"keyword\";\n        else if (documentTypes.hasOwnProperty(word))\n          override = \"tag\";\n        else if (mediaTypes.hasOwnProperty(word))\n          override = \"attribute\";\n        else if (mediaFeatures.hasOwnProperty(word))\n          override = \"property\";\n        else if (nonStandardPropertyKeywords.hasOwnProperty(word))\n          override = \"string-2\";\n        else override = wordAsValue(stream.current());\n        if (override == \"tag\" && endOfLine(stream)) {\n          return pushContext(state, stream, \"block\");\n        }\n      }\n      if (type == \"operator\" && /^(not|and|or)$/.test(stream.current())) {\n        override = \"keyword\";\n      }\n      return state.context.type;\n    };\n\n    states.atBlock_parens = function(type, stream, state) {\n      if (type == \"{\" || type == \"}\") return state.context.type;\n      if (type == \")\") {\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        else return pushContext(state, stream, \"atBlock\");\n      }\n      if (type == \"word\") {\n        var word = stream.current().toLowerCase();\n        override = wordAsValue(word);\n        if (/^(max|min)/.test(word)) override = \"property\";\n        if (override == \"tag\") {\n          tagVariablesRegexp.test(word) ? override = \"variable-2\" : override = \"atom\";\n        }\n        return state.context.type;\n      }\n      return states.atBlock(type, stream, state);\n    };\n\n\n    /**\n     * Keyframes\n     */\n    states.keyframes = function(type, stream, state) {\n      if (stream.indentation() == \"0\" && ((type == \"}\" && startOfLine(stream)) || type == \"]\" || type == \"hash\"\n                                          || type == \"qualifier\" || wordIsTag(stream.current()))) {\n        return popAndPass(type, stream, state);\n      }\n      if (type == \"{\") return pushContext(state, stream, \"keyframes\");\n      if (type == \"}\") {\n        if (startOfLine(stream)) return popContext(state, true);\n        else return pushContext(state, stream, \"keyframes\");\n      }\n      if (type == \"unit\" && /^[0-9]+\\%$/.test(stream.current())) {\n        return pushContext(state, stream, \"keyframes\");\n      }\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        if (override == \"block-keyword\") {\n          override = \"keyword\";\n          return pushContext(state, stream, \"keyframes\");\n        }\n      }\n      if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n        return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n      }\n      if (type == \"mixin\") {\n        return pushContext(state, stream, \"block\", 0);\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Interpolation\n     */\n    states.interpolation = function(type, stream, state) {\n      if (type == \"{\") popContext(state) && pushContext(state, stream, \"block\");\n      if (type == \"}\") {\n        if (stream.string.match(/^\\s*(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/i) ||\n            (stream.string.match(/^\\s*[a-z]/i) && wordIsTag(firstWordOfLine(stream)))) {\n          return pushContext(state, stream, \"block\");\n        }\n        if (!stream.string.match(/^(\\{|\\s*\\&)/) ||\n            stream.match(/\\s*[\\w-]/,false)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"variable-name\") {\n        return pushContext(state, stream, \"variableName\", 0);\n      }\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        if (override == \"tag\") override = \"atom\";\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Extend/s\n     */\n    states.extend = function(type, stream, state) {\n      if (type == \"[\" || type == \"=\") return \"extend\";\n      if (type == \"]\") return popContext(state);\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        return \"extend\";\n      }\n      return popContext(state);\n    };\n\n\n    /**\n     * Variable name\n     */\n    states.variableName = function(type, stream, state) {\n      if (type == \"string\" || type == \"[\" || type == \"]\" || stream.current().match(/^(\\.|\\$)/)) {\n        if (stream.current().match(/^\\.[\\w-]+/i)) override = \"variable-2\";\n        return \"variableName\";\n      }\n      return popAndPass(type, stream, state);\n    };\n\n\n    return {\n      startState: function(base) {\n        return {\n          tokenize: null,\n          state: \"block\",\n          context: new Context(\"block\", base || 0, null)\n        };\n      },\n      token: function(stream, state) {\n        if (!state.tokenize && stream.eatSpace()) return null;\n        style = (state.tokenize || tokenBase)(stream, state);\n        if (style && typeof style == \"object\") {\n          type = style[1];\n          style = style[0];\n        }\n        override = style;\n        state.state = states[state.state](type, stream, state);\n        return override;\n      },\n      indent: function(state, textAfter, line) {\n\n        var cx = state.context,\n            ch = textAfter && textAfter.charAt(0),\n            indent = cx.indent,\n            lineFirstWord = firstWordOfLine(textAfter),\n            lineIndent = line.match(/^\\s*/)[0].replace(/\\t/g, indentUnitString).length,\n            prevLineFirstWord = state.context.prev ? state.context.prev.line.firstWord : \"\",\n            prevLineIndent = state.context.prev ? state.context.prev.line.indent : lineIndent;\n\n        if (cx.prev &&\n            (ch == \"}\" && (cx.type == \"block\" || cx.type == \"atBlock\" || cx.type == \"keyframes\") ||\n             ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") ||\n             ch == \"{\" && (cx.type == \"at\"))) {\n          indent = cx.indent - indentUnit;\n        } else if (!(/(\\})/.test(ch))) {\n          if (/@|\\$|\\d/.test(ch) ||\n              /^\\{/.test(textAfter) ||\n/^\\s*\\/(\\/|\\*)/.test(textAfter) ||\n              /^\\s*\\/\\*/.test(prevLineFirstWord) ||\n              /^\\s*[\\w-\\.\\[\\]\\'\\\"]+\\s*(\\?|:|\\+)?=/i.test(textAfter) ||\n/^(\\+|-)?[a-z][\\w-]*\\(/i.test(textAfter) ||\n/^return/.test(textAfter) ||\n              wordIsBlock(lineFirstWord)) {\n            indent = lineIndent;\n          } else if (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(ch) || wordIsTag(lineFirstWord)) {\n            if (/\\,\\s*$/.test(prevLineFirstWord)) {\n              indent = prevLineIndent;\n            } else if (/^\\s+/.test(line) && (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(prevLineFirstWord) || wordIsTag(prevLineFirstWord))) {\n              indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + indentUnit;\n            } else {\n              indent = lineIndent;\n            }\n          } else if (!/,\\s*$/.test(line) && (wordIsVendorPrefix(lineFirstWord) || wordIsProperty(lineFirstWord))) {\n            if (wordIsBlock(prevLineFirstWord)) {\n              indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + indentUnit;\n            } else if (/^\\{/.test(prevLineFirstWord)) {\n              indent = lineIndent <= prevLineIndent ? lineIndent : prevLineIndent + indentUnit;\n            } else if (wordIsVendorPrefix(prevLineFirstWord) || wordIsProperty(prevLineFirstWord)) {\n              indent = lineIndent >= prevLineIndent ? prevLineIndent : lineIndent;\n            } else if (/^(\\.|#|:|\\[|\\*|&|@|\\+|\\-|>|~|\\/)/.test(prevLineFirstWord) ||\n                      /=\\s*$/.test(prevLineFirstWord) ||\n                      wordIsTag(prevLineFirstWord) ||\n                      /^\\$[\\w-\\.\\[\\]\\'\\\"]/.test(prevLineFirstWord)) {\n              indent = prevLineIndent + indentUnit;\n            } else {\n              indent = lineIndent;\n            }\n          }\n        }\n        return indent;\n      },\n      electricChars: \"}\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      lineComment: \"//\",\n      fold: \"indent\"\n    };\n  });\n\n  // developer.mozilla.org/en-US/docs/Web/HTML/Element\n  var tagKeywords_ = [\"a\",\"abbr\",\"address\",\"area\",\"article\",\"aside\",\"audio\", \"b\", \"base\",\"bdi\", \"bdo\",\"bgsound\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"cite\", \"code\",\"col\",\"colgroup\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"div\", \"dl\",\"dt\",\"em\",\"embed\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\", \"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"iframe\", \"img\",\"input\",\"ins\",\"kbd\",\"keygen\",\"label\",\"legend\",\"li\",\"link\",\"main\",\"map\", \"mark\",\"marquee\",\"menu\",\"menuitem\",\"meta\",\"meter\",\"nav\",\"nobr\",\"noframes\", \"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"param\",\"pre\", \"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\", \"small\",\"source\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"tr\",\"track\", \"u\",\"ul\",\"var\",\"video\"];\n\n  // github.com/codemirror/CodeMirror/blob/master/mode/css/css.js\n  // Note, \"url-prefix\" should precede \"url\" in order to match correctly in documentTypesRegexp\n  var documentTypes_ = [\"domain\", \"regexp\", \"url-prefix\", \"url\"];\n  var mediaTypes_ = [\"all\",\"aural\",\"braille\",\"handheld\",\"print\",\"projection\",\"screen\",\"tty\",\"tv\",\"embossed\"];\n  var mediaFeatures_ = [\"width\",\"min-width\",\"max-width\",\"height\",\"min-height\",\"max-height\",\"device-width\",\"min-device-width\",\"max-device-width\",\"device-height\",\"min-device-height\",\"max-device-height\",\"aspect-ratio\",\"min-aspect-ratio\",\"max-aspect-ratio\",\"device-aspect-ratio\",\"min-device-aspect-ratio\",\"max-device-aspect-ratio\",\"color\",\"min-color\",\"max-color\",\"color-index\",\"min-color-index\",\"max-color-index\",\"monochrome\",\"min-monochrome\",\"max-monochrome\",\"resolution\",\"min-resolution\",\"max-resolution\",\"scan\",\"grid\",\"dynamic-range\",\"video-dynamic-range\"];\n  var propertyKeywords_ = [\"align-content\",\"align-items\",\"align-self\",\"alignment-adjust\",\"alignment-baseline\",\"anchor-point\",\"animation\",\"animation-delay\",\"animation-direction\",\"animation-duration\",\"animation-fill-mode\",\"animation-iteration-count\",\"animation-name\",\"animation-play-state\",\"animation-timing-function\",\"appearance\",\"azimuth\",\"backface-visibility\",\"background\",\"background-attachment\",\"background-clip\",\"background-color\",\"background-image\",\"background-origin\",\"background-position\",\"background-repeat\",\"background-size\",\"baseline-shift\",\"binding\",\"bleed\",\"bookmark-label\",\"bookmark-level\",\"bookmark-state\",\"bookmark-target\",\"border\",\"border-bottom\",\"border-bottom-color\",\"border-bottom-left-radius\",\"border-bottom-right-radius\",\"border-bottom-style\",\"border-bottom-width\",\"border-collapse\",\"border-color\",\"border-image\",\"border-image-outset\",\"border-image-repeat\",\"border-image-slice\",\"border-image-source\",\"border-image-width\",\"border-left\",\"border-left-color\",\"border-left-style\",\"border-left-width\",\"border-radius\",\"border-right\",\"border-right-color\",\"border-right-style\",\"border-right-width\",\"border-spacing\",\"border-style\",\"border-top\",\"border-top-color\",\"border-top-left-radius\",\"border-top-right-radius\",\"border-top-style\",\"border-top-width\",\"border-width\",\"bottom\",\"box-decoration-break\",\"box-shadow\",\"box-sizing\",\"break-after\",\"break-before\",\"break-inside\",\"caption-side\",\"clear\",\"clip\",\"color\",\"color-profile\",\"column-count\",\"column-fill\",\"column-gap\",\"column-rule\",\"column-rule-color\",\"column-rule-style\",\"column-rule-width\",\"column-span\",\"column-width\",\"columns\",\"content\",\"counter-increment\",\"counter-reset\",\"crop\",\"cue\",\"cue-after\",\"cue-before\",\"cursor\",\"direction\",\"display\",\"dominant-baseline\",\"drop-initial-after-adjust\",\"drop-initial-after-align\",\"drop-initial-before-adjust\",\"drop-initial-before-align\",\"drop-initial-size\",\"drop-initial-value\",\"elevation\",\"empty-cells\",\"fit\",\"fit-position\",\"flex\",\"flex-basis\",\"flex-direction\",\"flex-flow\",\"flex-grow\",\"flex-shrink\",\"flex-wrap\",\"float\",\"float-offset\",\"flow-from\",\"flow-into\",\"font\",\"font-feature-settings\",\"font-family\",\"font-kerning\",\"font-language-override\",\"font-size\",\"font-size-adjust\",\"font-stretch\",\"font-style\",\"font-synthesis\",\"font-variant\",\"font-variant-alternates\",\"font-variant-caps\",\"font-variant-east-asian\",\"font-variant-ligatures\",\"font-variant-numeric\",\"font-variant-position\",\"font-weight\",\"grid\",\"grid-area\",\"grid-auto-columns\",\"grid-auto-flow\",\"grid-auto-position\",\"grid-auto-rows\",\"grid-column\",\"grid-column-end\",\"grid-column-start\",\"grid-row\",\"grid-row-end\",\"grid-row-start\",\"grid-template\",\"grid-template-areas\",\"grid-template-columns\",\"grid-template-rows\",\"hanging-punctuation\",\"height\",\"hyphens\",\"icon\",\"image-orientation\",\"image-rendering\",\"image-resolution\",\"inline-box-align\",\"justify-content\",\"left\",\"letter-spacing\",\"line-break\",\"line-height\",\"line-stacking\",\"line-stacking-ruby\",\"line-stacking-shift\",\"line-stacking-strategy\",\"list-style\",\"list-style-image\",\"list-style-position\",\"list-style-type\",\"margin\",\"margin-bottom\",\"margin-left\",\"margin-right\",\"margin-top\",\"marker-offset\",\"marks\",\"marquee-direction\",\"marquee-loop\",\"marquee-play-count\",\"marquee-speed\",\"marquee-style\",\"max-height\",\"max-width\",\"min-height\",\"min-width\",\"move-to\",\"nav-down\",\"nav-index\",\"nav-left\",\"nav-right\",\"nav-up\",\"object-fit\",\"object-position\",\"opacity\",\"order\",\"orphans\",\"outline\",\"outline-color\",\"outline-offset\",\"outline-style\",\"outline-width\",\"overflow\",\"overflow-style\",\"overflow-wrap\",\"overflow-x\",\"overflow-y\",\"padding\",\"padding-bottom\",\"padding-left\",\"padding-right\",\"padding-top\",\"page\",\"page-break-after\",\"page-break-before\",\"page-break-inside\",\"page-policy\",\"pause\",\"pause-after\",\"pause-before\",\"perspective\",\"perspective-origin\",\"pitch\",\"pitch-range\",\"play-during\",\"position\",\"presentation-level\",\"punctuation-trim\",\"quotes\",\"region-break-after\",\"region-break-before\",\"region-break-inside\",\"region-fragment\",\"rendering-intent\",\"resize\",\"rest\",\"rest-after\",\"rest-before\",\"richness\",\"right\",\"rotation\",\"rotation-point\",\"ruby-align\",\"ruby-overhang\",\"ruby-position\",\"ruby-span\",\"shape-image-threshold\",\"shape-inside\",\"shape-margin\",\"shape-outside\",\"size\",\"speak\",\"speak-as\",\"speak-header\",\"speak-numeral\",\"speak-punctuation\",\"speech-rate\",\"stress\",\"string-set\",\"tab-size\",\"table-layout\",\"target\",\"target-name\",\"target-new\",\"target-position\",\"text-align\",\"text-align-last\",\"text-decoration\",\"text-decoration-color\",\"text-decoration-line\",\"text-decoration-skip\",\"text-decoration-style\",\"text-emphasis\",\"text-emphasis-color\",\"text-emphasis-position\",\"text-emphasis-style\",\"text-height\",\"text-indent\",\"text-justify\",\"text-outline\",\"text-overflow\",\"text-shadow\",\"text-size-adjust\",\"text-space-collapse\",\"text-transform\",\"text-underline-position\",\"text-wrap\",\"top\",\"transform\",\"transform-origin\",\"transform-style\",\"transition\",\"transition-delay\",\"transition-duration\",\"transition-property\",\"transition-timing-function\",\"unicode-bidi\",\"vertical-align\",\"visibility\",\"voice-balance\",\"voice-duration\",\"voice-family\",\"voice-pitch\",\"voice-range\",\"voice-rate\",\"voice-stress\",\"voice-volume\",\"volume\",\"white-space\",\"widows\",\"width\",\"will-change\",\"word-break\",\"word-spacing\",\"word-wrap\",\"z-index\",\"clip-path\",\"clip-rule\",\"mask\",\"enable-background\",\"filter\",\"flood-color\",\"flood-opacity\",\"lighting-color\",\"stop-color\",\"stop-opacity\",\"pointer-events\",\"color-interpolation\",\"color-interpolation-filters\",\"color-rendering\",\"fill\",\"fill-opacity\",\"fill-rule\",\"image-rendering\",\"marker\",\"marker-end\",\"marker-mid\",\"marker-start\",\"shape-rendering\",\"stroke\",\"stroke-dasharray\",\"stroke-dashoffset\",\"stroke-linecap\",\"stroke-linejoin\",\"stroke-miterlimit\",\"stroke-opacity\",\"stroke-width\",\"text-rendering\",\"baseline-shift\",\"dominant-baseline\",\"glyph-orientation-horizontal\",\"glyph-orientation-vertical\",\"text-anchor\",\"writing-mode\",\"font-smoothing\",\"osx-font-smoothing\"];\n  var nonStandardPropertyKeywords_ = [\"scrollbar-arrow-color\",\"scrollbar-base-color\",\"scrollbar-dark-shadow-color\",\"scrollbar-face-color\",\"scrollbar-highlight-color\",\"scrollbar-shadow-color\",\"scrollbar-3d-light-color\",\"scrollbar-track-color\",\"shape-inside\",\"searchfield-cancel-button\",\"searchfield-decoration\",\"searchfield-results-button\",\"searchfield-results-decoration\",\"zoom\"];\n  var fontProperties_ = [\"font-family\",\"src\",\"unicode-range\",\"font-variant\",\"font-feature-settings\",\"font-stretch\",\"font-weight\",\"font-style\"];\n  var colorKeywords_ = [\"aliceblue\",\"antiquewhite\",\"aqua\",\"aquamarine\",\"azure\",\"beige\",\"bisque\",\"black\",\"blanchedalmond\",\"blue\",\"blueviolet\",\"brown\",\"burlywood\",\"cadetblue\",\"chartreuse\",\"chocolate\",\"coral\",\"cornflowerblue\",\"cornsilk\",\"crimson\",\"cyan\",\"darkblue\",\"darkcyan\",\"darkgoldenrod\",\"darkgray\",\"darkgreen\",\"darkkhaki\",\"darkmagenta\",\"darkolivegreen\",\"darkorange\",\"darkorchid\",\"darkred\",\"darksalmon\",\"darkseagreen\",\"darkslateblue\",\"darkslategray\",\"darkturquoise\",\"darkviolet\",\"deeppink\",\"deepskyblue\",\"dimgray\",\"dodgerblue\",\"firebrick\",\"floralwhite\",\"forestgreen\",\"fuchsia\",\"gainsboro\",\"ghostwhite\",\"gold\",\"goldenrod\",\"gray\",\"grey\",\"green\",\"greenyellow\",\"honeydew\",\"hotpink\",\"indianred\",\"indigo\",\"ivory\",\"khaki\",\"lavender\",\"lavenderblush\",\"lawngreen\",\"lemonchiffon\",\"lightblue\",\"lightcoral\",\"lightcyan\",\"lightgoldenrodyellow\",\"lightgray\",\"lightgreen\",\"lightpink\",\"lightsalmon\",\"lightseagreen\",\"lightskyblue\",\"lightslategray\",\"lightsteelblue\",\"lightyellow\",\"lime\",\"limegreen\",\"linen\",\"magenta\",\"maroon\",\"mediumaquamarine\",\"mediumblue\",\"mediumorchid\",\"mediumpurple\",\"mediumseagreen\",\"mediumslateblue\",\"mediumspringgreen\",\"mediumturquoise\",\"mediumvioletred\",\"midnightblue\",\"mintcream\",\"mistyrose\",\"moccasin\",\"navajowhite\",\"navy\",\"oldlace\",\"olive\",\"olivedrab\",\"orange\",\"orangered\",\"orchid\",\"palegoldenrod\",\"palegreen\",\"paleturquoise\",\"palevioletred\",\"papayawhip\",\"peachpuff\",\"peru\",\"pink\",\"plum\",\"powderblue\",\"purple\",\"rebeccapurple\",\"red\",\"rosybrown\",\"royalblue\",\"saddlebrown\",\"salmon\",\"sandybrown\",\"seagreen\",\"seashell\",\"sienna\",\"silver\",\"skyblue\",\"slateblue\",\"slategray\",\"snow\",\"springgreen\",\"steelblue\",\"tan\",\"teal\",\"thistle\",\"tomato\",\"turquoise\",\"violet\",\"wheat\",\"white\",\"whitesmoke\",\"yellow\",\"yellowgreen\"];\n  var valueKeywords_ = [\"above\",\"absolute\",\"activeborder\",\"additive\",\"activecaption\",\"afar\",\"after-white-space\",\"ahead\",\"alias\",\"all\",\"all-scroll\",\"alphabetic\",\"alternate\",\"always\",\"amharic\",\"amharic-abegede\",\"antialiased\",\"appworkspace\",\"arabic-indic\",\"armenian\",\"asterisks\",\"attr\",\"auto\",\"avoid\",\"avoid-column\",\"avoid-page\",\"avoid-region\",\"background\",\"backwards\",\"baseline\",\"below\",\"bidi-override\",\"binary\",\"bengali\",\"blink\",\"block\",\"block-axis\",\"bold\",\"bolder\",\"border\",\"border-box\",\"both\",\"bottom\",\"break\",\"break-all\",\"break-word\",\"bullets\",\"button\",\"buttonface\",\"buttonhighlight\",\"buttonshadow\",\"buttontext\",\"calc\",\"cambodian\",\"capitalize\",\"caps-lock-indicator\",\"caption\",\"captiontext\",\"caret\",\"cell\",\"center\",\"checkbox\",\"circle\",\"cjk-decimal\",\"cjk-earthly-branch\",\"cjk-heavenly-stem\",\"cjk-ideographic\",\"clear\",\"clip\",\"close-quote\",\"col-resize\",\"collapse\",\"column\",\"compact\",\"condensed\",\"conic-gradient\",\"contain\",\"content\",\"contents\",\"content-box\",\"context-menu\",\"continuous\",\"copy\",\"counter\",\"counters\",\"cover\",\"crop\",\"cross\",\"crosshair\",\"currentcolor\",\"cursive\",\"cyclic\",\"dashed\",\"decimal\",\"decimal-leading-zero\",\"default\",\"default-button\",\"destination-atop\",\"destination-in\",\"destination-out\",\"destination-over\",\"devanagari\",\"disc\",\"discard\",\"disclosure-closed\",\"disclosure-open\",\"document\",\"dot-dash\",\"dot-dot-dash\",\"dotted\",\"double\",\"down\",\"e-resize\",\"ease\",\"ease-in\",\"ease-in-out\",\"ease-out\",\"element\",\"ellipse\",\"ellipsis\",\"embed\",\"end\",\"ethiopic\",\"ethiopic-abegede\",\"ethiopic-abegede-am-et\",\"ethiopic-abegede-gez\",\"ethiopic-abegede-ti-er\",\"ethiopic-abegede-ti-et\",\"ethiopic-halehame-aa-er\",\"ethiopic-halehame-aa-et\",\"ethiopic-halehame-am-et\",\"ethiopic-halehame-gez\",\"ethiopic-halehame-om-et\",\"ethiopic-halehame-sid-et\",\"ethiopic-halehame-so-et\",\"ethiopic-halehame-ti-er\",\"ethiopic-halehame-ti-et\",\"ethiopic-halehame-tig\",\"ethiopic-numeric\",\"ew-resize\",\"expanded\",\"extends\",\"extra-condensed\",\"extra-expanded\",\"fantasy\",\"fast\",\"fill\",\"fixed\",\"flat\",\"flex\",\"footnotes\",\"forwards\",\"from\",\"geometricPrecision\",\"georgian\",\"graytext\",\"groove\",\"gujarati\",\"gurmukhi\",\"hand\",\"hangul\",\"hangul-consonant\",\"hebrew\",\"help\",\"hidden\",\"hide\",\"high\",\"higher\",\"highlight\",\"highlighttext\",\"hiragana\",\"hiragana-iroha\",\"horizontal\",\"hsl\",\"hsla\",\"icon\",\"ignore\",\"inactiveborder\",\"inactivecaption\",\"inactivecaptiontext\",\"infinite\",\"infobackground\",\"infotext\",\"inherit\",\"initial\",\"inline\",\"inline-axis\",\"inline-block\",\"inline-flex\",\"inline-table\",\"inset\",\"inside\",\"intrinsic\",\"invert\",\"italic\",\"japanese-formal\",\"japanese-informal\",\"justify\",\"kannada\",\"katakana\",\"katakana-iroha\",\"keep-all\",\"khmer\",\"korean-hangul-formal\",\"korean-hanja-formal\",\"korean-hanja-informal\",\"landscape\",\"lao\",\"large\",\"larger\",\"left\",\"level\",\"lighter\",\"line-through\",\"linear\",\"linear-gradient\",\"lines\",\"list-item\",\"listbox\",\"listitem\",\"local\",\"logical\",\"loud\",\"lower\",\"lower-alpha\",\"lower-armenian\",\"lower-greek\",\"lower-hexadecimal\",\"lower-latin\",\"lower-norwegian\",\"lower-roman\",\"lowercase\",\"ltr\",\"malayalam\",\"match\",\"matrix\",\"matrix3d\",\"media-play-button\",\"media-slider\",\"media-sliderthumb\",\"media-volume-slider\",\"media-volume-sliderthumb\",\"medium\",\"menu\",\"menulist\",\"menulist-button\",\"menutext\",\"message-box\",\"middle\",\"min-intrinsic\",\"mix\",\"mongolian\",\"monospace\",\"move\",\"multiple\",\"myanmar\",\"n-resize\",\"narrower\",\"ne-resize\",\"nesw-resize\",\"no-close-quote\",\"no-drop\",\"no-open-quote\",\"no-repeat\",\"none\",\"normal\",\"not-allowed\",\"nowrap\",\"ns-resize\",\"numbers\",\"numeric\",\"nw-resize\",\"nwse-resize\",\"oblique\",\"octal\",\"open-quote\",\"optimizeLegibility\",\"optimizeSpeed\",\"oriya\",\"oromo\",\"outset\",\"outside\",\"outside-shape\",\"overlay\",\"overline\",\"padding\",\"padding-box\",\"painted\",\"page\",\"paused\",\"persian\",\"perspective\",\"plus-darker\",\"plus-lighter\",\"pointer\",\"polygon\",\"portrait\",\"pre\",\"pre-line\",\"pre-wrap\",\"preserve-3d\",\"progress\",\"push-button\",\"radial-gradient\",\"radio\",\"read-only\",\"read-write\",\"read-write-plaintext-only\",\"rectangle\",\"region\",\"relative\",\"repeat\",\"repeating-linear-gradient\",\"repeating-radial-gradient\",\"repeating-conic-gradient\",\"repeat-x\",\"repeat-y\",\"reset\",\"reverse\",\"rgb\",\"rgba\",\"ridge\",\"right\",\"rotate\",\"rotate3d\",\"rotateX\",\"rotateY\",\"rotateZ\",\"round\",\"row-resize\",\"rtl\",\"run-in\",\"running\",\"s-resize\",\"sans-serif\",\"scale\",\"scale3d\",\"scaleX\",\"scaleY\",\"scaleZ\",\"scroll\",\"scrollbar\",\"scroll-position\",\"se-resize\",\"searchfield\",\"searchfield-cancel-button\",\"searchfield-decoration\",\"searchfield-results-button\",\"searchfield-results-decoration\",\"semi-condensed\",\"semi-expanded\",\"separate\",\"serif\",\"show\",\"sidama\",\"simp-chinese-formal\",\"simp-chinese-informal\",\"single\",\"skew\",\"skewX\",\"skewY\",\"skip-white-space\",\"slide\",\"slider-horizontal\",\"slider-vertical\",\"sliderthumb-horizontal\",\"sliderthumb-vertical\",\"slow\",\"small\",\"small-caps\",\"small-caption\",\"smaller\",\"solid\",\"somali\",\"source-atop\",\"source-in\",\"source-out\",\"source-over\",\"space\",\"spell-out\",\"square\",\"square-button\",\"standard\",\"start\",\"static\",\"status-bar\",\"stretch\",\"stroke\",\"sub\",\"subpixel-antialiased\",\"super\",\"sw-resize\",\"symbolic\",\"symbols\",\"table\",\"table-caption\",\"table-cell\",\"table-column\",\"table-column-group\",\"table-footer-group\",\"table-header-group\",\"table-row\",\"table-row-group\",\"tamil\",\"telugu\",\"text\",\"text-bottom\",\"text-top\",\"textarea\",\"textfield\",\"thai\",\"thick\",\"thin\",\"threeddarkshadow\",\"threedface\",\"threedhighlight\",\"threedlightshadow\",\"threedshadow\",\"tibetan\",\"tigre\",\"tigrinya-er\",\"tigrinya-er-abegede\",\"tigrinya-et\",\"tigrinya-et-abegede\",\"to\",\"top\",\"trad-chinese-formal\",\"trad-chinese-informal\",\"translate\",\"translate3d\",\"translateX\",\"translateY\",\"translateZ\",\"transparent\",\"ultra-condensed\",\"ultra-expanded\",\"underline\",\"up\",\"upper-alpha\",\"upper-armenian\",\"upper-greek\",\"upper-hexadecimal\",\"upper-latin\",\"upper-norwegian\",\"upper-roman\",\"uppercase\",\"urdu\",\"url\",\"var\",\"vertical\",\"vertical-text\",\"visible\",\"visibleFill\",\"visiblePainted\",\"visibleStroke\",\"visual\",\"w-resize\",\"wait\",\"wave\",\"wider\",\"window\",\"windowframe\",\"windowtext\",\"words\",\"x-large\",\"x-small\",\"xor\",\"xx-large\",\"xx-small\",\"bicubic\",\"optimizespeed\",\"grayscale\",\"row\",\"row-reverse\",\"wrap\",\"wrap-reverse\",\"column-reverse\",\"flex-start\",\"flex-end\",\"space-between\",\"space-around\", \"unset\"];\n\n  var wordOperatorKeywords_ = [\"in\",\"and\",\"or\",\"not\",\"is not\",\"is a\",\"is\",\"isnt\",\"defined\",\"if unless\"],\n      blockKeywords_ = [\"for\",\"if\",\"else\",\"unless\", \"from\", \"to\"],\n      commonAtoms_ = [\"null\",\"true\",\"false\",\"href\",\"title\",\"type\",\"not-allowed\",\"readonly\",\"disabled\"],\n      commonDef_ = [\"@font-face\", \"@keyframes\", \"@media\", \"@viewport\", \"@page\", \"@host\", \"@supports\", \"@block\", \"@css\"];\n\n  var hintWords = tagKeywords_.concat(documentTypes_,mediaTypes_,mediaFeatures_,\n                                      propertyKeywords_,nonStandardPropertyKeywords_,\n                                      colorKeywords_,valueKeywords_,fontProperties_,\n                                      wordOperatorKeywords_,blockKeywords_,\n                                      commonAtoms_,commonDef_);\n\n  function wordRegexp(words) {\n    words = words.sort(function(a,b){return b > a;});\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  function keySet(array) {\n    var keys = {};\n    for (var i = 0; i < array.length; ++i) keys[array[i]] = true;\n    return keys;\n  }\n\n  function escapeRegExp(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n  }\n\n  CodeMirror.registerHelper(\"hintWords\", \"stylus\", hintWords);\n  CodeMirror.defineMIME(\"text/x-styl\", \"stylus\");\n});\n"],"mappings":"AAAA;AACA;;AAEA;;AAEA,CAAC,UAASA,GAAG,EAAE;EACb,IAAI,OAAOC,OAAO,IAAI,QAAQ,IAAI,OAAOC,MAAM,IAAI,QAAQ;IAAE;IAC3DF,GAAG,CAACG,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,KAClC,IAAI,OAAOC,MAAM,IAAI,UAAU,IAAIA,MAAM,CAACC,GAAG;IAAE;IAClDD,MAAM,CAAC,CAAC,sBAAsB,CAAC,EAAEJ,GAAG,CAAC,CAAC;IACnC;IACHA,GAAG,CAACM,UAAU,CAAC;AACnB,CAAC,EAAE,UAASA,UAAU,EAAE;EACtB,YAAY;;EAEZA,UAAU,CAACC,UAAU,CAAC,QAAQ,EAAE,UAASC,MAAM,EAAE;IAC/C,IAAIC,UAAU,GAAGD,MAAM,CAACC,UAAU;MAC9BC,gBAAgB,GAAG,EAAE;MACrBC,WAAW,GAAGC,MAAM,CAACC,YAAY,CAAC;MAClCC,kBAAkB,GAAG,qBAAqB;MAC1CC,gBAAgB,GAAGH,MAAM,CAACI,iBAAiB,CAAC;MAC5CC,2BAA2B,GAAGL,MAAM,CAACM,4BAA4B,CAAC;MAClEC,aAAa,GAAGP,MAAM,CAACQ,cAAc,CAAC;MACtCC,aAAa,GAAGT,MAAM,CAACU,cAAc,CAAC;MACtCC,aAAa,GAAGX,MAAM,CAACY,cAAc,CAAC;MACtCC,mBAAmB,GAAGC,UAAU,CAACF,cAAc,CAAC;MAChDG,aAAa,GAAGf,MAAM,CAACgB,cAAc,CAAC;MACtCC,UAAU,GAAGjB,MAAM,CAACkB,WAAW,CAAC;MAChCC,cAAc,GAAGnB,MAAM,CAACoB,eAAe,CAAC;MACxCC,eAAe,GAAG,0DAA0D;MAC5EC,0BAA0B,GAAGR,UAAU,CAACS,qBAAqB,CAAC;MAC9DC,aAAa,GAAGxB,MAAM,CAACyB,cAAc,CAAC;MACtCC,oBAAoB,GAAG,IAAIC,MAAM,CAAC,wBAAwB,CAAC;MAC3DC,WAAW,GAAG5B,MAAM,CAAC6B,YAAY,CAAC;MAClCC,cAAc,GAAG,EAAE;MACnBC,MAAM,GAAG,CAAC,CAAC;MACXC,EAAE;MACFC,KAAK;MACLC,IAAI;MACJC,QAAQ;IAEZ,OAAOrC,gBAAgB,CAACsC,MAAM,GAAGvC,UAAU,EAAEC,gBAAgB,IAAI,GAAG;;IAEpE;AACJ;AACA;IACI,SAASuC,SAASA,CAACC,MAAM,EAAEC,KAAK,EAAE;MAChCT,cAAc,GAAGQ,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC,6HAA6H,CAAC;MACnKF,KAAK,CAACG,OAAO,CAACC,IAAI,CAACC,SAAS,GAAGd,cAAc,GAAGA,cAAc,CAAC,CAAC,CAAC,CAACe,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,EAAE;MAC1FN,KAAK,CAACG,OAAO,CAACC,IAAI,CAACG,MAAM,GAAGR,MAAM,CAACS,WAAW,CAAC,CAAC;MAChDf,EAAE,GAAGM,MAAM,CAACU,IAAI,CAAC,CAAC;;MAElB;MACA,IAAIV,MAAM,CAACG,KAAK,CAAC,IAAI,CAAC,EAAE;QACtBH,MAAM,CAACW,SAAS,CAAC,CAAC;QAClB,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC;MAC/B;MACA;MACA,IAAIX,MAAM,CAACG,KAAK,CAAC,IAAI,CAAC,EAAE;QACtBF,KAAK,CAACW,QAAQ,GAAGC,aAAa;QAC9B,OAAOA,aAAa,CAACb,MAAM,EAAEC,KAAK,CAAC;MACrC;MACA;MACA,IAAIP,EAAE,IAAI,IAAI,IAAIA,EAAE,IAAI,GAAG,EAAE;QAC3BM,MAAM,CAACc,IAAI,CAAC,CAAC;QACbb,KAAK,CAACW,QAAQ,GAAGG,WAAW,CAACrB,EAAE,CAAC;QAChC,OAAOO,KAAK,CAACW,QAAQ,CAACZ,MAAM,EAAEC,KAAK,CAAC;MACtC;MACA;MACA,IAAIP,EAAE,IAAI,GAAG,EAAE;QACbM,MAAM,CAACc,IAAI,CAAC,CAAC;QACbd,MAAM,CAACgB,QAAQ,CAAC,SAAS,CAAC;QAC1B,OAAO,CAAC,KAAK,EAAEhB,MAAM,CAACiB,OAAO,CAAC,CAAC,CAAC;MAClC;MACA;MACA,IAAIvB,EAAE,IAAI,GAAG,EAAE;QACbM,MAAM,CAACc,IAAI,CAAC,CAAC;QACb;QACA,IAAId,MAAM,CAACG,KAAK,CAAC,mDAAmD,CAAC,EAAE;UACrE,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC;QACzB;QACA;QACA,IAAIH,MAAM,CAACG,KAAK,CAAC,eAAe,CAAC,EAAE;UACjC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC;QAC5B;MACF;MACA;MACA,IAAIH,MAAM,CAACG,KAAK,CAACf,oBAAoB,CAAC,EAAE;QACtC,OAAO,CAAC,MAAM,EAAE,iBAAiB,CAAC;MACpC;MACA;MACA,IAAIY,MAAM,CAACG,KAAK,CAAC,mBAAmB,CAAC,EAAE;QACrCH,MAAM,CAACgB,QAAQ,CAAC,SAAS,CAAC;QAC1B,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC;MAC3B;MACA;MACA,IAAItB,EAAE,IAAI,GAAG,EAAE;QACbM,MAAM,CAACc,IAAI,CAAC,CAAC;QACb,OAAO,CAACd,MAAM,CAACG,KAAK,CAAC,wBAAwB,CAAC,GAAG,SAAS,GAAE,UAAU,EAAE,WAAW,CAAC;MACtF;MACA;MACA,IAAIT,EAAE,IAAI,GAAG,IAAIM,MAAM,CAACG,KAAK,CAAC,iBAAiB,CAAC,EAAE;QAChD,OAAO,CAAC,WAAW,EAAE,WAAW,CAAC;MACnC;MACA;MACA,IAAIH,MAAM,CAACG,KAAK,CAAC5B,mBAAmB,CAAC,EAAE;QACrC,IAAIyB,MAAM,CAACU,IAAI,CAAC,CAAC,IAAI,GAAG,EAAET,KAAK,CAACW,QAAQ,GAAGM,kBAAkB;QAC7D,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC;MAC7B;MACA;MACA,IAAIlB,MAAM,CAACG,KAAK,CAAC,iBAAiB,CAAC,EAAE;QACnCH,MAAM,CAACmB,MAAM,CAAC,CAAC,CAAC;QAChB,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC;MAC7B;MACA;MACA,IAAInB,MAAM,CAACG,KAAK,CAAC,uBAAuB,CAAC,EAAE;QACzCH,MAAM,CAACmB,MAAM,CAAC,CAAC,CAAC;QAChB,OAAO,CAAC,SAAS,EAAE,aAAa,CAAC;MACnC;MACA;MACA,IAAInB,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC,OAAO,CAAC,IAAIH,MAAM,CAACG,KAAK,CAAC,mBAAmB,CAAC,EAAE;QACrE,OAAO,CAAC,WAAW,EAAE,WAAW,CAAC;MACnC;MACA;MACA,IAAIH,MAAM,CAACG,KAAK,CAAC,2BAA2B,CAAC,EAAE;QAC7CH,MAAM,CAACmB,MAAM,CAAC,CAAC,CAAC;QAChB,OAAO,CAAC,YAAY,EAAE,WAAW,CAAC;MACpC;MACA,IAAInB,MAAM,CAACG,KAAK,CAAC,WAAW,CAAC,EAAE;QAC7B,OAAO,CAAC,YAAY,EAAE,WAAW,CAAC;MACpC;MACA;MACA,IAAIH,MAAM,CAACG,KAAK,CAACnB,0BAA0B,CAAC,EAAE;QAC5C,OAAO,CAAC,UAAU,EAAE,UAAU,CAAC;MACjC;MACA;MACA,IAAIgB,MAAM,CAACG,KAAK,CAAC,2BAA2B,CAAC,EAAE;QAC7C;QACA,IAAIH,MAAM,CAACG,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,EAAE;UAChD,IAAI,CAACiB,SAAS,CAACpB,MAAM,CAACiB,OAAO,CAAC,CAAC,CAAC,EAAE;YAChCjB,MAAM,CAACG,KAAK,CAAC,GAAG,CAAC;YACjB,OAAO,CAAC,YAAY,EAAE,eAAe,CAAC;UACxC;QACF;QACA,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC;MAC/B;MACA;MACA,IAAIH,MAAM,CAACG,KAAK,CAACpB,eAAe,CAAC,EAAE;QACjC,OAAO,CAAC,UAAU,EAAEiB,MAAM,CAACiB,OAAO,CAAC,CAAC,CAAC;MACvC;MACA;MACA,IAAI,iBAAiB,CAACI,IAAI,CAAC3B,EAAE,CAAC,EAAE;QAC9BM,MAAM,CAACc,IAAI,CAAC,CAAC;QACb,OAAO,CAAC,IAAI,EAAEpB,EAAE,CAAC;MACnB;MACA;MACAM,MAAM,CAACc,IAAI,CAAC,CAAC;MACb,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;IACrB;;IAEA;AACJ;AACA;IACI,SAASD,aAAaA,CAACb,MAAM,EAAEC,KAAK,EAAE;MACpC,IAAIqB,QAAQ,GAAG,KAAK;QAAE5B,EAAE;MACxB,OAAO,CAACA,EAAE,GAAGM,MAAM,CAACc,IAAI,CAAC,CAAC,KAAK,IAAI,EAAE;QACnC,IAAIQ,QAAQ,IAAI5B,EAAE,IAAI,GAAG,EAAE;UACzBO,KAAK,CAACW,QAAQ,GAAG,IAAI;UACrB;QACF;QACAU,QAAQ,GAAI5B,EAAE,IAAI,GAAI;MACxB;MACA,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC;IAC/B;;IAEA;AACJ;AACA;IACI,SAASqB,WAAWA,CAACQ,KAAK,EAAE;MAC1B,OAAO,UAASvB,MAAM,EAAEC,KAAK,EAAE;QAC7B,IAAIuB,OAAO,GAAG,KAAK;UAAE9B,EAAE;QACvB,OAAO,CAACA,EAAE,GAAGM,MAAM,CAACc,IAAI,CAAC,CAAC,KAAK,IAAI,EAAE;UACnC,IAAIpB,EAAE,IAAI6B,KAAK,IAAI,CAACC,OAAO,EAAE;YAC3B,IAAID,KAAK,IAAI,GAAG,EAAEvB,MAAM,CAACmB,MAAM,CAAC,CAAC,CAAC;YAClC;UACF;UACAK,OAAO,GAAG,CAACA,OAAO,IAAI9B,EAAE,IAAI,IAAI;QAClC;QACA,IAAIA,EAAE,IAAI6B,KAAK,IAAI,CAACC,OAAO,IAAID,KAAK,IAAI,GAAG,EAAEtB,KAAK,CAACW,QAAQ,GAAG,IAAI;QAClE,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC;MAC7B,CAAC;IACH;;IAEA;AACJ;AACA;IACI,SAASM,kBAAkBA,CAAClB,MAAM,EAAEC,KAAK,EAAE;MACzCD,MAAM,CAACc,IAAI,CAAC,CAAC,CAAC,CAAC;MACf,IAAI,CAACd,MAAM,CAACG,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,EACpCF,KAAK,CAACW,QAAQ,GAAGG,WAAW,CAAC,GAAG,CAAC,CAAC,KAElCd,KAAK,CAACW,QAAQ,GAAG,IAAI;MACvB,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;IACpB;;IAEA;AACJ;AACA;IACI,SAASa,OAAOA,CAAC7B,IAAI,EAAEY,MAAM,EAAEkB,IAAI,EAAErB,IAAI,EAAE;MACzC,IAAI,CAACT,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACY,MAAM,GAAGA,MAAM;MACpB,IAAI,CAACkB,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACrB,IAAI,GAAGA,IAAI,IAAI;QAACC,SAAS,EAAE,EAAE;QAAEE,MAAM,EAAE;MAAC,CAAC;IAChD;IAEA,SAASmB,WAAWA,CAAC1B,KAAK,EAAED,MAAM,EAAEJ,IAAI,EAAEY,MAAM,EAAE;MAChDA,MAAM,GAAGA,MAAM,IAAI,CAAC,GAAGA,MAAM,GAAGjD,UAAU;MAC1C0C,KAAK,CAACG,OAAO,GAAG,IAAIqB,OAAO,CAAC7B,IAAI,EAAEI,MAAM,CAACS,WAAW,CAAC,CAAC,GAAGD,MAAM,EAAEP,KAAK,CAACG,OAAO,CAAC;MAC/E,OAAOR,IAAI;IACb;IAEA,SAASgC,UAAUA,CAAC3B,KAAK,EAAE4B,aAAa,EAAE;MACxC,IAAIC,aAAa,GAAG7B,KAAK,CAACG,OAAO,CAACI,MAAM,GAAGjD,UAAU;MACrDsE,aAAa,GAAGA,aAAa,IAAI,KAAK;MACtC5B,KAAK,CAACG,OAAO,GAAGH,KAAK,CAACG,OAAO,CAACsB,IAAI;MAClC,IAAIG,aAAa,EAAE5B,KAAK,CAACG,OAAO,CAACI,MAAM,GAAGsB,aAAa;MACvD,OAAO7B,KAAK,CAACG,OAAO,CAACR,IAAI;IAC3B;IAEA,SAASmC,IAAIA,CAACnC,IAAI,EAAEI,MAAM,EAAEC,KAAK,EAAE;MACjC,OAAOR,MAAM,CAACQ,KAAK,CAACG,OAAO,CAACR,IAAI,CAAC,CAACA,IAAI,EAAEI,MAAM,EAAEC,KAAK,CAAC;IACxD;IAEA,SAAS+B,UAAUA,CAACpC,IAAI,EAAEI,MAAM,EAAEC,KAAK,EAAEgC,CAAC,EAAE;MAC1C,KAAK,IAAIC,CAAC,GAAGD,CAAC,IAAI,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAC7BjC,KAAK,CAACG,OAAO,GAAGH,KAAK,CAACG,OAAO,CAACsB,IAAI;MACpC,OAAOK,IAAI,CAACnC,IAAI,EAAEI,MAAM,EAAEC,KAAK,CAAC;IAClC;;IAGA;AACJ;AACA;IACI,SAASmB,SAASA,CAACe,IAAI,EAAE;MACvB,OAAOA,IAAI,CAACC,WAAW,CAAC,CAAC,IAAI3E,WAAW;IAC1C;IAEA,SAAS4E,cAAcA,CAACF,IAAI,EAAE;MAC5BA,IAAI,GAAGA,IAAI,CAACC,WAAW,CAAC,CAAC;MACzB,OAAOD,IAAI,IAAItE,gBAAgB,IAAIsE,IAAI,IAAItD,cAAc;IAC3D;IAEA,SAASyD,WAAWA,CAACH,IAAI,EAAE;MACzB,OAAOA,IAAI,CAACC,WAAW,CAAC,CAAC,IAAIlD,aAAa;IAC5C;IAEA,SAASqD,kBAAkBA,CAACJ,IAAI,EAAE;MAChC,OAAOA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACjC,KAAK,CAACf,oBAAoB,CAAC;IACvD;IAEA,SAASoD,WAAWA,CAACL,IAAI,EAAE;MACzB,IAAIM,MAAM,GAAGN,IAAI,CAACC,WAAW,CAAC,CAAC;MAC/B,IAAIvC,QAAQ,GAAG,YAAY;MAC3B,IAAIuB,SAAS,CAACe,IAAI,CAAC,EAAEtC,QAAQ,GAAG,KAAK,CAAC,KACjC,IAAIyC,WAAW,CAACH,IAAI,CAAC,EAAEtC,QAAQ,GAAG,eAAe,CAAC,KAClD,IAAIwC,cAAc,CAACF,IAAI,CAAC,EAAEtC,QAAQ,GAAG,UAAU,CAAC,KAChD,IAAI4C,MAAM,IAAIxE,aAAa,IAAIwE,MAAM,IAAInD,WAAW,EAAEO,QAAQ,GAAG,MAAM,CAAC,KACxE,IAAI4C,MAAM,IAAI,QAAQ,IAAIA,MAAM,IAAItE,aAAa,EAAE0B,QAAQ,GAAG,SAAS;;MAE5E;MAAA,KACK,IAAIsC,IAAI,CAAChC,KAAK,CAAC,QAAQ,CAAC,EAAEN,QAAQ,GAAG,QAAQ;MAClD,OAAOA,QAAQ;IACjB;IAEA,SAAS6C,WAAWA,CAAC9C,IAAI,EAAEI,MAAM,EAAE;MACjC,OAAS2C,SAAS,CAAC3C,MAAM,CAAC,KAAKJ,IAAI,IAAI,GAAG,IAAIA,IAAI,IAAI,GAAG,IAAIA,IAAI,IAAI,MAAM,IAAIA,IAAI,IAAI,WAAW,CAAC,IAAKA,IAAI,IAAI,aAAa;IAC/H;IAEA,SAASgD,mBAAmBA,CAAChD,IAAI,EAAEI,MAAM,EAAE;MACzC,OAAOJ,IAAI,IAAI,GAAG,IAAII,MAAM,CAACG,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC;IAC7D;IAEA,SAAS0C,YAAYA,CAACjD,IAAI,EAAEI,MAAM,EAAE;MAClC,OAAOJ,IAAI,IAAI,GAAG,IAAII,MAAM,CAACG,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC;IACvD;IAEA,SAAS2C,WAAWA,CAAC9C,MAAM,EAAE;MAC3B,OAAOA,MAAM,CAAC+C,GAAG,CAAC,CAAC,IAAI/C,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC,IAAId,MAAM,CAAC,OAAO,GAAG2D,YAAY,CAAChD,MAAM,CAACiB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAClG;IAEA,SAAS0B,SAASA,CAAC3C,MAAM,EAAE;MACzB,OAAOA,MAAM,CAACiD,GAAG,CAAC,CAAC,IAAIjD,MAAM,CAACG,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC;IACrD;IAEA,SAAS+C,eAAeA,CAAC7C,IAAI,EAAE;MAC7B,IAAI8C,EAAE,GAAG,2BAA2B;MACpC,IAAIC,MAAM,GAAG,OAAO/C,IAAI,IAAI,QAAQ,GAAGA,IAAI,CAACF,KAAK,CAACgD,EAAE,CAAC,GAAG9C,IAAI,CAACH,MAAM,CAACC,KAAK,CAACgD,EAAE,CAAC;MAC7E,OAAOC,MAAM,GAAGA,MAAM,CAAC,CAAC,CAAC,CAAC7C,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,EAAE;IACpD;;IAGA;AACJ;AACA;IACId,MAAM,CAAC4D,KAAK,GAAG,UAASzD,IAAI,EAAEI,MAAM,EAAEC,KAAK,EAAE;MAC3C,IAAKL,IAAI,IAAI,SAAS,IAAIkD,WAAW,CAAC9C,MAAM,CAAC,IACxCJ,IAAI,IAAI,GAAG,IAAI+C,SAAS,CAAC3C,MAAM,CAAE,IAClCJ,IAAI,IAAI,OAAO,EAAE;QACnB,OAAO+B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;MAC/C;MACA,IAAI4C,mBAAmB,CAAChD,IAAI,EAAEI,MAAM,CAAC,EAAE;QACrC,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,eAAe,CAAC;MACpD;MACA,IAAI2C,SAAS,CAAC3C,MAAM,CAAC,IAAIJ,IAAI,IAAI,GAAG,EAAE;QACpC,IAAI,CAAC,sBAAsB,CAACyB,IAAI,CAACrB,MAAM,CAACE,MAAM,CAAC,IAAI,CAACkB,SAAS,CAAC8B,eAAe,CAAClD,MAAM,CAAC,CAAC,EAAE;UACtF,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/C;MACF;MACA,IAAI0C,WAAW,CAAC9C,IAAI,EAAEI,MAAM,CAAC,EAAE;QAC7B,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,CAAC;MAC5C;MACA,IAAIJ,IAAI,IAAI,GAAG,IAAI+C,SAAS,CAAC3C,MAAM,CAAC,EAAE;QACpC,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;MAC/C;MACA,IAAIJ,IAAI,IAAI,eAAe,EAAE;QAC3B,IAAII,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC,yBAAyB,CAAC,IAAImC,WAAW,CAACY,eAAe,CAAClD,MAAM,CAAC,CAAC,EAAE;UAC1F,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,cAAc,CAAC;QACnD,CAAC,MACI;UACH,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;QACtD;MACF;MACA,IAAIJ,IAAI,IAAI,GAAG,EAAE;QACf,IAAI,CAAC+C,SAAS,CAAC3C,MAAM,CAAC,IAAI,CAACsC,WAAW,CAACY,eAAe,CAAClD,MAAM,CAAC,CAAC,EAAE;UAC/D,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/C;QACA,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,CAAC;MAC5C;MACA,IAAIJ,IAAI,IAAI,GAAG,EAAE;QACf,IAAI+C,SAAS,CAAC3C,MAAM,CAAC,IAAIA,MAAM,CAACG,KAAK,CAAC,oBAAoB,EAAC,KAAK,CAAC,EAAE;UACjEN,QAAQ,GAAG,KAAK;UAChB,OAAO8B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,CAAC;QAC5C;MACF;MACA,IAAI6C,YAAY,CAACjD,IAAI,EAAEI,MAAM,CAAC,EAAE;QAC9B,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,QAAQ,CAAC;MAC7C;MACA,IAAI,8CAA8C,CAACqB,IAAI,CAACzB,IAAI,CAAC,EAAE;QAC7D,OAAO+B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE2C,SAAS,CAAC3C,MAAM,CAAC,GAAG,OAAO,GAAG,SAAS,CAAC;MAC5E;MACA,IAAI,mCAAmC,CAACqB,IAAI,CAACzB,IAAI,CAAC,EAAE;QAClD,OAAO+B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,WAAW,CAAC;MAChD;MACA,IAAI,WAAW,CAACqB,IAAI,CAACzB,IAAI,CAAC,EAAE;QAC1B,OAAO+B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC;MAChD;MACA,IAAIJ,IAAI,IAAIA,IAAI,CAAC0D,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;QAEjC;QACA,IAAItD,MAAM,CAACS,WAAW,CAAC,CAAC,GAAG,CAAC,IAAI4B,cAAc,CAACrC,MAAM,CAACiB,OAAO,CAAC,CAAC,CAACsC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;UACzE1D,QAAQ,GAAG,YAAY;UACvB,OAAO,OAAO;QAChB;QACA,IAAI,6BAA6B,CAACwB,IAAI,CAACzB,IAAI,CAAC,EAAE;UAC5C,OAAO+B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/C;QACA,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,CAAC;MAC5C;MACA,IAAIJ,IAAI,IAAI,WAAW,IAAI+C,SAAS,CAAC3C,MAAM,CAAC,EAAE;QAC5C,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,CAAC;MAC5C;MACA,IAAIJ,IAAI,IAAI,GAAG,EAAE;QACf,OAAO+B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,QAAQ,CAAC;MAC7C;MAEA,IAAIJ,IAAI,IAAI,iBAAiB,EAAE;QAC7B,OAAO+B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,gBAAgB,CAAC;MACrD;MACA,IAAIJ,IAAI,IAAI,MAAM,EAAE;QAClB,IAAIuC,IAAI,GAAGnC,MAAM,CAACiB,OAAO,CAAC,CAAC;QAC3BpB,QAAQ,GAAG2C,WAAW,CAACL,IAAI,CAAC;QAE5B,IAAItC,QAAQ,IAAI,UAAU,EAAE;UAC1B,IAAIiD,WAAW,CAAC9C,MAAM,CAAC,EAAE;YACvB,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;UAC/C,CAAC,MAAM;YACLH,QAAQ,GAAG,MAAM;YACjB,OAAO,OAAO;UAChB;QACF;QAEA,IAAIA,QAAQ,IAAI,KAAK,EAAE;UAErB;UACA,IAAI,mCAAmC,CAACwB,IAAI,CAACc,IAAI,CAAC,EAAE;YAClD,IAAIE,cAAc,CAACa,eAAe,CAAClD,MAAM,CAAC,CAAC,EAAE;cAC3CH,QAAQ,GAAG,MAAM;cACjB,OAAO,OAAO;YAChB;UACF;;UAEA;UACA,IAAIG,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC,IAAId,MAAM,CAAC,SAAS,GAAG8C,IAAI,GAAG,GAAG,GAAGA,IAAI,GAAE,SAAS,CAAC,CAAC,EAAE;YAC7EtC,QAAQ,GAAG,MAAM;YACjB,OAAO,OAAO;UAChB;;UAEA;UACA,IAAIjC,kBAAkB,CAACyD,IAAI,CAACc,IAAI,CAAC,EAAE;YACjC,IAAKW,WAAW,CAAC9C,MAAM,CAAC,IAAIA,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,IAC/C,CAAC2C,WAAW,CAAC9C,MAAM,CAAC,IACpB,CAACA,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC,0BAA0B,CAAC,IAChD,CAACiB,SAAS,CAAC8B,eAAe,CAAClD,MAAM,CAAC,CAAE,EAAE;cACzCH,QAAQ,GAAG,YAAY;cACvB,IAAIyC,WAAW,CAACY,eAAe,CAAClD,MAAM,CAAC,CAAC,EAAG,OAAO,OAAO;cACzD,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;YAC/C;UACF;UAEA,IAAI2C,SAAS,CAAC3C,MAAM,CAAC,EAAE,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,CAAC;QACnE;QACA,IAAIH,QAAQ,IAAI,eAAe,EAAE;UAC/BA,QAAQ,GAAG,SAAS;;UAEpB;UACA,IAAIG,MAAM,CAACiB,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC6B,WAAW,CAAC9C,MAAM,CAAC,EAAE;YACzD,OAAO,OAAO;UAChB;UACA,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,CAAC;QAC5C;QACA,IAAImC,IAAI,IAAI,QAAQ,EAAE,OAAOR,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;;QAEnE;QACA,IAAIH,QAAQ,IAAI,YAAY,IAAIG,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC,yBAAyB,CAAC,EAAE;UAC9E,OAAOwB,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,CAAC;QAC5C;MACF;MACA,OAAOC,KAAK,CAACG,OAAO,CAACR,IAAI;IAC3B,CAAC;;IAGD;AACJ;AACA;IACIH,MAAM,CAAC+D,MAAM,GAAG,UAAS5D,IAAI,EAAEI,MAAM,EAAEC,KAAK,EAAE;MAC5C,IAAIL,IAAI,IAAI,GAAG,EAAE,OAAO+B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,QAAQ,CAAC;MAC5D,IAAIJ,IAAI,IAAI,GAAG,EAAE;QACf,IAAIK,KAAK,CAACG,OAAO,CAACsB,IAAI,CAAC9B,IAAI,IAAI,QAAQ,EAAE;UACvC,OAAOgC,UAAU,CAAC3B,KAAK,CAAC;QAC1B;QACA,IAAKD,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC,iBAAiB,CAAC,IAAIwC,SAAS,CAAC3C,MAAM,CAAC,IAC5DsC,WAAW,CAACY,eAAe,CAAClD,MAAM,CAAC,CAAC,IACpC,4BAA4B,CAACqB,IAAI,CAAC6B,eAAe,CAAClD,MAAM,CAAC,CAAC,IACzD,CAACA,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC,8BAA8B,CAAC,IACpDiB,SAAS,CAAC8B,eAAe,CAAClD,MAAM,CAAC,CAAE,EAAE;UACxC,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,CAAC;QAC5C;QACA,IAAIA,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC,kCAAkC,CAAC,IACvDH,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC,mBAAmB,CAAC,IACxCH,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC,oBAAoB,CAAC,IACzCH,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC,kBAAkB,CAAC,EAAE;UAC3C,OAAOwB,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/C;QACA,IAAI2C,SAAS,CAAC3C,MAAM,CAAC,EAAE,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,CAAC,CAAC,KAC7D,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;MACpD;MACA,IAAIJ,IAAI,IAAIA,IAAI,CAAC0D,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,IAAIjB,cAAc,CAACrC,MAAM,CAACiB,OAAO,CAAC,CAAC,CAACsC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;QAC9E1D,QAAQ,GAAG,YAAY;MACzB;MACA,IAAID,IAAI,IAAI,MAAM,EAAE;QAClB,IAAIuC,IAAI,GAAGnC,MAAM,CAACiB,OAAO,CAAC,CAAC;QAC3BpB,QAAQ,GAAG2C,WAAW,CAACL,IAAI,CAAC;QAC5B,IAAItC,QAAQ,IAAI,KAAK,IAAIjC,kBAAkB,CAACyD,IAAI,CAACc,IAAI,CAAC,EAAE;UACtDtC,QAAQ,GAAG,YAAY;QACzB;QACA,IAAIA,QAAQ,IAAI,UAAU,IAAIsC,IAAI,IAAI,IAAI,EAAEtC,QAAQ,GAAG,MAAM;MAC/D;MACA,IAAID,IAAI,IAAI,eAAe,EAAE;QAC3B,OAAO+B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,cAAc,CAAC;MACnD;MACA,IAAI6C,YAAY,CAACjD,IAAI,EAAEI,MAAM,CAAC,EAAE;QAC9B,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,QAAQ,CAAC;MAC7C;MACA,OAAOC,KAAK,CAACG,OAAO,CAACR,IAAI;IAC3B,CAAC;;IAGD;AACJ;AACA;IACIH,MAAM,CAACgE,cAAc,GAAG,UAAS7D,IAAI,EAAEI,MAAM,EAAEC,KAAK,EAAE;MACpD,IAAIL,IAAI,IAAI,MAAM,EAAE;QAClBC,QAAQ,GAAG,UAAU;QACrB,OAAO8B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;MAC/C;MACA,OAAO4B,UAAU,CAAC3B,KAAK,CAAC;IAC1B,CAAC;;IAGD;AACJ;AACA;IACIR,MAAM,CAACiE,MAAM,GAAG,UAAS9D,IAAI,EAAEI,MAAM,EAAEC,KAAK,EAAE;MAC5C,IAAI,CAACoC,cAAc,CAACa,eAAe,CAAClD,MAAM,CAACE,MAAM,CAAC,CAAC,EAAE;QACnDF,MAAM,CAACG,KAAK,CAAC,UAAU,CAAC;QACxBN,QAAQ,GAAG,YAAY;QACvB,IAAI8C,SAAS,CAAC3C,MAAM,CAAC,EAAE,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,CAAC;QACjE,OAAO4B,UAAU,CAAC3B,KAAK,CAAC;MAC1B;MACA,OAAO+B,UAAU,CAACpC,IAAI,EAAEI,MAAM,EAAEC,KAAK,CAAC;IACxC,CAAC;;IAGD;AACJ;AACA;IACIR,MAAM,CAACkE,OAAO,GAAG,UAAS/D,IAAI,EAAEI,MAAM,EAAEC,KAAK,EAAE;MAC7C,IAAIL,IAAI,IAAI,GAAG,EAAE,OAAO+B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,gBAAgB,CAAC;MACpE,IAAI0C,WAAW,CAAC9C,IAAI,EAAEI,MAAM,CAAC,EAAE;QAC7B,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,CAAC;MAC5C;MACA,IAAI4C,mBAAmB,CAAChD,IAAI,EAAEI,MAAM,CAAC,EAAE;QACrC,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,eAAe,CAAC;MACpD;MACA,IAAIJ,IAAI,IAAI,MAAM,EAAE;QAClB,IAAIuC,IAAI,GAAGnC,MAAM,CAACiB,OAAO,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC;QACzC,IAAI,qBAAqB,CAACf,IAAI,CAACc,IAAI,CAAC,EAClCtC,QAAQ,GAAG,SAAS,CAAC,KAClB,IAAIxB,aAAa,CAACuF,cAAc,CAACzB,IAAI,CAAC,EACzCtC,QAAQ,GAAG,KAAK,CAAC,KACd,IAAIlB,UAAU,CAACiF,cAAc,CAACzB,IAAI,CAAC,EACtCtC,QAAQ,GAAG,WAAW,CAAC,KACpB,IAAIpB,aAAa,CAACmF,cAAc,CAACzB,IAAI,CAAC,EACzCtC,QAAQ,GAAG,UAAU,CAAC,KACnB,IAAI9B,2BAA2B,CAAC6F,cAAc,CAACzB,IAAI,CAAC,EACvDtC,QAAQ,GAAG,UAAU,CAAC,KACnBA,QAAQ,GAAG2C,WAAW,CAACxC,MAAM,CAACiB,OAAO,CAAC,CAAC,CAAC;QAC7C,IAAIpB,QAAQ,IAAI,KAAK,IAAI8C,SAAS,CAAC3C,MAAM,CAAC,EAAE;UAC1C,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,CAAC;QAC5C;MACF;MACA,IAAIJ,IAAI,IAAI,UAAU,IAAI,gBAAgB,CAACyB,IAAI,CAACrB,MAAM,CAACiB,OAAO,CAAC,CAAC,CAAC,EAAE;QACjEpB,QAAQ,GAAG,SAAS;MACtB;MACA,OAAOI,KAAK,CAACG,OAAO,CAACR,IAAI;IAC3B,CAAC;IAEDH,MAAM,CAACoE,cAAc,GAAG,UAASjE,IAAI,EAAEI,MAAM,EAAEC,KAAK,EAAE;MACpD,IAAIL,IAAI,IAAI,GAAG,IAAIA,IAAI,IAAI,GAAG,EAAE,OAAOK,KAAK,CAACG,OAAO,CAACR,IAAI;MACzD,IAAIA,IAAI,IAAI,GAAG,EAAE;QACf,IAAI+C,SAAS,CAAC3C,MAAM,CAAC,EAAE,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,CAAC,CAAC,KAC7D,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,SAAS,CAAC;MACnD;MACA,IAAIJ,IAAI,IAAI,MAAM,EAAE;QAClB,IAAIuC,IAAI,GAAGnC,MAAM,CAACiB,OAAO,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC;QACzCvC,QAAQ,GAAG2C,WAAW,CAACL,IAAI,CAAC;QAC5B,IAAI,YAAY,CAACd,IAAI,CAACc,IAAI,CAAC,EAAEtC,QAAQ,GAAG,UAAU;QAClD,IAAIA,QAAQ,IAAI,KAAK,EAAE;UACrBjC,kBAAkB,CAACyD,IAAI,CAACc,IAAI,CAAC,GAAGtC,QAAQ,GAAG,YAAY,GAAGA,QAAQ,GAAG,MAAM;QAC7E;QACA,OAAOI,KAAK,CAACG,OAAO,CAACR,IAAI;MAC3B;MACA,OAAOH,MAAM,CAACkE,OAAO,CAAC/D,IAAI,EAAEI,MAAM,EAAEC,KAAK,CAAC;IAC5C,CAAC;;IAGD;AACJ;AACA;IACIR,MAAM,CAACqE,SAAS,GAAG,UAASlE,IAAI,EAAEI,MAAM,EAAEC,KAAK,EAAE;MAC/C,IAAID,MAAM,CAACS,WAAW,CAAC,CAAC,IAAI,GAAG,KAAMb,IAAI,IAAI,GAAG,IAAIkD,WAAW,CAAC9C,MAAM,CAAC,IAAKJ,IAAI,IAAI,GAAG,IAAIA,IAAI,IAAI,MAAM,IAClEA,IAAI,IAAI,WAAW,IAAIwB,SAAS,CAACpB,MAAM,CAACiB,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;QAC1F,OAAOe,UAAU,CAACpC,IAAI,EAAEI,MAAM,EAAEC,KAAK,CAAC;MACxC;MACA,IAAIL,IAAI,IAAI,GAAG,EAAE,OAAO+B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,WAAW,CAAC;MAC/D,IAAIJ,IAAI,IAAI,GAAG,EAAE;QACf,IAAIkD,WAAW,CAAC9C,MAAM,CAAC,EAAE,OAAO4B,UAAU,CAAC3B,KAAK,EAAE,IAAI,CAAC,CAAC,KACnD,OAAO0B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,WAAW,CAAC;MACrD;MACA,IAAIJ,IAAI,IAAI,MAAM,IAAI,YAAY,CAACyB,IAAI,CAACrB,MAAM,CAACiB,OAAO,CAAC,CAAC,CAAC,EAAE;QACzD,OAAOU,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,WAAW,CAAC;MAChD;MACA,IAAIJ,IAAI,IAAI,MAAM,EAAE;QAClBC,QAAQ,GAAG2C,WAAW,CAACxC,MAAM,CAACiB,OAAO,CAAC,CAAC,CAAC;QACxC,IAAIpB,QAAQ,IAAI,eAAe,EAAE;UAC/BA,QAAQ,GAAG,SAAS;UACpB,OAAO8B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,WAAW,CAAC;QAChD;MACF;MACA,IAAI,8CAA8C,CAACqB,IAAI,CAACzB,IAAI,CAAC,EAAE;QAC7D,OAAO+B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE2C,SAAS,CAAC3C,MAAM,CAAC,GAAG,OAAO,GAAG,SAAS,CAAC;MAC5E;MACA,IAAIJ,IAAI,IAAI,OAAO,EAAE;QACnB,OAAO+B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;MAC/C;MACA,OAAOC,KAAK,CAACG,OAAO,CAACR,IAAI;IAC3B,CAAC;;IAGD;AACJ;AACA;IACIH,MAAM,CAACsE,aAAa,GAAG,UAASnE,IAAI,EAAEI,MAAM,EAAEC,KAAK,EAAE;MACnD,IAAIL,IAAI,IAAI,GAAG,EAAEgC,UAAU,CAAC3B,KAAK,CAAC,IAAI0B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,CAAC;MACzE,IAAIJ,IAAI,IAAI,GAAG,EAAE;QACf,IAAII,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC,iCAAiC,CAAC,IACrDH,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC,YAAY,CAAC,IAAIiB,SAAS,CAAC8B,eAAe,CAAClD,MAAM,CAAC,CAAE,EAAE;UAC7E,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,CAAC;QAC5C;QACA,IAAI,CAACA,MAAM,CAACE,MAAM,CAACC,KAAK,CAAC,aAAa,CAAC,IACnCH,MAAM,CAACG,KAAK,CAAC,UAAU,EAAC,KAAK,CAAC,EAAE;UAClC,OAAOwB,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;QAC/C;QACA,OAAO2B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,OAAO,CAAC;MAC5C;MACA,IAAIJ,IAAI,IAAI,eAAe,EAAE;QAC3B,OAAO+B,WAAW,CAAC1B,KAAK,EAAED,MAAM,EAAE,cAAc,EAAE,CAAC,CAAC;MACtD;MACA,IAAIJ,IAAI,IAAI,MAAM,EAAE;QAClBC,QAAQ,GAAG2C,WAAW,CAACxC,MAAM,CAACiB,OAAO,CAAC,CAAC,CAAC;QACxC,IAAIpB,QAAQ,IAAI,KAAK,EAAEA,QAAQ,GAAG,MAAM;MAC1C;MACA,OAAOI,KAAK,CAACG,OAAO,CAACR,IAAI;IAC3B,CAAC;;IAGD;AACJ;AACA;IACIH,MAAM,CAACuE,MAAM,GAAG,UAASpE,IAAI,EAAEI,MAAM,EAAEC,KAAK,EAAE;MAC5C,IAAIL,IAAI,IAAI,GAAG,IAAIA,IAAI,IAAI,GAAG,EAAE,OAAO,QAAQ;MAC/C,IAAIA,IAAI,IAAI,GAAG,EAAE,OAAOgC,UAAU,CAAC3B,KAAK,CAAC;MACzC,IAAIL,IAAI,IAAI,MAAM,EAAE;QAClBC,QAAQ,GAAG2C,WAAW,CAACxC,MAAM,CAACiB,OAAO,CAAC,CAAC,CAAC;QACxC,OAAO,QAAQ;MACjB;MACA,OAAOW,UAAU,CAAC3B,KAAK,CAAC;IAC1B,CAAC;;IAGD;AACJ;AACA;IACIR,MAAM,CAACwE,YAAY,GAAG,UAASrE,IAAI,EAAEI,MAAM,EAAEC,KAAK,EAAE;MAClD,IAAIL,IAAI,IAAI,QAAQ,IAAIA,IAAI,IAAI,GAAG,IAAIA,IAAI,IAAI,GAAG,IAAII,MAAM,CAACiB,OAAO,CAAC,CAAC,CAACd,KAAK,CAAC,UAAU,CAAC,EAAE;QACxF,IAAIH,MAAM,CAACiB,OAAO,CAAC,CAAC,CAACd,KAAK,CAAC,YAAY,CAAC,EAAEN,QAAQ,GAAG,YAAY;QACjE,OAAO,cAAc;MACvB;MACA,OAAOmC,UAAU,CAACpC,IAAI,EAAEI,MAAM,EAAEC,KAAK,CAAC;IACxC,CAAC;IAGD,OAAO;MACLiE,UAAU,EAAE,SAAAA,CAASC,IAAI,EAAE;QACzB,OAAO;UACLvD,QAAQ,EAAE,IAAI;UACdX,KAAK,EAAE,OAAO;UACdG,OAAO,EAAE,IAAIqB,OAAO,CAAC,OAAO,EAAE0C,IAAI,IAAI,CAAC,EAAE,IAAI;QAC/C,CAAC;MACH,CAAC;MACDC,KAAK,EAAE,SAAAA,CAASpE,MAAM,EAAEC,KAAK,EAAE;QAC7B,IAAI,CAACA,KAAK,CAACW,QAAQ,IAAIZ,MAAM,CAACqE,QAAQ,CAAC,CAAC,EAAE,OAAO,IAAI;QACrD1E,KAAK,GAAG,CAACM,KAAK,CAACW,QAAQ,IAAIb,SAAS,EAAEC,MAAM,EAAEC,KAAK,CAAC;QACpD,IAAIN,KAAK,IAAI,OAAOA,KAAK,IAAI,QAAQ,EAAE;UACrCC,IAAI,GAAGD,KAAK,CAAC,CAAC,CAAC;UACfA,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC;QAClB;QACAE,QAAQ,GAAGF,KAAK;QAChBM,KAAK,CAACA,KAAK,GAAGR,MAAM,CAACQ,KAAK,CAACA,KAAK,CAAC,CAACL,IAAI,EAAEI,MAAM,EAAEC,KAAK,CAAC;QACtD,OAAOJ,QAAQ;MACjB,CAAC;MACDW,MAAM,EAAE,SAAAA,CAASP,KAAK,EAAEqE,SAAS,EAAEjE,IAAI,EAAE;QAEvC,IAAIkE,EAAE,GAAGtE,KAAK,CAACG,OAAO;UAClBV,EAAE,GAAG4E,SAAS,IAAIA,SAAS,CAAChB,MAAM,CAAC,CAAC,CAAC;UACrC9C,MAAM,GAAG+D,EAAE,CAAC/D,MAAM;UAClBgE,aAAa,GAAGtB,eAAe,CAACoB,SAAS,CAAC;UAC1CG,UAAU,GAAGpE,IAAI,CAACF,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAACI,OAAO,CAAC,KAAK,EAAE/C,gBAAgB,CAAC,CAACsC,MAAM;UAC1E4E,iBAAiB,GAAGzE,KAAK,CAACG,OAAO,CAACsB,IAAI,GAAGzB,KAAK,CAACG,OAAO,CAACsB,IAAI,CAACrB,IAAI,CAACC,SAAS,GAAG,EAAE;UAC/EqE,cAAc,GAAG1E,KAAK,CAACG,OAAO,CAACsB,IAAI,GAAGzB,KAAK,CAACG,OAAO,CAACsB,IAAI,CAACrB,IAAI,CAACG,MAAM,GAAGiE,UAAU;QAErF,IAAIF,EAAE,CAAC7C,IAAI,KACNhC,EAAE,IAAI,GAAG,KAAK6E,EAAE,CAAC3E,IAAI,IAAI,OAAO,IAAI2E,EAAE,CAAC3E,IAAI,IAAI,SAAS,IAAI2E,EAAE,CAAC3E,IAAI,IAAI,WAAW,CAAC,IACnFF,EAAE,IAAI,GAAG,KAAK6E,EAAE,CAAC3E,IAAI,IAAI,QAAQ,IAAI2E,EAAE,CAAC3E,IAAI,IAAI,gBAAgB,CAAC,IACjEF,EAAE,IAAI,GAAG,IAAK6E,EAAE,CAAC3E,IAAI,IAAI,IAAK,CAAC,EAAE;UACpCY,MAAM,GAAG+D,EAAE,CAAC/D,MAAM,GAAGjD,UAAU;QACjC,CAAC,MAAM,IAAI,CAAE,MAAM,CAAC8D,IAAI,CAAC3B,EAAE,CAAE,EAAE;UAC7B,IAAI,SAAS,CAAC2B,IAAI,CAAC3B,EAAE,CAAC,IAClB,KAAK,CAAC2B,IAAI,CAACiD,SAAS,CAAC,IACnC,eAAe,CAACjD,IAAI,CAACiD,SAAS,CAAC,IACjB,UAAU,CAACjD,IAAI,CAACqD,iBAAiB,CAAC,IAClC,qCAAqC,CAACrD,IAAI,CAACiD,SAAS,CAAC,IACnE,wBAAwB,CAACjD,IAAI,CAACiD,SAAS,CAAC,IACxC,SAAS,CAACjD,IAAI,CAACiD,SAAS,CAAC,IACXhC,WAAW,CAACkC,aAAa,CAAC,EAAE;YAC9BhE,MAAM,GAAGiE,UAAU;UACrB,CAAC,MAAM,IAAI,4BAA4B,CAACpD,IAAI,CAAC3B,EAAE,CAAC,IAAI0B,SAAS,CAACoD,aAAa,CAAC,EAAE;YAC5E,IAAI,QAAQ,CAACnD,IAAI,CAACqD,iBAAiB,CAAC,EAAE;cACpClE,MAAM,GAAGmE,cAAc;YACzB,CAAC,MAAM,IAAI,MAAM,CAACtD,IAAI,CAAChB,IAAI,CAAC,KAAK,4BAA4B,CAACgB,IAAI,CAACqD,iBAAiB,CAAC,IAAItD,SAAS,CAACsD,iBAAiB,CAAC,CAAC,EAAE;cACtHlE,MAAM,GAAGiE,UAAU,IAAIE,cAAc,GAAGA,cAAc,GAAGA,cAAc,GAAGpH,UAAU;YACtF,CAAC,MAAM;cACLiD,MAAM,GAAGiE,UAAU;YACrB;UACF,CAAC,MAAM,IAAI,CAAC,OAAO,CAACpD,IAAI,CAAChB,IAAI,CAAC,KAAKkC,kBAAkB,CAACiC,aAAa,CAAC,IAAInC,cAAc,CAACmC,aAAa,CAAC,CAAC,EAAE;YACtG,IAAIlC,WAAW,CAACoC,iBAAiB,CAAC,EAAE;cAClClE,MAAM,GAAGiE,UAAU,IAAIE,cAAc,GAAGA,cAAc,GAAGA,cAAc,GAAGpH,UAAU;YACtF,CAAC,MAAM,IAAI,KAAK,CAAC8D,IAAI,CAACqD,iBAAiB,CAAC,EAAE;cACxClE,MAAM,GAAGiE,UAAU,IAAIE,cAAc,GAAGF,UAAU,GAAGE,cAAc,GAAGpH,UAAU;YAClF,CAAC,MAAM,IAAIgF,kBAAkB,CAACmC,iBAAiB,CAAC,IAAIrC,cAAc,CAACqC,iBAAiB,CAAC,EAAE;cACrFlE,MAAM,GAAGiE,UAAU,IAAIE,cAAc,GAAGA,cAAc,GAAGF,UAAU;YACrE,CAAC,MAAM,IAAI,kCAAkC,CAACpD,IAAI,CAACqD,iBAAiB,CAAC,IAC3D,OAAO,CAACrD,IAAI,CAACqD,iBAAiB,CAAC,IAC/BtD,SAAS,CAACsD,iBAAiB,CAAC,IAC5B,oBAAoB,CAACrD,IAAI,CAACqD,iBAAiB,CAAC,EAAE;cACtDlE,MAAM,GAAGmE,cAAc,GAAGpH,UAAU;YACtC,CAAC,MAAM;cACLiD,MAAM,GAAGiE,UAAU;YACrB;UACF;QACF;QACA,OAAOjE,MAAM;MACf,CAAC;MACDoE,aAAa,EAAE,GAAG;MAClBC,iBAAiB,EAAE,IAAI;MACvBC,eAAe,EAAE,IAAI;MACrBC,oBAAoB,EAAE,KAAK;MAC3BC,WAAW,EAAE,IAAI;MACjBC,IAAI,EAAE;IACR,CAAC;EACH,CAAC,CAAC;;EAEF;EACA,IAAItH,YAAY,GAAG,CAAC,GAAG,EAAC,MAAM,EAAC,SAAS,EAAC,MAAM,EAAC,SAAS,EAAC,OAAO,EAAC,OAAO,EAAE,GAAG,EAAE,MAAM,EAAC,KAAK,EAAE,KAAK,EAAC,SAAS,EAAC,YAAY,EAAC,MAAM,EAAC,IAAI,EAAC,QAAQ,EAAC,QAAQ,EAAC,SAAS,EAAC,MAAM,EAAE,MAAM,EAAC,KAAK,EAAC,UAAU,EAAC,MAAM,EAAC,UAAU,EAAC,IAAI,EAAC,KAAK,EAAC,SAAS,EAAC,KAAK,EAAC,KAAK,EAAE,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,OAAO,EAAC,UAAU,EAAC,YAAY,EAAC,QAAQ,EAAC,QAAQ,EAAC,MAAM,EAAC,IAAI,EAAE,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,IAAI,EAAC,MAAM,EAAC,QAAQ,EAAC,QAAQ,EAAC,IAAI,EAAC,MAAM,EAAC,GAAG,EAAC,QAAQ,EAAE,KAAK,EAAC,OAAO,EAAC,KAAK,EAAC,KAAK,EAAC,QAAQ,EAAC,OAAO,EAAC,QAAQ,EAAC,IAAI,EAAC,MAAM,EAAC,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,SAAS,EAAC,MAAM,EAAC,UAAU,EAAC,MAAM,EAAC,OAAO,EAAC,KAAK,EAAC,MAAM,EAAC,UAAU,EAAE,UAAU,EAAC,QAAQ,EAAC,IAAI,EAAC,UAAU,EAAC,QAAQ,EAAC,QAAQ,EAAC,GAAG,EAAC,OAAO,EAAC,KAAK,EAAE,UAAU,EAAC,GAAG,EAAC,IAAI,EAAC,IAAI,EAAC,MAAM,EAAC,GAAG,EAAC,MAAM,EAAC,QAAQ,EAAC,SAAS,EAAC,QAAQ,EAAE,OAAO,EAAC,QAAQ,EAAC,MAAM,EAAC,QAAQ,EAAC,OAAO,EAAC,KAAK,EAAC,SAAS,EAAC,KAAK,EAAC,OAAO,EAAC,OAAO,EAAC,IAAI,EAAC,UAAU,EAAC,OAAO,EAAC,IAAI,EAAC,OAAO,EAAC,MAAM,EAAC,IAAI,EAAC,OAAO,EAAE,GAAG,EAAC,IAAI,EAAC,KAAK,EAAC,OAAO,CAAC;;EAE31B;EACA;EACA,IAAIW,cAAc,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,KAAK,CAAC;EAC9D,IAAIM,WAAW,GAAG,CAAC,KAAK,EAAC,OAAO,EAAC,SAAS,EAAC,UAAU,EAAC,OAAO,EAAC,YAAY,EAAC,QAAQ,EAAC,KAAK,EAAC,IAAI,EAAC,UAAU,CAAC;EAC1G,IAAIF,cAAc,GAAG,CAAC,OAAO,EAAC,WAAW,EAAC,WAAW,EAAC,QAAQ,EAAC,YAAY,EAAC,YAAY,EAAC,cAAc,EAAC,kBAAkB,EAAC,kBAAkB,EAAC,eAAe,EAAC,mBAAmB,EAAC,mBAAmB,EAAC,cAAc,EAAC,kBAAkB,EAAC,kBAAkB,EAAC,qBAAqB,EAAC,yBAAyB,EAAC,yBAAyB,EAAC,OAAO,EAAC,WAAW,EAAC,WAAW,EAAC,aAAa,EAAC,iBAAiB,EAAC,iBAAiB,EAAC,YAAY,EAAC,gBAAgB,EAAC,gBAAgB,EAAC,YAAY,EAAC,gBAAgB,EAAC,gBAAgB,EAAC,MAAM,EAAC,MAAM,EAAC,eAAe,EAAC,qBAAqB,CAAC;EACziB,IAAIZ,iBAAiB,GAAG,CAAC,eAAe,EAAC,aAAa,EAAC,YAAY,EAAC,kBAAkB,EAAC,oBAAoB,EAAC,cAAc,EAAC,WAAW,EAAC,iBAAiB,EAAC,qBAAqB,EAAC,oBAAoB,EAAC,qBAAqB,EAAC,2BAA2B,EAAC,gBAAgB,EAAC,sBAAsB,EAAC,2BAA2B,EAAC,YAAY,EAAC,SAAS,EAAC,qBAAqB,EAAC,YAAY,EAAC,uBAAuB,EAAC,iBAAiB,EAAC,kBAAkB,EAAC,kBAAkB,EAAC,mBAAmB,EAAC,qBAAqB,EAAC,mBAAmB,EAAC,iBAAiB,EAAC,gBAAgB,EAAC,SAAS,EAAC,OAAO,EAAC,gBAAgB,EAAC,gBAAgB,EAAC,gBAAgB,EAAC,iBAAiB,EAAC,QAAQ,EAAC,eAAe,EAAC,qBAAqB,EAAC,2BAA2B,EAAC,4BAA4B,EAAC,qBAAqB,EAAC,qBAAqB,EAAC,iBAAiB,EAAC,cAAc,EAAC,cAAc,EAAC,qBAAqB,EAAC,qBAAqB,EAAC,oBAAoB,EAAC,qBAAqB,EAAC,oBAAoB,EAAC,aAAa,EAAC,mBAAmB,EAAC,mBAAmB,EAAC,mBAAmB,EAAC,eAAe,EAAC,cAAc,EAAC,oBAAoB,EAAC,oBAAoB,EAAC,oBAAoB,EAAC,gBAAgB,EAAC,cAAc,EAAC,YAAY,EAAC,kBAAkB,EAAC,wBAAwB,EAAC,yBAAyB,EAAC,kBAAkB,EAAC,kBAAkB,EAAC,cAAc,EAAC,QAAQ,EAAC,sBAAsB,EAAC,YAAY,EAAC,YAAY,EAAC,aAAa,EAAC,cAAc,EAAC,cAAc,EAAC,cAAc,EAAC,OAAO,EAAC,MAAM,EAAC,OAAO,EAAC,eAAe,EAAC,cAAc,EAAC,aAAa,EAAC,YAAY,EAAC,aAAa,EAAC,mBAAmB,EAAC,mBAAmB,EAAC,mBAAmB,EAAC,aAAa,EAAC,cAAc,EAAC,SAAS,EAAC,SAAS,EAAC,mBAAmB,EAAC,eAAe,EAAC,MAAM,EAAC,KAAK,EAAC,WAAW,EAAC,YAAY,EAAC,QAAQ,EAAC,WAAW,EAAC,SAAS,EAAC,mBAAmB,EAAC,2BAA2B,EAAC,0BAA0B,EAAC,4BAA4B,EAAC,2BAA2B,EAAC,mBAAmB,EAAC,oBAAoB,EAAC,WAAW,EAAC,aAAa,EAAC,KAAK,EAAC,cAAc,EAAC,MAAM,EAAC,YAAY,EAAC,gBAAgB,EAAC,WAAW,EAAC,WAAW,EAAC,aAAa,EAAC,WAAW,EAAC,OAAO,EAAC,cAAc,EAAC,WAAW,EAAC,WAAW,EAAC,MAAM,EAAC,uBAAuB,EAAC,aAAa,EAAC,cAAc,EAAC,wBAAwB,EAAC,WAAW,EAAC,kBAAkB,EAAC,cAAc,EAAC,YAAY,EAAC,gBAAgB,EAAC,cAAc,EAAC,yBAAyB,EAAC,mBAAmB,EAAC,yBAAyB,EAAC,wBAAwB,EAAC,sBAAsB,EAAC,uBAAuB,EAAC,aAAa,EAAC,MAAM,EAAC,WAAW,EAAC,mBAAmB,EAAC,gBAAgB,EAAC,oBAAoB,EAAC,gBAAgB,EAAC,aAAa,EAAC,iBAAiB,EAAC,mBAAmB,EAAC,UAAU,EAAC,cAAc,EAAC,gBAAgB,EAAC,eAAe,EAAC,qBAAqB,EAAC,uBAAuB,EAAC,oBAAoB,EAAC,qBAAqB,EAAC,QAAQ,EAAC,SAAS,EAAC,MAAM,EAAC,mBAAmB,EAAC,iBAAiB,EAAC,kBAAkB,EAAC,kBAAkB,EAAC,iBAAiB,EAAC,MAAM,EAAC,gBAAgB,EAAC,YAAY,EAAC,aAAa,EAAC,eAAe,EAAC,oBAAoB,EAAC,qBAAqB,EAAC,wBAAwB,EAAC,YAAY,EAAC,kBAAkB,EAAC,qBAAqB,EAAC,iBAAiB,EAAC,QAAQ,EAAC,eAAe,EAAC,aAAa,EAAC,cAAc,EAAC,YAAY,EAAC,eAAe,EAAC,OAAO,EAAC,mBAAmB,EAAC,cAAc,EAAC,oBAAoB,EAAC,eAAe,EAAC,eAAe,EAAC,YAAY,EAAC,WAAW,EAAC,YAAY,EAAC,WAAW,EAAC,SAAS,EAAC,UAAU,EAAC,WAAW,EAAC,UAAU,EAAC,WAAW,EAAC,QAAQ,EAAC,YAAY,EAAC,iBAAiB,EAAC,SAAS,EAAC,OAAO,EAAC,SAAS,EAAC,SAAS,EAAC,eAAe,EAAC,gBAAgB,EAAC,eAAe,EAAC,eAAe,EAAC,UAAU,EAAC,gBAAgB,EAAC,eAAe,EAAC,YAAY,EAAC,YAAY,EAAC,SAAS,EAAC,gBAAgB,EAAC,cAAc,EAAC,eAAe,EAAC,aAAa,EAAC,MAAM,EAAC,kBAAkB,EAAC,mBAAmB,EAAC,mBAAmB,EAAC,aAAa,EAAC,OAAO,EAAC,aAAa,EAAC,cAAc,EAAC,aAAa,EAAC,oBAAoB,EAAC,OAAO,EAAC,aAAa,EAAC,aAAa,EAAC,UAAU,EAAC,oBAAoB,EAAC,kBAAkB,EAAC,QAAQ,EAAC,oBAAoB,EAAC,qBAAqB,EAAC,qBAAqB,EAAC,iBAAiB,EAAC,kBAAkB,EAAC,QAAQ,EAAC,MAAM,EAAC,YAAY,EAAC,aAAa,EAAC,UAAU,EAAC,OAAO,EAAC,UAAU,EAAC,gBAAgB,EAAC,YAAY,EAAC,eAAe,EAAC,eAAe,EAAC,WAAW,EAAC,uBAAuB,EAAC,cAAc,EAAC,cAAc,EAAC,eAAe,EAAC,MAAM,EAAC,OAAO,EAAC,UAAU,EAAC,cAAc,EAAC,eAAe,EAAC,mBAAmB,EAAC,aAAa,EAAC,QAAQ,EAAC,YAAY,EAAC,UAAU,EAAC,cAAc,EAAC,QAAQ,EAAC,aAAa,EAAC,YAAY,EAAC,iBAAiB,EAAC,YAAY,EAAC,iBAAiB,EAAC,iBAAiB,EAAC,uBAAuB,EAAC,sBAAsB,EAAC,sBAAsB,EAAC,uBAAuB,EAAC,eAAe,EAAC,qBAAqB,EAAC,wBAAwB,EAAC,qBAAqB,EAAC,aAAa,EAAC,aAAa,EAAC,cAAc,EAAC,cAAc,EAAC,eAAe,EAAC,aAAa,EAAC,kBAAkB,EAAC,qBAAqB,EAAC,gBAAgB,EAAC,yBAAyB,EAAC,WAAW,EAAC,KAAK,EAAC,WAAW,EAAC,kBAAkB,EAAC,iBAAiB,EAAC,YAAY,EAAC,kBAAkB,EAAC,qBAAqB,EAAC,qBAAqB,EAAC,4BAA4B,EAAC,cAAc,EAAC,gBAAgB,EAAC,YAAY,EAAC,eAAe,EAAC,gBAAgB,EAAC,cAAc,EAAC,aAAa,EAAC,aAAa,EAAC,YAAY,EAAC,cAAc,EAAC,cAAc,EAAC,QAAQ,EAAC,aAAa,EAAC,QAAQ,EAAC,OAAO,EAAC,aAAa,EAAC,YAAY,EAAC,cAAc,EAAC,WAAW,EAAC,SAAS,EAAC,WAAW,EAAC,WAAW,EAAC,MAAM,EAAC,mBAAmB,EAAC,QAAQ,EAAC,aAAa,EAAC,eAAe,EAAC,gBAAgB,EAAC,YAAY,EAAC,cAAc,EAAC,gBAAgB,EAAC,qBAAqB,EAAC,6BAA6B,EAAC,iBAAiB,EAAC,MAAM,EAAC,cAAc,EAAC,WAAW,EAAC,iBAAiB,EAAC,QAAQ,EAAC,YAAY,EAAC,YAAY,EAAC,cAAc,EAAC,iBAAiB,EAAC,QAAQ,EAAC,kBAAkB,EAAC,mBAAmB,EAAC,gBAAgB,EAAC,iBAAiB,EAAC,mBAAmB,EAAC,gBAAgB,EAAC,cAAc,EAAC,gBAAgB,EAAC,gBAAgB,EAAC,mBAAmB,EAAC,8BAA8B,EAAC,4BAA4B,EAAC,aAAa,EAAC,cAAc,EAAC,gBAAgB,EAAC,oBAAoB,CAAC;EAC/sL,IAAIE,4BAA4B,GAAG,CAAC,uBAAuB,EAAC,sBAAsB,EAAC,6BAA6B,EAAC,sBAAsB,EAAC,2BAA2B,EAAC,wBAAwB,EAAC,0BAA0B,EAAC,uBAAuB,EAAC,cAAc,EAAC,2BAA2B,EAAC,wBAAwB,EAAC,4BAA4B,EAAC,gCAAgC,EAAC,MAAM,CAAC;EACzX,IAAIc,eAAe,GAAG,CAAC,aAAa,EAAC,KAAK,EAAC,eAAe,EAAC,cAAc,EAAC,uBAAuB,EAAC,cAAc,EAAC,aAAa,EAAC,YAAY,CAAC;EAC5I,IAAIV,cAAc,GAAG,CAAC,WAAW,EAAC,cAAc,EAAC,MAAM,EAAC,YAAY,EAAC,OAAO,EAAC,OAAO,EAAC,QAAQ,EAAC,OAAO,EAAC,gBAAgB,EAAC,MAAM,EAAC,YAAY,EAAC,OAAO,EAAC,WAAW,EAAC,WAAW,EAAC,YAAY,EAAC,WAAW,EAAC,OAAO,EAAC,gBAAgB,EAAC,UAAU,EAAC,SAAS,EAAC,MAAM,EAAC,UAAU,EAAC,UAAU,EAAC,eAAe,EAAC,UAAU,EAAC,WAAW,EAAC,WAAW,EAAC,aAAa,EAAC,gBAAgB,EAAC,YAAY,EAAC,YAAY,EAAC,SAAS,EAAC,YAAY,EAAC,cAAc,EAAC,eAAe,EAAC,eAAe,EAAC,eAAe,EAAC,YAAY,EAAC,UAAU,EAAC,aAAa,EAAC,SAAS,EAAC,YAAY,EAAC,WAAW,EAAC,aAAa,EAAC,aAAa,EAAC,SAAS,EAAC,WAAW,EAAC,YAAY,EAAC,MAAM,EAAC,WAAW,EAAC,MAAM,EAAC,MAAM,EAAC,OAAO,EAAC,aAAa,EAAC,UAAU,EAAC,SAAS,EAAC,WAAW,EAAC,QAAQ,EAAC,OAAO,EAAC,OAAO,EAAC,UAAU,EAAC,eAAe,EAAC,WAAW,EAAC,cAAc,EAAC,WAAW,EAAC,YAAY,EAAC,WAAW,EAAC,sBAAsB,EAAC,WAAW,EAAC,YAAY,EAAC,WAAW,EAAC,aAAa,EAAC,eAAe,EAAC,cAAc,EAAC,gBAAgB,EAAC,gBAAgB,EAAC,aAAa,EAAC,MAAM,EAAC,WAAW,EAAC,OAAO,EAAC,SAAS,EAAC,QAAQ,EAAC,kBAAkB,EAAC,YAAY,EAAC,cAAc,EAAC,cAAc,EAAC,gBAAgB,EAAC,iBAAiB,EAAC,mBAAmB,EAAC,iBAAiB,EAAC,iBAAiB,EAAC,cAAc,EAAC,WAAW,EAAC,WAAW,EAAC,UAAU,EAAC,aAAa,EAAC,MAAM,EAAC,SAAS,EAAC,OAAO,EAAC,WAAW,EAAC,QAAQ,EAAC,WAAW,EAAC,QAAQ,EAAC,eAAe,EAAC,WAAW,EAAC,eAAe,EAAC,eAAe,EAAC,YAAY,EAAC,WAAW,EAAC,MAAM,EAAC,MAAM,EAAC,MAAM,EAAC,YAAY,EAAC,QAAQ,EAAC,eAAe,EAAC,KAAK,EAAC,WAAW,EAAC,WAAW,EAAC,aAAa,EAAC,QAAQ,EAAC,YAAY,EAAC,UAAU,EAAC,UAAU,EAAC,QAAQ,EAAC,QAAQ,EAAC,SAAS,EAAC,WAAW,EAAC,WAAW,EAAC,MAAM,EAAC,aAAa,EAAC,WAAW,EAAC,KAAK,EAAC,MAAM,EAAC,SAAS,EAAC,QAAQ,EAAC,WAAW,EAAC,QAAQ,EAAC,OAAO,EAAC,OAAO,EAAC,YAAY,EAAC,QAAQ,EAAC,aAAa,CAAC;EAC9qD,IAAIF,cAAc,GAAG,CAAC,OAAO,EAAC,UAAU,EAAC,cAAc,EAAC,UAAU,EAAC,eAAe,EAAC,MAAM,EAAC,mBAAmB,EAAC,OAAO,EAAC,OAAO,EAAC,KAAK,EAAC,YAAY,EAAC,YAAY,EAAC,WAAW,EAAC,QAAQ,EAAC,SAAS,EAAC,iBAAiB,EAAC,aAAa,EAAC,cAAc,EAAC,cAAc,EAAC,UAAU,EAAC,WAAW,EAAC,MAAM,EAAC,MAAM,EAAC,OAAO,EAAC,cAAc,EAAC,YAAY,EAAC,cAAc,EAAC,YAAY,EAAC,WAAW,EAAC,UAAU,EAAC,OAAO,EAAC,eAAe,EAAC,QAAQ,EAAC,SAAS,EAAC,OAAO,EAAC,OAAO,EAAC,YAAY,EAAC,MAAM,EAAC,QAAQ,EAAC,QAAQ,EAAC,YAAY,EAAC,MAAM,EAAC,QAAQ,EAAC,OAAO,EAAC,WAAW,EAAC,YAAY,EAAC,SAAS,EAAC,QAAQ,EAAC,YAAY,EAAC,iBAAiB,EAAC,cAAc,EAAC,YAAY,EAAC,MAAM,EAAC,WAAW,EAAC,YAAY,EAAC,qBAAqB,EAAC,SAAS,EAAC,aAAa,EAAC,OAAO,EAAC,MAAM,EAAC,QAAQ,EAAC,UAAU,EAAC,QAAQ,EAAC,aAAa,EAAC,oBAAoB,EAAC,mBAAmB,EAAC,iBAAiB,EAAC,OAAO,EAAC,MAAM,EAAC,aAAa,EAAC,YAAY,EAAC,UAAU,EAAC,QAAQ,EAAC,SAAS,EAAC,WAAW,EAAC,gBAAgB,EAAC,SAAS,EAAC,SAAS,EAAC,UAAU,EAAC,aAAa,EAAC,cAAc,EAAC,YAAY,EAAC,MAAM,EAAC,SAAS,EAAC,UAAU,EAAC,OAAO,EAAC,MAAM,EAAC,OAAO,EAAC,WAAW,EAAC,cAAc,EAAC,SAAS,EAAC,QAAQ,EAAC,QAAQ,EAAC,SAAS,EAAC,sBAAsB,EAAC,SAAS,EAAC,gBAAgB,EAAC,kBAAkB,EAAC,gBAAgB,EAAC,iBAAiB,EAAC,kBAAkB,EAAC,YAAY,EAAC,MAAM,EAAC,SAAS,EAAC,mBAAmB,EAAC,iBAAiB,EAAC,UAAU,EAAC,UAAU,EAAC,cAAc,EAAC,QAAQ,EAAC,QAAQ,EAAC,MAAM,EAAC,UAAU,EAAC,MAAM,EAAC,SAAS,EAAC,aAAa,EAAC,UAAU,EAAC,SAAS,EAAC,SAAS,EAAC,UAAU,EAAC,OAAO,EAAC,KAAK,EAAC,UAAU,EAAC,kBAAkB,EAAC,wBAAwB,EAAC,sBAAsB,EAAC,wBAAwB,EAAC,wBAAwB,EAAC,yBAAyB,EAAC,yBAAyB,EAAC,yBAAyB,EAAC,uBAAuB,EAAC,yBAAyB,EAAC,0BAA0B,EAAC,yBAAyB,EAAC,yBAAyB,EAAC,yBAAyB,EAAC,uBAAuB,EAAC,kBAAkB,EAAC,WAAW,EAAC,UAAU,EAAC,SAAS,EAAC,iBAAiB,EAAC,gBAAgB,EAAC,SAAS,EAAC,MAAM,EAAC,MAAM,EAAC,OAAO,EAAC,MAAM,EAAC,MAAM,EAAC,WAAW,EAAC,UAAU,EAAC,MAAM,EAAC,oBAAoB,EAAC,UAAU,EAAC,UAAU,EAAC,QAAQ,EAAC,UAAU,EAAC,UAAU,EAAC,MAAM,EAAC,QAAQ,EAAC,kBAAkB,EAAC,QAAQ,EAAC,MAAM,EAAC,QAAQ,EAAC,MAAM,EAAC,MAAM,EAAC,QAAQ,EAAC,WAAW,EAAC,eAAe,EAAC,UAAU,EAAC,gBAAgB,EAAC,YAAY,EAAC,KAAK,EAAC,MAAM,EAAC,MAAM,EAAC,QAAQ,EAAC,gBAAgB,EAAC,iBAAiB,EAAC,qBAAqB,EAAC,UAAU,EAAC,gBAAgB,EAAC,UAAU,EAAC,SAAS,EAAC,SAAS,EAAC,QAAQ,EAAC,aAAa,EAAC,cAAc,EAAC,aAAa,EAAC,cAAc,EAAC,OAAO,EAAC,QAAQ,EAAC,WAAW,EAAC,QAAQ,EAAC,QAAQ,EAAC,iBAAiB,EAAC,mBAAmB,EAAC,SAAS,EAAC,SAAS,EAAC,UAAU,EAAC,gBAAgB,EAAC,UAAU,EAAC,OAAO,EAAC,sBAAsB,EAAC,qBAAqB,EAAC,uBAAuB,EAAC,WAAW,EAAC,KAAK,EAAC,OAAO,EAAC,QAAQ,EAAC,MAAM,EAAC,OAAO,EAAC,SAAS,EAAC,cAAc,EAAC,QAAQ,EAAC,iBAAiB,EAAC,OAAO,EAAC,WAAW,EAAC,SAAS,EAAC,UAAU,EAAC,OAAO,EAAC,SAAS,EAAC,MAAM,EAAC,OAAO,EAAC,aAAa,EAAC,gBAAgB,EAAC,aAAa,EAAC,mBAAmB,EAAC,aAAa,EAAC,iBAAiB,EAAC,aAAa,EAAC,WAAW,EAAC,KAAK,EAAC,WAAW,EAAC,OAAO,EAAC,QAAQ,EAAC,UAAU,EAAC,mBAAmB,EAAC,cAAc,EAAC,mBAAmB,EAAC,qBAAqB,EAAC,0BAA0B,EAAC,QAAQ,EAAC,MAAM,EAAC,UAAU,EAAC,iBAAiB,EAAC,UAAU,EAAC,aAAa,EAAC,QAAQ,EAAC,eAAe,EAAC,KAAK,EAAC,WAAW,EAAC,WAAW,EAAC,MAAM,EAAC,UAAU,EAAC,SAAS,EAAC,UAAU,EAAC,UAAU,EAAC,WAAW,EAAC,aAAa,EAAC,gBAAgB,EAAC,SAAS,EAAC,eAAe,EAAC,WAAW,EAAC,MAAM,EAAC,QAAQ,EAAC,aAAa,EAAC,QAAQ,EAAC,WAAW,EAAC,SAAS,EAAC,SAAS,EAAC,WAAW,EAAC,aAAa,EAAC,SAAS,EAAC,OAAO,EAAC,YAAY,EAAC,oBAAoB,EAAC,eAAe,EAAC,OAAO,EAAC,OAAO,EAAC,QAAQ,EAAC,SAAS,EAAC,eAAe,EAAC,SAAS,EAAC,UAAU,EAAC,SAAS,EAAC,aAAa,EAAC,SAAS,EAAC,MAAM,EAAC,QAAQ,EAAC,SAAS,EAAC,aAAa,EAAC,aAAa,EAAC,cAAc,EAAC,SAAS,EAAC,SAAS,EAAC,UAAU,EAAC,KAAK,EAAC,UAAU,EAAC,UAAU,EAAC,aAAa,EAAC,UAAU,EAAC,aAAa,EAAC,iBAAiB,EAAC,OAAO,EAAC,WAAW,EAAC,YAAY,EAAC,2BAA2B,EAAC,WAAW,EAAC,QAAQ,EAAC,UAAU,EAAC,QAAQ,EAAC,2BAA2B,EAAC,2BAA2B,EAAC,0BAA0B,EAAC,UAAU,EAAC,UAAU,EAAC,OAAO,EAAC,SAAS,EAAC,KAAK,EAAC,MAAM,EAAC,OAAO,EAAC,OAAO,EAAC,QAAQ,EAAC,UAAU,EAAC,SAAS,EAAC,SAAS,EAAC,SAAS,EAAC,OAAO,EAAC,YAAY,EAAC,KAAK,EAAC,QAAQ,EAAC,SAAS,EAAC,UAAU,EAAC,YAAY,EAAC,OAAO,EAAC,SAAS,EAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ,EAAC,QAAQ,EAAC,WAAW,EAAC,iBAAiB,EAAC,WAAW,EAAC,aAAa,EAAC,2BAA2B,EAAC,wBAAwB,EAAC,4BAA4B,EAAC,gCAAgC,EAAC,gBAAgB,EAAC,eAAe,EAAC,UAAU,EAAC,OAAO,EAAC,MAAM,EAAC,QAAQ,EAAC,qBAAqB,EAAC,uBAAuB,EAAC,QAAQ,EAAC,MAAM,EAAC,OAAO,EAAC,OAAO,EAAC,kBAAkB,EAAC,OAAO,EAAC,mBAAmB,EAAC,iBAAiB,EAAC,wBAAwB,EAAC,sBAAsB,EAAC,MAAM,EAAC,OAAO,EAAC,YAAY,EAAC,eAAe,EAAC,SAAS,EAAC,OAAO,EAAC,QAAQ,EAAC,aAAa,EAAC,WAAW,EAAC,YAAY,EAAC,aAAa,EAAC,OAAO,EAAC,WAAW,EAAC,QAAQ,EAAC,eAAe,EAAC,UAAU,EAAC,OAAO,EAAC,QAAQ,EAAC,YAAY,EAAC,SAAS,EAAC,QAAQ,EAAC,KAAK,EAAC,sBAAsB,EAAC,OAAO,EAAC,WAAW,EAAC,UAAU,EAAC,SAAS,EAAC,OAAO,EAAC,eAAe,EAAC,YAAY,EAAC,cAAc,EAAC,oBAAoB,EAAC,oBAAoB,EAAC,oBAAoB,EAAC,WAAW,EAAC,iBAAiB,EAAC,OAAO,EAAC,QAAQ,EAAC,MAAM,EAAC,aAAa,EAAC,UAAU,EAAC,UAAU,EAAC,WAAW,EAAC,MAAM,EAAC,OAAO,EAAC,MAAM,EAAC,kBAAkB,EAAC,YAAY,EAAC,iBAAiB,EAAC,mBAAmB,EAAC,cAAc,EAAC,SAAS,EAAC,OAAO,EAAC,aAAa,EAAC,qBAAqB,EAAC,aAAa,EAAC,qBAAqB,EAAC,IAAI,EAAC,KAAK,EAAC,qBAAqB,EAAC,uBAAuB,EAAC,WAAW,EAAC,aAAa,EAAC,YAAY,EAAC,YAAY,EAAC,YAAY,EAAC,aAAa,EAAC,iBAAiB,EAAC,gBAAgB,EAAC,WAAW,EAAC,IAAI,EAAC,aAAa,EAAC,gBAAgB,EAAC,aAAa,EAAC,mBAAmB,EAAC,aAAa,EAAC,iBAAiB,EAAC,aAAa,EAAC,WAAW,EAAC,MAAM,EAAC,KAAK,EAAC,KAAK,EAAC,UAAU,EAAC,eAAe,EAAC,SAAS,EAAC,aAAa,EAAC,gBAAgB,EAAC,eAAe,EAAC,QAAQ,EAAC,UAAU,EAAC,MAAM,EAAC,MAAM,EAAC,OAAO,EAAC,QAAQ,EAAC,aAAa,EAAC,YAAY,EAAC,OAAO,EAAC,SAAS,EAAC,SAAS,EAAC,KAAK,EAAC,UAAU,EAAC,UAAU,EAAC,SAAS,EAAC,eAAe,EAAC,WAAW,EAAC,KAAK,EAAC,aAAa,EAAC,MAAM,EAAC,cAAc,EAAC,gBAAgB,EAAC,YAAY,EAAC,UAAU,EAAC,eAAe,EAAC,cAAc,EAAE,OAAO,CAAC;EAEh9L,IAAIe,qBAAqB,GAAG,CAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,KAAK,EAAC,QAAQ,EAAC,MAAM,EAAC,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,WAAW,CAAC;IACjGE,cAAc,GAAG,CAAC,KAAK,EAAC,IAAI,EAAC,MAAM,EAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC;IAC3DI,YAAY,GAAG,CAAC,MAAM,EAAC,MAAM,EAAC,OAAO,EAAC,MAAM,EAAC,OAAO,EAAC,MAAM,EAAC,aAAa,EAAC,UAAU,EAAC,UAAU,CAAC;IAChG2F,UAAU,GAAG,CAAC,YAAY,EAAE,YAAY,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,MAAM,CAAC;EAErH,IAAIC,SAAS,GAAGxH,YAAY,CAACyH,MAAM,CAAC9G,cAAc,EAACM,WAAW,EAACF,cAAc,EACzCZ,iBAAiB,EAACE,4BAA4B,EAC9CI,cAAc,EAACF,cAAc,EAACY,eAAe,EAC7CG,qBAAqB,EAACE,cAAc,EACpCI,YAAY,EAAC2F,UAAU,CAAC;EAE5D,SAAS1G,UAAUA,CAAC6G,KAAK,EAAE;IACzBA,KAAK,GAAGA,KAAK,CAACC,IAAI,CAAC,UAASC,CAAC,EAACC,CAAC,EAAC;MAAC,OAAOA,CAAC,GAAGD,CAAC;IAAC,CAAC,CAAC;IAChD,OAAO,IAAIlG,MAAM,CAAC,KAAK,GAAGgG,KAAK,CAACI,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC;EACxD;EAEA,SAAS/H,MAAMA,CAACgI,KAAK,EAAE;IACrB,IAAIC,IAAI,GAAG,CAAC,CAAC;IACb,KAAK,IAAIzD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwD,KAAK,CAAC5F,MAAM,EAAE,EAAEoC,CAAC,EAAEyD,IAAI,CAACD,KAAK,CAACxD,CAAC,CAAC,CAAC,GAAG,IAAI;IAC5D,OAAOyD,IAAI;EACb;EAEA,SAAS3C,YAAYA,CAAC4C,IAAI,EAAE;IAC1B,OAAOA,IAAI,CAACrF,OAAO,CAAC,0BAA0B,EAAE,MAAM,CAAC;EACzD;EAEAnD,UAAU,CAACyI,cAAc,CAAC,WAAW,EAAE,QAAQ,EAAEV,SAAS,CAAC;EAC3D/H,UAAU,CAAC0I,UAAU,CAAC,aAAa,EAAE,QAAQ,CAAC;AAChD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}