{"ast":null,"code":"import titleBar from \"./titleBar\";\nimport textBar from \"./textBar\";\nimport codeBar from \"./codeBar\";\nimport imageBar from \"./imageBar\";\n// import quoteBar from \"./quoteBar\";\n// import colorblockBar from \"./colorblockBar\";\n// import stateBar from \"./stateBar\";\nimport linkBar from \"./linkBar\";\nimport dialogueBar from \"./dialogueBar\";\nimport extendBar from \"./extendBar\";\n// import blankRowBar from \"./blankRowBar\";\nimport emoticonBar from \"./emoticonBar\";\nimport fullscreen from \"./fullscreen\";\nimport config from \"../config/index\";\nimport urils from \"../utils/utils\";\nexport default {\n  name: \"WorkspaceJsonToolbar\",\n  props: {\n    open: {\n      default: false\n    }\n  },\n  components: {\n    titleBar,\n    textBar,\n    codeBar,\n    imageBar,\n    linkBar,\n    dialogueBar,\n    extendBar,\n    emoticonBar,\n    fullscreen\n  },\n  data() {\n    return {\n      componentsList: [{\n        name: \"titleBar\",\n        id: \"title\"\n      }, {\n        name: \"codeBar\",\n        id: \"code\"\n      }, {\n        name: \"imageBar\",\n        id: \"image\"\n      }, {\n        name: \"quoteBar\",\n        id: \"quote\"\n      }, {\n        name: \"stateBar\",\n        id: \"state\"\n      }, {\n        name: \"linkBar\",\n        id: \"link\"\n      }, {\n        name: \"dialogueBar\",\n        id: \"dialogue\"\n      }, {\n        name: \"extendBar\",\n        id: \"extend\"\n      }, {\n        name: \"blankRowBar\",\n        id: \"blankRow\"\n      }, {\n        name: \"emoticonBar\",\n        id: \"emoticon\"\n      }, {\n        name: \"fullscreen\",\n        id: \"fullscreen\"\n      }],\n      tools: {\n        title: true,\n        text: true,\n        code: true,\n        image: true,\n        quote: true,\n        colorblock: true,\n        state: true,\n        link: true,\n        dialogue: true,\n        extend: true,\n        blankRow: true,\n        emoticon: true,\n        fullscreen: true\n      }\n    };\n  },\n  mounted() {\n    this.initTools();\n  },\n  methods: {\n    initTools() {\n      for (let key in config.tools) {\n        this.tools[key] = config.tools[key];\n      }\n    },\n    onSelect(data) {\n      data.token = urils.createUid();\n      this.$emit(\"change\", data);\n    }\n  }\n};","map":{"version":3,"names":["titleBar","textBar","codeBar","imageBar","linkBar","dialogueBar","extendBar","emoticonBar","fullscreen","config","urils","name","props","open","default","components","data","componentsList","id","tools","title","text","code","image","quote","colorblock","state","link","dialogue","extend","blankRow","emoticon","mounted","initTools","methods","key","onSelect","token","createUid","$emit"],"sources":["node_modules/vue2-lay-editor/tools/index.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"layeditor-toolbar\">\n      <div v-if=\"tools.title\" class=\"item\">\n        <title-bar @change=\"onSelect\"></title-bar>\n      </div>\n      <div v-if=\"tools.text\" class=\"item\">\n        <text-bar @change=\"onSelect\"></text-bar>\n      </div>\n      <div v-if=\"tools.code\" class=\"item\">\n        <code-bar @change=\"onSelect\"></code-bar>\n      </div>\n      <div v-if=\"tools.image\" class=\"item\">\n        <image-bar @change=\"onSelect\"></image-bar>\n      </div>\n      <div v-if=\"tools.link\" class=\"item\">\n        <link-bar @change=\"onSelect\"></link-bar>\n      </div>\n      <div v-if=\"tools.emoticon\" class=\"item\">\n        <emoticon-bar @change=\"onSelect\"></emoticon-bar>\n      </div>\n      <div v-if=\"tools.extend\" class=\"item\">\n        <extend-bar @change=\"onSelect\"></extend-bar>\n      </div>\n      <div v-if=\"tools.dialogue\" class=\"item\">\n        <dialogue-Bar @change=\"onSelect\"></dialogue-Bar>\n      </div>\n\n      <div v-if=\"tools.fullscreen\" class=\"item\">\n        <fullscreen :open=\"open\" @fullscreen=\"$emit('fullscreen')\"></fullscreen>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport titleBar from \"./titleBar\";\nimport textBar from \"./textBar\";\nimport codeBar from \"./codeBar\";\nimport imageBar from \"./imageBar\";\n// import quoteBar from \"./quoteBar\";\n// import colorblockBar from \"./colorblockBar\";\n// import stateBar from \"./stateBar\";\nimport linkBar from \"./linkBar\";\nimport dialogueBar from \"./dialogueBar\";\nimport extendBar from \"./extendBar\";\n// import blankRowBar from \"./blankRowBar\";\nimport emoticonBar from \"./emoticonBar\";\nimport fullscreen from \"./fullscreen\";\nimport config from \"../config/index\";\n\nimport urils from \"../utils/utils\";\n\nexport default {\n  name: \"WorkspaceJsonToolbar\",\n  props: {\n    open: {\n      default: false,\n    },\n  },\n  components: {\n    titleBar,\n    textBar,\n    codeBar,\n    imageBar,\n    linkBar,\n    dialogueBar,\n    extendBar,\n    emoticonBar,\n    fullscreen,\n  },\n  data() {\n    return {\n      componentsList: [\n        {\n          name: \"titleBar\",\n          id: \"title\",\n        },\n        {\n          name: \"codeBar\",\n          id: \"code\",\n        },\n        {\n          name: \"imageBar\",\n          id: \"image\",\n        },\n        {\n          name: \"quoteBar\",\n          id: \"quote\",\n        },\n        {\n          name: \"stateBar\",\n          id: \"state\",\n        },\n        {\n          name: \"linkBar\",\n          id: \"link\",\n        },\n        {\n          name: \"dialogueBar\",\n          id: \"dialogue\",\n        },\n        {\n          name: \"extendBar\",\n          id: \"extend\",\n        },\n        {\n          name: \"blankRowBar\",\n          id: \"blankRow\",\n        },\n        {\n          name: \"emoticonBar\",\n          id: \"emoticon\",\n        },\n        {\n          name: \"fullscreen\",\n          id: \"fullscreen\",\n        },\n      ],\n      tools: {\n        title: true,\n        text: true,\n        code: true,\n        image: true,\n        quote: true,\n        colorblock: true,\n        state: true,\n        link: true,\n        dialogue: true,\n        extend: true,\n        blankRow: true,\n        emoticon: true,\n        fullscreen: true,\n      },\n    };\n  },\n\n  mounted() {\n    this.initTools();\n  },\n  methods: {\n    initTools() {\n      for (let key in config.tools) {\n        this.tools[key] = config.tools[key];\n      }\n    },\n    onSelect(data) {\n      data.token = urils.createUid();\n      this.$emit(\"change\", data);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.layeditor-toolbar {\n  // height: 30px;\n  display: flex;\n  padding: 5px 5px;\n  background: #fff;\n  // flex-wrap: wrap;\n}\n.layeditor-toolbar .item {\n  flex: 1;\n  margin-right: 5px;\n  margin-bottom: 5px;\n}\n</style>\n"],"mappings":"AAoCA,OAAAA,QAAA;AACA,OAAAC,OAAA;AACA,OAAAC,OAAA;AACA,OAAAC,QAAA;AACA;AACA;AACA;AACA,OAAAC,OAAA;AACA,OAAAC,WAAA;AACA,OAAAC,SAAA;AACA;AACA,OAAAC,WAAA;AACA,OAAAC,UAAA;AACA,OAAAC,MAAA;AAEA,OAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,IAAA;MACAC,OAAA;IACA;EACA;EACAC,UAAA;IACAf,QAAA;IACAC,OAAA;IACAC,OAAA;IACAC,QAAA;IACAC,OAAA;IACAC,WAAA;IACAC,SAAA;IACAC,WAAA;IACAC;EACA;EACAQ,KAAA;IACA;MACAC,cAAA,GACA;QACAN,IAAA;QACAO,EAAA;MACA,GACA;QACAP,IAAA;QACAO,EAAA;MACA,GACA;QACAP,IAAA;QACAO,EAAA;MACA,GACA;QACAP,IAAA;QACAO,EAAA;MACA,GACA;QACAP,IAAA;QACAO,EAAA;MACA,GACA;QACAP,IAAA;QACAO,EAAA;MACA,GACA;QACAP,IAAA;QACAO,EAAA;MACA,GACA;QACAP,IAAA;QACAO,EAAA;MACA,GACA;QACAP,IAAA;QACAO,EAAA;MACA,GACA;QACAP,IAAA;QACAO,EAAA;MACA,GACA;QACAP,IAAA;QACAO,EAAA;MACA,EACA;MACAC,KAAA;QACAC,KAAA;QACAC,IAAA;QACAC,IAAA;QACAC,KAAA;QACAC,KAAA;QACAC,UAAA;QACAC,KAAA;QACAC,IAAA;QACAC,QAAA;QACAC,MAAA;QACAC,QAAA;QACAC,QAAA;QACAvB,UAAA;MACA;IACA;EACA;EAEAwB,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAD,UAAA;MACA,SAAAE,GAAA,IAAA1B,MAAA,CAAAU,KAAA;QACA,KAAAA,KAAA,CAAAgB,GAAA,IAAA1B,MAAA,CAAAU,KAAA,CAAAgB,GAAA;MACA;IACA;IACAC,SAAApB,IAAA;MACAA,IAAA,CAAAqB,KAAA,GAAA3B,KAAA,CAAA4B,SAAA;MACA,KAAAC,KAAA,WAAAvB,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}