{"ast":null,"code":"const actions = [\"bold\", \"underline\", \"strikeThrough\", \"justifyLeft\", \"justifyCenter\", \"justifyRight\"];\nimport selectColor from \"../../components/select-color.vue\";\nimport urils from \"../../utils/utils\";\nexport default {\n  name: \"default-text\",\n  components: {\n    selectColor\n  },\n  props: {\n    themeType: {\n      default: 1\n    },\n    content: {\n      default() {\n        return {};\n      }\n    },\n    token: {\n      default: \"\"\n    },\n    index: {\n      default: 0\n    },\n    current: {\n      default: null\n    }\n  },\n  data() {\n    return {\n      commandState: [],\n      scoped: \"token\" + urils.createUid()\n    };\n  },\n  mounted() {},\n  watch: {\n    token: {\n      immediate: true,\n      handler() {\n        this.$nextTick(() => {\n          this.$refs[\"layEditor-container\"].innerHTML = this.content.template;\n        });\n      }\n    }\n  },\n  methods: {\n    onHandler() {\n      this.onCommandState();\n      let template = this.$refs[\"layEditor-container\"].innerHTML;\n      this.$emit(\"change\", {\n        template: template\n      });\n    },\n    selectColor(item) {\n      if ([\"title-type1\", \"title-type2\", \"title-type3\"].includes(this.themeType)) {\n        let icon = document.querySelector(`#${this.scoped} #laytEditor-icon`);\n        let text = document.querySelector(`#${this.scoped} #layEditor-richText`);\n        icon.style.backgroundColor = item.color;\n        text.style.color = item.color;\n      } else if ([\"title-type4\"].includes(this.themeType)) {\n        let icons = document.querySelectorAll(`#${this.scoped} #laytEditor-icon`);\n        let text = document.querySelector(`#${this.scoped} #layEditor-richText`);\n        text.style.color = item.color;\n        icons.forEach(i => i.style.borderColor = item.color);\n      } else if ([\"title-type5\"].includes(this.themeType)) {\n        let icon = document.querySelector(`#${this.scoped} #laytEditor-icon`);\n        icon.style.backgroundColor = item.color;\n      }\n      this.onHandler();\n    },\n    onCommandState() {\n      this.commandState = actions.filter(item => document.queryCommandState(item));\n      this.$emit(\"commandState\", this.commandState);\n    }\n  }\n};","map":{"version":3,"names":["actions","selectColor","urils","name","components","props","themeType","default","content","token","index","current","data","commandState","scoped","createUid","mounted","watch","immediate","handler","$nextTick","$refs","innerHTML","template","methods","onHandler","onCommandState","$emit","item","includes","icon","document","querySelector","text","style","backgroundColor","color","icons","querySelectorAll","forEach","i","borderColor","filter","queryCommandState"],"sources":["node_modules/vue2-lay-editor/temp/title/index.vue"],"sourcesContent":["<template>\n  <div :id=\"scoped\" class=\"default-text\">\n    <div class=\"title-section\">\n      <div\n        @keyup=\"onHandler\"\n        @input=\"onHandler\"\n        @mouseup=\"onHandler\"\n        @click=\"onHandler\"\n        id=\"layEditor-container\"\n        ref=\"layEditor-container\"\n      ></div>\n    </div>\n    <select-color\n      :index=\"index\"\n      :current=\"current\"\n      @change=\"selectColor\"\n    ></select-color>\n  </div>\n</template>\n<script>\nconst actions = [\n  \"bold\",\n  \"underline\",\n  \"strikeThrough\",\n  \"justifyLeft\",\n  \"justifyCenter\",\n  \"justifyRight\",\n];\nimport selectColor from \"../../components/select-color.vue\";\nimport urils from \"../../utils/utils\";\n\nexport default {\n  name: \"default-text\",\n  components: {\n    selectColor,\n  },\n  props: {\n    themeType: {\n      default: 1,\n    },\n    content: {\n      default() {\n        return {};\n      },\n    },\n    token: {\n      default: \"\",\n    },\n    index: {\n      default: 0,\n    },\n    current: {\n      default: null,\n    },\n  },\n  data() {\n    return {\n      commandState: [],\n      scoped: \"token\" + urils.createUid(),\n    };\n  },\n  mounted() {},\n  watch: {\n    token: {\n      immediate: true,\n      handler() {\n        this.$nextTick(() => {\n          this.$refs[\"layEditor-container\"].innerHTML = this.content.template;\n        });\n      },\n    },\n  },\n  methods: {\n    onHandler() {\n      this.onCommandState();\n      let template = this.$refs[\"layEditor-container\"].innerHTML;\n      this.$emit(\"change\", {\n        template: template,\n      });\n    },\n    selectColor(item) {\n      if (\n        [\"title-type1\", \"title-type2\", \"title-type3\"].includes(this.themeType)\n      ) {\n        let icon = document.querySelector(`#${this.scoped} #laytEditor-icon`);\n        let text = document.querySelector(\n          `#${this.scoped} #layEditor-richText`\n        );\n        icon.style.backgroundColor = item.color;\n        text.style.color = item.color;\n      } else if ([\"title-type4\"].includes(this.themeType)) {\n        let icons = document.querySelectorAll(\n          `#${this.scoped} #laytEditor-icon`\n        );\n        let text = document.querySelector(\n          `#${this.scoped} #layEditor-richText`\n        );\n        text.style.color = item.color;\n        icons.forEach((i) => (i.style.borderColor = item.color));\n      } else if ([\"title-type5\"].includes(this.themeType)) {\n        let icon = document.querySelector(`#${this.scoped} #laytEditor-icon`);\n        icon.style.backgroundColor = item.color;\n      }\n      this.onHandler();\n    },\n    onCommandState() {\n      this.commandState = actions.filter((item) =>\n        document.queryCommandState(item)\n      );\n      this.$emit(\"commandState\", this.commandState);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.title-section {\n  // padding: 2px 0;\n}\n.title-section #layEditor-richText {\n  outline: none;\n  overflow: auto;\n  font-family: system, -apple-system, BlinkMacSystemFont, PingFang SC, Segoe UI,\n    Microsoft YaHei, wenquanyi micro hei, Hiragino Sans GB, Hiragino Sans GB W3,\n    Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue,\n    Helvetica, Arial, sans-serif;\n  line-height: 1.75;\n  font-size: 16px;\n  word-break: break-all;\n  -moz-user-modify: read-write;\n  -webkit-user-modify: read-write;\n}\n\n.title-section #layEditor-richText {\n  ul,\n  ol {\n    padding-left: 20px;\n  }\n}\n\n.title-section #layEditor-richText li {\n  list-style-type: \"ðŸ”¸\";\n  padding-left: 5px;\n}\n#layEditor-richText ol li {\n  list-style-type: decimal;\n}\n\n.title-section #layEditor-richText:empty::before {\n  content: attr(placeholder);\n  color: #c0c4cf;\n}\n</style>\n"],"mappings":"AAoBA,MAAAA,OAAA,IACA,QACA,aACA,iBACA,eACA,iBACA,eACA;AACA,OAAAC,WAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAH;EACA;EACAI,KAAA;IACAC,SAAA;MACAC,OAAA;IACA;IACAC,OAAA;MACAD,QAAA;QACA;MACA;IACA;IACAE,KAAA;MACAF,OAAA;IACA;IACAG,KAAA;MACAH,OAAA;IACA;IACAI,OAAA;MACAJ,OAAA;IACA;EACA;EACAK,KAAA;IACA;MACAC,YAAA;MACAC,MAAA,YAAAZ,KAAA,CAAAa,SAAA;IACA;EACA;EACAC,QAAA;EACAC,KAAA;IACAR,KAAA;MACAS,SAAA;MACAC,QAAA;QACA,KAAAC,SAAA;UACA,KAAAC,KAAA,wBAAAC,SAAA,QAAAd,OAAA,CAAAe,QAAA;QACA;MACA;IACA;EACA;EACAC,OAAA;IACAC,UAAA;MACA,KAAAC,cAAA;MACA,IAAAH,QAAA,QAAAF,KAAA,wBAAAC,SAAA;MACA,KAAAK,KAAA;QACAJ,QAAA,EAAAA;MACA;IACA;IACAtB,YAAA2B,IAAA;MACA,IACA,8CAAAC,QAAA,MAAAvB,SAAA,GACA;QACA,IAAAwB,IAAA,GAAAC,QAAA,CAAAC,aAAA,UAAAlB,MAAA;QACA,IAAAmB,IAAA,GAAAF,QAAA,CAAAC,aAAA,CACA,SAAAlB,MAAA,sBACA;QACAgB,IAAA,CAAAI,KAAA,CAAAC,eAAA,GAAAP,IAAA,CAAAQ,KAAA;QACAH,IAAA,CAAAC,KAAA,CAAAE,KAAA,GAAAR,IAAA,CAAAQ,KAAA;MACA,2BAAAP,QAAA,MAAAvB,SAAA;QACA,IAAA+B,KAAA,GAAAN,QAAA,CAAAO,gBAAA,CACA,SAAAxB,MAAA,mBACA;QACA,IAAAmB,IAAA,GAAAF,QAAA,CAAAC,aAAA,CACA,SAAAlB,MAAA,sBACA;QACAmB,IAAA,CAAAC,KAAA,CAAAE,KAAA,GAAAR,IAAA,CAAAQ,KAAA;QACAC,KAAA,CAAAE,OAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAN,KAAA,CAAAO,WAAA,GAAAb,IAAA,CAAAQ,KAAA;MACA,2BAAAP,QAAA,MAAAvB,SAAA;QACA,IAAAwB,IAAA,GAAAC,QAAA,CAAAC,aAAA,UAAAlB,MAAA;QACAgB,IAAA,CAAAI,KAAA,CAAAC,eAAA,GAAAP,IAAA,CAAAQ,KAAA;MACA;MACA,KAAAX,SAAA;IACA;IACAC,eAAA;MACA,KAAAb,YAAA,GAAAb,OAAA,CAAA0C,MAAA,CAAAd,IAAA,IACAG,QAAA,CAAAY,iBAAA,CAAAf,IAAA,CACA;MACA,KAAAD,KAAA,sBAAAd,YAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}