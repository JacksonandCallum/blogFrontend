{"ast":null,"code":"import codemirror from \"../../components/codemirror/codemirror.vue\";\n// const hljs = require(\"highlight.js\");\n\nexport default {\n  name: \"code-block\",\n  components: {\n    codemirror\n  },\n  props: {\n    content: {\n      default() {\n        return {};\n      }\n    },\n    // 类型\n    token: {\n      default: \"\"\n    }\n  },\n  data() {\n    return {\n      value: \"\"\n    };\n  },\n  computed: {\n    lang() {\n      return this.content.lang || \"javascript\";\n    }\n  },\n  watch: {\n    token: {\n      immediate: true,\n      handler() {\n        this.$nextTick(() => {\n          // console.log(this.content.html,'this.content.html');\n          if (this.content.html) this.initData();\n        });\n      }\n    }\n  },\n  mounted() {},\n  methods: {\n    initData() {\n      let div = document.createElement(\"div\");\n      div.style.opacity = 0;\n      div.style.position = \"fixed\";\n      div.style.top = \"-199999px\";\n      div.innerHTML = this.content.html;\n      document.querySelector(\"body\").appendChild(div);\n      this.value = div.querySelector(\".code-main\").innerText;\n      // innerText属性在获取文本内容时，会将空格、制表符、换行符等空白字符转换为特定格式的实体字符\n      // 避免出现多余的\"•\"字符串\n      this.value = this.value.replaceAll(\"​\", \" \");\n      div.remove(div);\n      this.onCode(this.content.html, this.lang, this.content.text);\n    },\n    onCode(html, lang, data) {\n      this.$emit(\"change\", {\n        html: html,\n        text: \"\",\n        lang: lang\n      });\n    }\n  }\n};","map":{"version":3,"names":["codemirror","name","components","props","content","default","token","data","value","computed","lang","watch","immediate","handler","$nextTick","html","initData","mounted","methods","div","document","createElement","style","opacity","position","top","innerHTML","querySelector","appendChild","innerText","replaceAll","remove","onCode","text","$emit"],"sources":["node_modules/vue2-lay-editor/temp/codeBlock/codeBlock.vue"],"sourcesContent":["<template>\n  <div class=\"code-block\">\n    <div class=\"code-block-section\">\n      <codemirror\n        @blur=\"$emit('blur')\"\n        @focus=\"$emit('focus')\"\n        @change=\"onCode\"\n        v-model=\"value\"\n        :lang=\"lang\"\n      ></codemirror>\n    </div>\n  </div>\n</template>\n\n<script>\nimport codemirror from \"../../components/codemirror/codemirror.vue\";\n// const hljs = require(\"highlight.js\");\n\nexport default {\n  name: \"code-block\",\n  components: {\n    codemirror,\n  },\n  props: {\n    content: {\n      default() {\n        return {};\n      },\n    },\n    // 类型\n    token: {\n      default: \"\",\n    },\n  },\n  data() {\n    return {\n      value: \"\",\n    };\n  },\n  computed: {\n    lang() {\n      return this.content.lang || \"javascript\";\n    },\n  },\n  watch: {\n    token: {\n      immediate: true,\n      handler() {\n        this.$nextTick(() => {\n          // console.log(this.content.html,'this.content.html');\n          if (this.content.html) this.initData();\n        });\n      },\n    },\n  },\n  mounted() {},\n  methods: {\n    initData() {\n      let div = document.createElement(\"div\");\n      div.style.opacity = 0;\n      div.style.position = \"fixed\";\n      div.style.top = \"-199999px\";\n      div.innerHTML = this.content.html;\n      document.querySelector(\"body\").appendChild(div);\n      this.value = div.querySelector(\".code-main\").innerText;\n      // innerText属性在获取文本内容时，会将空格、制表符、换行符等空白字符转换为特定格式的实体字符\n      // 避免出现多余的\"•\"字符串\n      this.value = this.value.replaceAll(\"​\", \" \");\n      div.remove(div);\n      this.onCode(this.content.html, this.lang, this.content.text);\n    },\n    onCode(html, lang, data) {\n      this.$emit(\"change\", {\n        html: html,\n        text: \"\",\n        lang: lang,\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.code-block-section {\n  margin: 15px 20px;\n  // background: #fff;\n}\n</style>\n"],"mappings":"AAeA,OAAAA,UAAA;AACA;;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACAC,OAAA;MACAC,QAAA;QACA;MACA;IACA;IACA;IACAC,KAAA;MACAD,OAAA;IACA;EACA;EACAE,KAAA;IACA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACAC,KAAA;MACA,YAAAN,OAAA,CAAAM,IAAA;IACA;EACA;EACAC,KAAA;IACAL,KAAA;MACAM,SAAA;MACAC,QAAA;QACA,KAAAC,SAAA;UACA;UACA,SAAAV,OAAA,CAAAW,IAAA,OAAAC,QAAA;QACA;MACA;IACA;EACA;EACAC,QAAA;EACAC,OAAA;IACAF,SAAA;MACA,IAAAG,GAAA,GAAAC,QAAA,CAAAC,aAAA;MACAF,GAAA,CAAAG,KAAA,CAAAC,OAAA;MACAJ,GAAA,CAAAG,KAAA,CAAAE,QAAA;MACAL,GAAA,CAAAG,KAAA,CAAAG,GAAA;MACAN,GAAA,CAAAO,SAAA,QAAAtB,OAAA,CAAAW,IAAA;MACAK,QAAA,CAAAO,aAAA,SAAAC,WAAA,CAAAT,GAAA;MACA,KAAAX,KAAA,GAAAW,GAAA,CAAAQ,aAAA,eAAAE,SAAA;MACA;MACA;MACA,KAAArB,KAAA,QAAAA,KAAA,CAAAsB,UAAA;MACAX,GAAA,CAAAY,MAAA,CAAAZ,GAAA;MACA,KAAAa,MAAA,MAAA5B,OAAA,CAAAW,IAAA,OAAAL,IAAA,OAAAN,OAAA,CAAA6B,IAAA;IACA;IACAD,OAAAjB,IAAA,EAAAL,IAAA,EAAAH,IAAA;MACA,KAAA2B,KAAA;QACAnB,IAAA,EAAAA,IAAA;QACAkB,IAAA;QACAvB,IAAA,EAAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}