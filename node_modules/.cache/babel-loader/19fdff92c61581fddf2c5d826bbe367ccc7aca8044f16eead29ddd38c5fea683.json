{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function (name, states) {\n    CodeMirror.defineMode(name, function (config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n  CodeMirror.simpleMode = function (config, states) {\n    ensureState(states, \"start\");\n    var states_ = {},\n      meta = states.meta || {},\n      hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [],\n        orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function () {\n        return {\n          state: \"start\",\n          pending: null,\n          local: null,\n          localState: null,\n          indent: hasIndentation ? [] : null\n        };\n      },\n      copyState: function (state) {\n        var s = {\n          state: state.state,\n          pending: state.pending,\n          local: state.local,\n          localState: null,\n          indent: state.indent && state.indent.slice(0)\n        };\n        if (state.localState) s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack) s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next) s.persistentStates = {\n          mode: pers.mode,\n          spec: pers.spec,\n          state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n          next: s.persistentStates\n        };\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function (state) {\n        return state.local && {\n          mode: state.local.mode,\n          state: state.localState\n        };\n      },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop)) mode[prop] = meta[prop];\n    return mode;\n  };\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name)) throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      if (val.unicode) flags += \"u\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val;\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++) result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n  function tokenFunction(states, config) {\n    return function (stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState),\n            m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current()))) stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n          if (rule.data.mode) enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent) state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent) state.indent.pop();\n          var token = rule.token;\n          if (token && token.apply) token = token(matches);\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            for (var j = 2; j < matches.length; j++) if (matches[j]) (state.pending || (state.pending = [])).push({\n              text: matches[j],\n              token: rule.token[j - 1]\n            });\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next) if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers) state.persistentStates = {\n      mode: mode,\n      spec: spec.spec,\n      state: lState,\n      next: state.persistentStates\n    };\n    state.localState = lState;\n    state.local = {\n      mode: mode,\n      end: spec.end && toRegex(spec.end),\n      endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n      endToken: token && token.join ? token[token.length - 1] : token\n    };\n  }\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n  function indentFunction(states, meta) {\n    return function (state, textAfter, line) {\n      if (state.local && state.local.mode.indent) return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1) return CodeMirror.Pass;\n      var pos = state.indent.length - 1,\n        rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineSimpleMode","name","states","defineMode","config","simpleMode","ensureState","states_","meta","hasIndentation","state","hasOwnProperty","list","orig","i","length","data","push","Rule","indent","dedent","mode","startState","pending","local","localState","copyState","s","slice","stack","pers","persistentStates","next","spec","token","tokenFunction","innerMode","indentFunction","prop","Error","toRegex","val","caret","flags","RegExp","ignoreCase","unicode","source","String","asToken","apply","replace","result","regex","stream","pend","shift","pos","text","end","match","tok","endToken","m","endScan","exec","current","start","index","curState","rule","matches","sol","pop","enterLocalMode","indentation","indentUnit","j","backUp","join","cmp","a","b","props","persistent","p","getMode","lState","forceEnd","indexOf","arr","textAfter","line","dontIndentStates","Pass","rules","scan","dedentIfLineStart"],"sources":["D:/Java_Projects/MYBLOG-备份/frontend/blog-frontend/node_modules/codemirror/addon/mode/simple.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      if (val.unicode) flags += \"u\"\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          var token = rule.token\n          if (token && token.apply) token = token(matches)\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                (state.pending || (state.pending = [])).push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}