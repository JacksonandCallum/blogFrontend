{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"apl\", function () {\n    var builtInOps = {\n      \".\": \"innerProduct\",\n      \"\\\\\": \"scan\",\n      \"/\": \"reduce\",\n      \"⌿\": \"reduce1Axis\",\n      \"⍀\": \"scan1Axis\",\n      \"¨\": \"each\",\n      \"⍣\": \"power\"\n    };\n    var builtInFuncs = {\n      \"+\": [\"conjugate\", \"add\"],\n      \"−\": [\"negate\", \"subtract\"],\n      \"×\": [\"signOf\", \"multiply\"],\n      \"÷\": [\"reciprocal\", \"divide\"],\n      \"⌈\": [\"ceiling\", \"greaterOf\"],\n      \"⌊\": [\"floor\", \"lesserOf\"],\n      \"∣\": [\"absolute\", \"residue\"],\n      \"⍳\": [\"indexGenerate\", \"indexOf\"],\n      \"?\": [\"roll\", \"deal\"],\n      \"⋆\": [\"exponentiate\", \"toThePowerOf\"],\n      \"⍟\": [\"naturalLog\", \"logToTheBase\"],\n      \"○\": [\"piTimes\", \"circularFuncs\"],\n      \"!\": [\"factorial\", \"binomial\"],\n      \"⌹\": [\"matrixInverse\", \"matrixDivide\"],\n      \"<\": [null, \"lessThan\"],\n      \"≤\": [null, \"lessThanOrEqual\"],\n      \"=\": [null, \"equals\"],\n      \">\": [null, \"greaterThan\"],\n      \"≥\": [null, \"greaterThanOrEqual\"],\n      \"≠\": [null, \"notEqual\"],\n      \"≡\": [\"depth\", \"match\"],\n      \"≢\": [null, \"notMatch\"],\n      \"∈\": [\"enlist\", \"membership\"],\n      \"⍷\": [null, \"find\"],\n      \"∪\": [\"unique\", \"union\"],\n      \"∩\": [null, \"intersection\"],\n      \"∼\": [\"not\", \"without\"],\n      \"∨\": [null, \"or\"],\n      \"∧\": [null, \"and\"],\n      \"⍱\": [null, \"nor\"],\n      \"⍲\": [null, \"nand\"],\n      \"⍴\": [\"shapeOf\", \"reshape\"],\n      \",\": [\"ravel\", \"catenate\"],\n      \"⍪\": [null, \"firstAxisCatenate\"],\n      \"⌽\": [\"reverse\", \"rotate\"],\n      \"⊖\": [\"axis1Reverse\", \"axis1Rotate\"],\n      \"⍉\": [\"transpose\", null],\n      \"↑\": [\"first\", \"take\"],\n      \"↓\": [null, \"drop\"],\n      \"⊂\": [\"enclose\", \"partitionWithAxis\"],\n      \"⊃\": [\"diclose\", \"pick\"],\n      \"⌷\": [null, \"index\"],\n      \"⍋\": [\"gradeUp\", null],\n      \"⍒\": [\"gradeDown\", null],\n      \"⊤\": [\"encode\", null],\n      \"⊥\": [\"decode\", null],\n      \"⍕\": [\"format\", \"formatByExample\"],\n      \"⍎\": [\"execute\", null],\n      \"⊣\": [\"stop\", \"left\"],\n      \"⊢\": [\"pass\", \"right\"]\n    };\n    var isOperator = /[\\.\\/⌿⍀¨⍣]/;\n    var isNiladic = /⍬/;\n    var isFunction = /[\\+−×÷⌈⌊∣⍳\\?⋆⍟○!⌹<≤=>≥≠≡≢∈⍷∪∩∼∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⌷⍋⍒⊤⊥⍕⍎⊣⊢]/;\n    var isArrow = /←/;\n    var isComment = /[⍝#].*$/;\n    var stringEater = function (type) {\n      var prev;\n      prev = false;\n      return function (c) {\n        prev = c;\n        if (c === type) {\n          return prev === \"\\\\\";\n        }\n        return true;\n      };\n    };\n    return {\n      startState: function () {\n        return {\n          prev: false,\n          func: false,\n          op: false,\n          string: false,\n          escape: false\n        };\n      },\n      token: function (stream, state) {\n        var ch, funcName;\n        if (stream.eatSpace()) {\n          return null;\n        }\n        ch = stream.next();\n        if (ch === '\"' || ch === \"'\") {\n          stream.eatWhile(stringEater(ch));\n          stream.next();\n          state.prev = true;\n          return \"string\";\n        }\n        if (/[\\[{\\(]/.test(ch)) {\n          state.prev = false;\n          return null;\n        }\n        if (/[\\]}\\)]/.test(ch)) {\n          state.prev = true;\n          return null;\n        }\n        if (isNiladic.test(ch)) {\n          state.prev = false;\n          return \"niladic\";\n        }\n        if (/[¯\\d]/.test(ch)) {\n          if (state.func) {\n            state.func = false;\n            state.prev = false;\n          } else {\n            state.prev = true;\n          }\n          stream.eatWhile(/[\\w\\.]/);\n          return \"number\";\n        }\n        if (isOperator.test(ch)) {\n          return \"operator apl-\" + builtInOps[ch];\n        }\n        if (isArrow.test(ch)) {\n          return \"apl-arrow\";\n        }\n        if (isFunction.test(ch)) {\n          funcName = \"apl-\";\n          if (builtInFuncs[ch] != null) {\n            if (state.prev) {\n              funcName += builtInFuncs[ch][1];\n            } else {\n              funcName += builtInFuncs[ch][0];\n            }\n          }\n          state.func = true;\n          state.prev = false;\n          return \"function \" + funcName;\n        }\n        if (isComment.test(ch)) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n        if (ch === \"∘\" && stream.peek() === \".\") {\n          stream.next();\n          return \"function jot-dot\";\n        }\n        stream.eatWhile(/[\\w\\$_]/);\n        state.prev = true;\n        return \"keyword\";\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/apl\", \"apl\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","builtInOps","builtInFuncs","isOperator","isNiladic","isFunction","isArrow","isComment","stringEater","type","prev","c","startState","func","op","string","escape","token","stream","state","ch","funcName","eatSpace","next","eatWhile","test","skipToEnd","peek","defineMIME"],"sources":["D:/Java_Projects/MYBLOG/frontend/blog-frontend/node_modules/codemirror/mode/apl/apl.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"apl\", function() {\n  var builtInOps = {\n    \".\": \"innerProduct\",\n    \"\\\\\": \"scan\",\n    \"/\": \"reduce\",\n    \"⌿\": \"reduce1Axis\",\n    \"⍀\": \"scan1Axis\",\n    \"¨\": \"each\",\n    \"⍣\": \"power\"\n  };\n  var builtInFuncs = {\n    \"+\": [\"conjugate\", \"add\"],\n    \"−\": [\"negate\", \"subtract\"],\n    \"×\": [\"signOf\", \"multiply\"],\n    \"÷\": [\"reciprocal\", \"divide\"],\n    \"⌈\": [\"ceiling\", \"greaterOf\"],\n    \"⌊\": [\"floor\", \"lesserOf\"],\n    \"∣\": [\"absolute\", \"residue\"],\n    \"⍳\": [\"indexGenerate\", \"indexOf\"],\n    \"?\": [\"roll\", \"deal\"],\n    \"⋆\": [\"exponentiate\", \"toThePowerOf\"],\n    \"⍟\": [\"naturalLog\", \"logToTheBase\"],\n    \"○\": [\"piTimes\", \"circularFuncs\"],\n    \"!\": [\"factorial\", \"binomial\"],\n    \"⌹\": [\"matrixInverse\", \"matrixDivide\"],\n    \"<\": [null, \"lessThan\"],\n    \"≤\": [null, \"lessThanOrEqual\"],\n    \"=\": [null, \"equals\"],\n    \">\": [null, \"greaterThan\"],\n    \"≥\": [null, \"greaterThanOrEqual\"],\n    \"≠\": [null, \"notEqual\"],\n    \"≡\": [\"depth\", \"match\"],\n    \"≢\": [null, \"notMatch\"],\n    \"∈\": [\"enlist\", \"membership\"],\n    \"⍷\": [null, \"find\"],\n    \"∪\": [\"unique\", \"union\"],\n    \"∩\": [null, \"intersection\"],\n    \"∼\": [\"not\", \"without\"],\n    \"∨\": [null, \"or\"],\n    \"∧\": [null, \"and\"],\n    \"⍱\": [null, \"nor\"],\n    \"⍲\": [null, \"nand\"],\n    \"⍴\": [\"shapeOf\", \"reshape\"],\n    \",\": [\"ravel\", \"catenate\"],\n    \"⍪\": [null, \"firstAxisCatenate\"],\n    \"⌽\": [\"reverse\", \"rotate\"],\n    \"⊖\": [\"axis1Reverse\", \"axis1Rotate\"],\n    \"⍉\": [\"transpose\", null],\n    \"↑\": [\"first\", \"take\"],\n    \"↓\": [null, \"drop\"],\n    \"⊂\": [\"enclose\", \"partitionWithAxis\"],\n    \"⊃\": [\"diclose\", \"pick\"],\n    \"⌷\": [null, \"index\"],\n    \"⍋\": [\"gradeUp\", null],\n    \"⍒\": [\"gradeDown\", null],\n    \"⊤\": [\"encode\", null],\n    \"⊥\": [\"decode\", null],\n    \"⍕\": [\"format\", \"formatByExample\"],\n    \"⍎\": [\"execute\", null],\n    \"⊣\": [\"stop\", \"left\"],\n    \"⊢\": [\"pass\", \"right\"]\n  };\n\n  var isOperator = /[\\.\\/⌿⍀¨⍣]/;\n  var isNiladic = /⍬/;\n  var isFunction = /[\\+−×÷⌈⌊∣⍳\\?⋆⍟○!⌹<≤=>≥≠≡≢∈⍷∪∩∼∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⌷⍋⍒⊤⊥⍕⍎⊣⊢]/;\n  var isArrow = /←/;\n  var isComment = /[⍝#].*$/;\n\n  var stringEater = function(type) {\n    var prev;\n    prev = false;\n    return function(c) {\n      prev = c;\n      if (c === type) {\n        return prev === \"\\\\\";\n      }\n      return true;\n    };\n  };\n  return {\n    startState: function() {\n      return {\n        prev: false,\n        func: false,\n        op: false,\n        string: false,\n        escape: false\n      };\n    },\n    token: function(stream, state) {\n      var ch, funcName;\n      if (stream.eatSpace()) {\n        return null;\n      }\n      ch = stream.next();\n      if (ch === '\"' || ch === \"'\") {\n        stream.eatWhile(stringEater(ch));\n        stream.next();\n        state.prev = true;\n        return \"string\";\n      }\n      if (/[\\[{\\(]/.test(ch)) {\n        state.prev = false;\n        return null;\n      }\n      if (/[\\]}\\)]/.test(ch)) {\n        state.prev = true;\n        return null;\n      }\n      if (isNiladic.test(ch)) {\n        state.prev = false;\n        return \"niladic\";\n      }\n      if (/[¯\\d]/.test(ch)) {\n        if (state.func) {\n          state.func = false;\n          state.prev = false;\n        } else {\n          state.prev = true;\n        }\n        stream.eatWhile(/[\\w\\.]/);\n        return \"number\";\n      }\n      if (isOperator.test(ch)) {\n        return \"operator apl-\" + builtInOps[ch];\n      }\n      if (isArrow.test(ch)) {\n        return \"apl-arrow\";\n      }\n      if (isFunction.test(ch)) {\n        funcName = \"apl-\";\n        if (builtInFuncs[ch] != null) {\n          if (state.prev) {\n            funcName += builtInFuncs[ch][1];\n          } else {\n            funcName += builtInFuncs[ch][0];\n          }\n        }\n        state.func = true;\n        state.prev = false;\n        return \"function \" + funcName;\n      }\n      if (isComment.test(ch)) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      if (ch === \"∘\" && stream.peek() === \".\") {\n        stream.next();\n        return \"function jot-dot\";\n      }\n      stream.eatWhile(/[\\w\\$_]/);\n      state.prev = true;\n      return \"keyword\";\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/apl\", \"apl\");\n\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}