{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// LUA mode. Ported to CodeMirror 2 from Franciszek Wawrzak's\n// CodeMirror 1 mode.\n// highlights keywords, strings, comments (no leveling supported! (\"[==[\")), tokens, basic indenting\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"lua\", function (config, parserConfig) {\n    var indentUnit = config.indentUnit;\n    function prefixRE(words) {\n      return new RegExp(\"^(?:\" + words.join(\"|\") + \")\", \"i\");\n    }\n    function wordRE(words) {\n      return new RegExp(\"^(?:\" + words.join(\"|\") + \")$\", \"i\");\n    }\n    var specials = wordRE(parserConfig.specials || []);\n\n    // long list of standard functions from lua manual\n    var builtins = wordRE([\"_G\", \"_VERSION\", \"assert\", \"collectgarbage\", \"dofile\", \"error\", \"getfenv\", \"getmetatable\", \"ipairs\", \"load\", \"loadfile\", \"loadstring\", \"module\", \"next\", \"pairs\", \"pcall\", \"print\", \"rawequal\", \"rawget\", \"rawset\", \"require\", \"select\", \"setfenv\", \"setmetatable\", \"tonumber\", \"tostring\", \"type\", \"unpack\", \"xpcall\", \"coroutine.create\", \"coroutine.resume\", \"coroutine.running\", \"coroutine.status\", \"coroutine.wrap\", \"coroutine.yield\", \"debug.debug\", \"debug.getfenv\", \"debug.gethook\", \"debug.getinfo\", \"debug.getlocal\", \"debug.getmetatable\", \"debug.getregistry\", \"debug.getupvalue\", \"debug.setfenv\", \"debug.sethook\", \"debug.setlocal\", \"debug.setmetatable\", \"debug.setupvalue\", \"debug.traceback\", \"close\", \"flush\", \"lines\", \"read\", \"seek\", \"setvbuf\", \"write\", \"io.close\", \"io.flush\", \"io.input\", \"io.lines\", \"io.open\", \"io.output\", \"io.popen\", \"io.read\", \"io.stderr\", \"io.stdin\", \"io.stdout\", \"io.tmpfile\", \"io.type\", \"io.write\", \"math.abs\", \"math.acos\", \"math.asin\", \"math.atan\", \"math.atan2\", \"math.ceil\", \"math.cos\", \"math.cosh\", \"math.deg\", \"math.exp\", \"math.floor\", \"math.fmod\", \"math.frexp\", \"math.huge\", \"math.ldexp\", \"math.log\", \"math.log10\", \"math.max\", \"math.min\", \"math.modf\", \"math.pi\", \"math.pow\", \"math.rad\", \"math.random\", \"math.randomseed\", \"math.sin\", \"math.sinh\", \"math.sqrt\", \"math.tan\", \"math.tanh\", \"os.clock\", \"os.date\", \"os.difftime\", \"os.execute\", \"os.exit\", \"os.getenv\", \"os.remove\", \"os.rename\", \"os.setlocale\", \"os.time\", \"os.tmpname\", \"package.cpath\", \"package.loaded\", \"package.loaders\", \"package.loadlib\", \"package.path\", \"package.preload\", \"package.seeall\", \"string.byte\", \"string.char\", \"string.dump\", \"string.find\", \"string.format\", \"string.gmatch\", \"string.gsub\", \"string.len\", \"string.lower\", \"string.match\", \"string.rep\", \"string.reverse\", \"string.sub\", \"string.upper\", \"table.concat\", \"table.insert\", \"table.maxn\", \"table.remove\", \"table.sort\"]);\n    var keywords = wordRE([\"and\", \"break\", \"elseif\", \"false\", \"nil\", \"not\", \"or\", \"return\", \"true\", \"function\", \"end\", \"if\", \"then\", \"else\", \"do\", \"while\", \"repeat\", \"until\", \"for\", \"in\", \"local\"]);\n    var indentTokens = wordRE([\"function\", \"if\", \"repeat\", \"do\", \"\\\\(\", \"{\"]);\n    var dedentTokens = wordRE([\"end\", \"until\", \"\\\\)\", \"}\"]);\n    var dedentPartial = prefixRE([\"end\", \"until\", \"\\\\)\", \"}\", \"else\", \"elseif\"]);\n    function readBracket(stream) {\n      var level = 0;\n      while (stream.eat(\"=\")) ++level;\n      stream.eat(\"[\");\n      return level;\n    }\n    function normal(stream, state) {\n      var ch = stream.next();\n      if (ch == \"-\" && stream.eat(\"-\")) {\n        if (stream.eat(\"[\") && stream.eat(\"[\")) return (state.cur = bracketed(readBracket(stream), \"comment\"))(stream, state);\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      if (ch == \"\\\"\" || ch == \"'\") return (state.cur = string(ch))(stream, state);\n      if (ch == \"[\" && /[\\[=]/.test(stream.peek())) return (state.cur = bracketed(readBracket(stream), \"string\"))(stream, state);\n      if (/\\d/.test(ch)) {\n        stream.eatWhile(/[\\w.%]/);\n        return \"number\";\n      }\n      if (/[\\w_]/.test(ch)) {\n        stream.eatWhile(/[\\w\\\\\\-_.]/);\n        return \"variable\";\n      }\n      return null;\n    }\n    function bracketed(level, style) {\n      return function (stream, state) {\n        var curlev = null,\n          ch;\n        while ((ch = stream.next()) != null) {\n          if (curlev == null) {\n            if (ch == \"]\") curlev = 0;\n          } else if (ch == \"=\") ++curlev;else if (ch == \"]\" && curlev == level) {\n            state.cur = normal;\n            break;\n          } else curlev = null;\n        }\n        return style;\n      };\n    }\n    function string(quote) {\n      return function (stream, state) {\n        var escaped = false,\n          ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && !escaped) break;\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (!escaped) state.cur = normal;\n        return \"string\";\n      };\n    }\n    return {\n      startState: function (basecol) {\n        return {\n          basecol: basecol || 0,\n          indentDepth: 0,\n          cur: normal\n        };\n      },\n      token: function (stream, state) {\n        if (stream.eatSpace()) return null;\n        var style = state.cur(stream, state);\n        var word = stream.current();\n        if (style == \"variable\") {\n          if (keywords.test(word)) style = \"keyword\";else if (builtins.test(word)) style = \"builtin\";else if (specials.test(word)) style = \"variable-2\";\n        }\n        if (style != \"comment\" && style != \"string\") {\n          if (indentTokens.test(word)) ++state.indentDepth;else if (dedentTokens.test(word)) --state.indentDepth;\n        }\n        return style;\n      },\n      indent: function (state, textAfter) {\n        var closing = dedentPartial.test(textAfter);\n        return state.basecol + indentUnit * (state.indentDepth - (closing ? 1 : 0));\n      },\n      electricInput: /^\\s*(?:end|until|else|\\)|\\})$/,\n      lineComment: \"--\",\n      blockCommentStart: \"--[[\",\n      blockCommentEnd: \"]]\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-lua\", \"lua\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","parserConfig","indentUnit","prefixRE","words","RegExp","join","wordRE","specials","builtins","keywords","indentTokens","dedentTokens","dedentPartial","readBracket","stream","level","eat","normal","state","ch","next","cur","bracketed","skipToEnd","string","test","peek","eatWhile","style","curlev","quote","escaped","startState","basecol","indentDepth","token","eatSpace","word","current","indent","textAfter","closing","electricInput","lineComment","blockCommentStart","blockCommentEnd","defineMIME"],"sources":["D:/Java_Projects/MYBLOG-备份/frontend/blog-frontend/node_modules/codemirror/mode/lua/lua.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// LUA mode. Ported to CodeMirror 2 from Franciszek Wawrzak's\n// CodeMirror 1 mode.\n// highlights keywords, strings, comments (no leveling supported! (\"[==[\")), tokens, basic indenting\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"lua\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit;\n\n  function prefixRE(words) {\n    return new RegExp(\"^(?:\" + words.join(\"|\") + \")\", \"i\");\n  }\n  function wordRE(words) {\n    return new RegExp(\"^(?:\" + words.join(\"|\") + \")$\", \"i\");\n  }\n  var specials = wordRE(parserConfig.specials || []);\n\n  // long list of standard functions from lua manual\n  var builtins = wordRE([\n    \"_G\",\"_VERSION\",\"assert\",\"collectgarbage\",\"dofile\",\"error\",\"getfenv\",\"getmetatable\",\"ipairs\",\"load\",\n    \"loadfile\",\"loadstring\",\"module\",\"next\",\"pairs\",\"pcall\",\"print\",\"rawequal\",\"rawget\",\"rawset\",\"require\",\n    \"select\",\"setfenv\",\"setmetatable\",\"tonumber\",\"tostring\",\"type\",\"unpack\",\"xpcall\",\n\n    \"coroutine.create\",\"coroutine.resume\",\"coroutine.running\",\"coroutine.status\",\"coroutine.wrap\",\"coroutine.yield\",\n\n    \"debug.debug\",\"debug.getfenv\",\"debug.gethook\",\"debug.getinfo\",\"debug.getlocal\",\"debug.getmetatable\",\n    \"debug.getregistry\",\"debug.getupvalue\",\"debug.setfenv\",\"debug.sethook\",\"debug.setlocal\",\"debug.setmetatable\",\n    \"debug.setupvalue\",\"debug.traceback\",\n\n    \"close\",\"flush\",\"lines\",\"read\",\"seek\",\"setvbuf\",\"write\",\n\n    \"io.close\",\"io.flush\",\"io.input\",\"io.lines\",\"io.open\",\"io.output\",\"io.popen\",\"io.read\",\"io.stderr\",\"io.stdin\",\n    \"io.stdout\",\"io.tmpfile\",\"io.type\",\"io.write\",\n\n    \"math.abs\",\"math.acos\",\"math.asin\",\"math.atan\",\"math.atan2\",\"math.ceil\",\"math.cos\",\"math.cosh\",\"math.deg\",\n    \"math.exp\",\"math.floor\",\"math.fmod\",\"math.frexp\",\"math.huge\",\"math.ldexp\",\"math.log\",\"math.log10\",\"math.max\",\n    \"math.min\",\"math.modf\",\"math.pi\",\"math.pow\",\"math.rad\",\"math.random\",\"math.randomseed\",\"math.sin\",\"math.sinh\",\n    \"math.sqrt\",\"math.tan\",\"math.tanh\",\n\n    \"os.clock\",\"os.date\",\"os.difftime\",\"os.execute\",\"os.exit\",\"os.getenv\",\"os.remove\",\"os.rename\",\"os.setlocale\",\n    \"os.time\",\"os.tmpname\",\n\n    \"package.cpath\",\"package.loaded\",\"package.loaders\",\"package.loadlib\",\"package.path\",\"package.preload\",\n    \"package.seeall\",\n\n    \"string.byte\",\"string.char\",\"string.dump\",\"string.find\",\"string.format\",\"string.gmatch\",\"string.gsub\",\n    \"string.len\",\"string.lower\",\"string.match\",\"string.rep\",\"string.reverse\",\"string.sub\",\"string.upper\",\n\n    \"table.concat\",\"table.insert\",\"table.maxn\",\"table.remove\",\"table.sort\"\n  ]);\n  var keywords = wordRE([\"and\",\"break\",\"elseif\",\"false\",\"nil\",\"not\",\"or\",\"return\",\n                         \"true\",\"function\", \"end\", \"if\", \"then\", \"else\", \"do\",\n                         \"while\", \"repeat\", \"until\", \"for\", \"in\", \"local\" ]);\n\n  var indentTokens = wordRE([\"function\", \"if\",\"repeat\",\"do\", \"\\\\(\", \"{\"]);\n  var dedentTokens = wordRE([\"end\", \"until\", \"\\\\)\", \"}\"]);\n  var dedentPartial = prefixRE([\"end\", \"until\", \"\\\\)\", \"}\", \"else\", \"elseif\"]);\n\n  function readBracket(stream) {\n    var level = 0;\n    while (stream.eat(\"=\")) ++level;\n    stream.eat(\"[\");\n    return level;\n  }\n\n  function normal(stream, state) {\n    var ch = stream.next();\n    if (ch == \"-\" && stream.eat(\"-\")) {\n      if (stream.eat(\"[\") && stream.eat(\"[\"))\n        return (state.cur = bracketed(readBracket(stream), \"comment\"))(stream, state);\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    if (ch == \"\\\"\" || ch == \"'\")\n      return (state.cur = string(ch))(stream, state);\n    if (ch == \"[\" && /[\\[=]/.test(stream.peek()))\n      return (state.cur = bracketed(readBracket(stream), \"string\"))(stream, state);\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\w.%]/);\n      return \"number\";\n    }\n    if (/[\\w_]/.test(ch)) {\n      stream.eatWhile(/[\\w\\\\\\-_.]/);\n      return \"variable\";\n    }\n    return null;\n  }\n\n  function bracketed(level, style) {\n    return function(stream, state) {\n      var curlev = null, ch;\n      while ((ch = stream.next()) != null) {\n        if (curlev == null) {if (ch == \"]\") curlev = 0;}\n        else if (ch == \"=\") ++curlev;\n        else if (ch == \"]\" && curlev == level) { state.cur = normal; break; }\n        else curlev = null;\n      }\n      return style;\n    };\n  }\n\n  function string(quote) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped) break;\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      if (!escaped) state.cur = normal;\n      return \"string\";\n    };\n  }\n\n  return {\n    startState: function(basecol) {\n      return {basecol: basecol || 0, indentDepth: 0, cur: normal};\n    },\n\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      var style = state.cur(stream, state);\n      var word = stream.current();\n      if (style == \"variable\") {\n        if (keywords.test(word)) style = \"keyword\";\n        else if (builtins.test(word)) style = \"builtin\";\n        else if (specials.test(word)) style = \"variable-2\";\n      }\n      if ((style != \"comment\") && (style != \"string\")){\n        if (indentTokens.test(word)) ++state.indentDepth;\n        else if (dedentTokens.test(word)) --state.indentDepth;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      var closing = dedentPartial.test(textAfter);\n      return state.basecol + indentUnit * (state.indentDepth - (closing ? 1 : 0));\n    },\n\n    electricInput: /^\\s*(?:end|until|else|\\)|\\})$/,\n    lineComment: \"--\",\n    blockCommentStart: \"--[[\",\n    blockCommentEnd: \"]]\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-lua\", \"lua\");\n\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}