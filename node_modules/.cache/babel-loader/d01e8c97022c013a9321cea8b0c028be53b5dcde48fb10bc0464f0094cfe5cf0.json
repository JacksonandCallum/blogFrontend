{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.multiplexingMode = function (outer /*, others */) {\n    // Others should be {open, close, mode [, delimStyle] [, innerStyle] [, parseDelimiters]} objects\n    var others = Array.prototype.slice.call(arguments, 1);\n    function indexOf(string, pattern, from, returnEnd) {\n      if (typeof pattern == \"string\") {\n        var found = string.indexOf(pattern, from);\n        return returnEnd && found > -1 ? found + pattern.length : found;\n      }\n      var m = pattern.exec(from ? string.slice(from) : string);\n      return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n    }\n    return {\n      startState: function () {\n        return {\n          outer: CodeMirror.startState(outer),\n          innerActive: null,\n          inner: null,\n          startingInner: false\n        };\n      },\n      copyState: function (state) {\n        return {\n          outer: CodeMirror.copyState(outer, state.outer),\n          innerActive: state.innerActive,\n          inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner),\n          startingInner: state.startingInner\n        };\n      },\n      token: function (stream, state) {\n        if (!state.innerActive) {\n          var cutOff = Infinity,\n            oldContent = stream.string;\n          for (var i = 0; i < others.length; ++i) {\n            var other = others[i];\n            var found = indexOf(oldContent, other.open, stream.pos);\n            if (found == stream.pos) {\n              if (!other.parseDelimiters) stream.match(other.open);\n              state.startingInner = !!other.parseDelimiters;\n              state.innerActive = other;\n\n              // Get the outer indent, making sure to handle CodeMirror.Pass\n              var outerIndent = 0;\n              if (outer.indent) {\n                var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n                if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n              }\n              state.inner = CodeMirror.startState(other.mode, outerIndent);\n              return other.delimStyle && other.delimStyle + \" \" + other.delimStyle + \"-open\";\n            } else if (found != -1 && found < cutOff) {\n              cutOff = found;\n            }\n          }\n          if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n          var outerToken = outer.token(stream, state.outer);\n          if (cutOff != Infinity) stream.string = oldContent;\n          return outerToken;\n        } else {\n          var curInner = state.innerActive,\n            oldContent = stream.string;\n          if (!curInner.close && stream.sol()) {\n            state.innerActive = state.inner = null;\n            return this.token(stream, state);\n          }\n          var found = curInner.close && !state.startingInner ? indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n          if (found == stream.pos && !curInner.parseDelimiters) {\n            stream.match(curInner.close);\n            state.innerActive = state.inner = null;\n            return curInner.delimStyle && curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\";\n          }\n          if (found > -1) stream.string = oldContent.slice(0, found);\n          var innerToken = curInner.mode.token(stream, state.inner);\n          if (found > -1) stream.string = oldContent;else if (stream.pos > stream.start) state.startingInner = false;\n          if (found == stream.pos && curInner.parseDelimiters) state.innerActive = state.inner = null;\n          if (curInner.innerStyle) {\n            if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;else innerToken = curInner.innerStyle;\n          }\n          return innerToken;\n        }\n      },\n      indent: function (state, textAfter, line) {\n        var mode = state.innerActive ? state.innerActive.mode : outer;\n        if (!mode.indent) return CodeMirror.Pass;\n        return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n      },\n      blankLine: function (state) {\n        var mode = state.innerActive ? state.innerActive.mode : outer;\n        if (mode.blankLine) {\n          mode.blankLine(state.innerActive ? state.inner : state.outer);\n        }\n        if (!state.innerActive) {\n          for (var i = 0; i < others.length; ++i) {\n            var other = others[i];\n            if (other.open === \"\\n\") {\n              state.innerActive = other;\n              state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n            }\n          }\n        } else if (state.innerActive.close === \"\\n\") {\n          state.innerActive = state.inner = null;\n        }\n      },\n      electricChars: outer.electricChars,\n      innerMode: function (state) {\n        return state.inner ? {\n          state: state.inner,\n          mode: state.innerActive.mode\n        } : {\n          state: state.outer,\n          mode: outer\n        };\n      }\n    };\n  };\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","multiplexingMode","outer","others","Array","prototype","slice","call","arguments","indexOf","string","pattern","from","returnEnd","found","length","m","exec","index","startState","innerActive","inner","startingInner","copyState","state","mode","token","stream","cutOff","Infinity","oldContent","i","other","open","pos","parseDelimiters","match","outerIndent","indent","possibleOuterIndent","Pass","delimStyle","outerToken","curInner","close","sol","innerToken","start","innerStyle","textAfter","line","blankLine","electricChars","innerMode"],"sources":["D:/Java_Projects/MYBLOG-备份/frontend/blog-frontend/node_modules/codemirror/addon/mode/multiplex.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.multiplexingMode = function(outer /*, others */) {\n  // Others should be {open, close, mode [, delimStyle] [, innerStyle] [, parseDelimiters]} objects\n  var others = Array.prototype.slice.call(arguments, 1);\n\n  function indexOf(string, pattern, from, returnEnd) {\n    if (typeof pattern == \"string\") {\n      var found = string.indexOf(pattern, from);\n      return returnEnd && found > -1 ? found + pattern.length : found;\n    }\n    var m = pattern.exec(from ? string.slice(from) : string);\n    return m ? m.index + from + (returnEnd ? m[0].length : 0) : -1;\n  }\n\n  return {\n    startState: function() {\n      return {\n        outer: CodeMirror.startState(outer),\n        innerActive: null,\n        inner: null,\n        startingInner: false\n      };\n    },\n\n    copyState: function(state) {\n      return {\n        outer: CodeMirror.copyState(outer, state.outer),\n        innerActive: state.innerActive,\n        inner: state.innerActive && CodeMirror.copyState(state.innerActive.mode, state.inner),\n        startingInner: state.startingInner\n      };\n    },\n\n    token: function(stream, state) {\n      if (!state.innerActive) {\n        var cutOff = Infinity, oldContent = stream.string;\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          var found = indexOf(oldContent, other.open, stream.pos);\n          if (found == stream.pos) {\n            if (!other.parseDelimiters) stream.match(other.open);\n            state.startingInner = !!other.parseDelimiters\n            state.innerActive = other;\n\n            // Get the outer indent, making sure to handle CodeMirror.Pass\n            var outerIndent = 0;\n            if (outer.indent) {\n              var possibleOuterIndent = outer.indent(state.outer, \"\", \"\");\n              if (possibleOuterIndent !== CodeMirror.Pass) outerIndent = possibleOuterIndent;\n            }\n\n            state.inner = CodeMirror.startState(other.mode, outerIndent);\n            return other.delimStyle && (other.delimStyle + \" \" + other.delimStyle + \"-open\");\n          } else if (found != -1 && found < cutOff) {\n            cutOff = found;\n          }\n        }\n        if (cutOff != Infinity) stream.string = oldContent.slice(0, cutOff);\n        var outerToken = outer.token(stream, state.outer);\n        if (cutOff != Infinity) stream.string = oldContent;\n        return outerToken;\n      } else {\n        var curInner = state.innerActive, oldContent = stream.string;\n        if (!curInner.close && stream.sol()) {\n          state.innerActive = state.inner = null;\n          return this.token(stream, state);\n        }\n        var found = curInner.close && !state.startingInner ?\n            indexOf(oldContent, curInner.close, stream.pos, curInner.parseDelimiters) : -1;\n        if (found == stream.pos && !curInner.parseDelimiters) {\n          stream.match(curInner.close);\n          state.innerActive = state.inner = null;\n          return curInner.delimStyle && (curInner.delimStyle + \" \" + curInner.delimStyle + \"-close\");\n        }\n        if (found > -1) stream.string = oldContent.slice(0, found);\n        var innerToken = curInner.mode.token(stream, state.inner);\n        if (found > -1) stream.string = oldContent;\n        else if (stream.pos > stream.start) state.startingInner = false\n\n        if (found == stream.pos && curInner.parseDelimiters)\n          state.innerActive = state.inner = null;\n\n        if (curInner.innerStyle) {\n          if (innerToken) innerToken = innerToken + \" \" + curInner.innerStyle;\n          else innerToken = curInner.innerStyle;\n        }\n\n        return innerToken;\n      }\n    },\n\n    indent: function(state, textAfter, line) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (!mode.indent) return CodeMirror.Pass;\n      return mode.indent(state.innerActive ? state.inner : state.outer, textAfter, line);\n    },\n\n    blankLine: function(state) {\n      var mode = state.innerActive ? state.innerActive.mode : outer;\n      if (mode.blankLine) {\n        mode.blankLine(state.innerActive ? state.inner : state.outer);\n      }\n      if (!state.innerActive) {\n        for (var i = 0; i < others.length; ++i) {\n          var other = others[i];\n          if (other.open === \"\\n\") {\n            state.innerActive = other;\n            state.inner = CodeMirror.startState(other.mode, mode.indent ? mode.indent(state.outer, \"\", \"\") : 0);\n          }\n        }\n      } else if (state.innerActive.close === \"\\n\") {\n        state.innerActive = state.inner = null;\n      }\n    },\n\n    electricChars: outer.electricChars,\n\n    innerMode: function(state) {\n      return state.inner ? {state: state.inner, mode: state.innerActive.mode} : {state: state.outer, mode: outer};\n    }\n  };\n};\n\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}