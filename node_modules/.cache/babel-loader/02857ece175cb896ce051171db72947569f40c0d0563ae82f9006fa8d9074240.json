{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  function Context(indented, column, type, info, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.info = info;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type, info) {\n    var indent = state.indented;\n    if (state.context && state.context.type == \"statement\" && type != \"statement\") indent = state.context.indented;\n    return state.context = new Context(indent, col, type, info, null, state.context);\n  }\n  function popContext(state) {\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\") state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n  function typeBefore(stream, state, pos) {\n    if (state.prevToken == \"variable\" || state.prevToken == \"type\") return true;\n    if (/\\S(?:[^- ]>|[*\\]])\\s*$|\\*$/.test(stream.string.slice(0, pos))) return true;\n    if (state.typeAtEndOfLine && stream.column() == stream.indentation()) return true;\n  }\n  function isTopScope(context) {\n    for (;;) {\n      if (!context || context.type == \"top\") return true;\n      if (context.type == \"}\" && context.prev.info != \"namespace\") return false;\n      context = context.prev;\n    }\n  }\n  CodeMirror.defineMode(\"clike\", function (config, parserConfig) {\n    var indentUnit = config.indentUnit,\n      statementIndentUnit = parserConfig.statementIndentUnit || indentUnit,\n      dontAlignCalls = parserConfig.dontAlignCalls,\n      keywords = parserConfig.keywords || {},\n      types = parserConfig.types || {},\n      builtin = parserConfig.builtin || {},\n      blockKeywords = parserConfig.blockKeywords || {},\n      defKeywords = parserConfig.defKeywords || {},\n      atoms = parserConfig.atoms || {},\n      hooks = parserConfig.hooks || {},\n      multiLineStrings = parserConfig.multiLineStrings,\n      indentStatements = parserConfig.indentStatements !== false,\n      indentSwitch = parserConfig.indentSwitch !== false,\n      namespaceSeparator = parserConfig.namespaceSeparator,\n      isPunctuationChar = parserConfig.isPunctuationChar || /[\\[\\]{}\\(\\),;\\:\\.]/,\n      numberStart = parserConfig.numberStart || /[\\d\\.]/,\n      number = parserConfig.number || /^(?:0x[a-f\\d]+|0b[01]+|(?:\\d+\\.?\\d*|\\.\\d+)(?:e[-+]?\\d+)?)(u|ll?|l|f)?/i,\n      isOperatorChar = parserConfig.isOperatorChar || /[+\\-*&%=<>!?|\\/]/,\n      isIdentifierChar = parserConfig.isIdentifierChar || /[\\w\\$_\\xa1-\\uffff]/,\n      // An optional function that takes a {string} token and returns true if it\n      // should be treated as a builtin.\n      isReservedIdentifier = parserConfig.isReservedIdentifier || false;\n    var curPunc, isDefKeyword;\n    function tokenBase(stream, state) {\n      var ch = stream.next();\n      if (hooks[ch]) {\n        var result = hooks[ch](stream, state);\n        if (result !== false) return result;\n      }\n      if (ch == '\"' || ch == \"'\") {\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      }\n      if (numberStart.test(ch)) {\n        stream.backUp(1);\n        if (stream.match(number)) return \"number\";\n        stream.next();\n      }\n      if (isPunctuationChar.test(ch)) {\n        curPunc = ch;\n        return null;\n      }\n      if (ch == \"/\") {\n        if (stream.eat(\"*\")) {\n          state.tokenize = tokenComment;\n          return tokenComment(stream, state);\n        }\n        if (stream.eat(\"/\")) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n      if (isOperatorChar.test(ch)) {\n        while (!stream.match(/^\\/[\\/*]/, false) && stream.eat(isOperatorChar)) {}\n        return \"operator\";\n      }\n      stream.eatWhile(isIdentifierChar);\n      if (namespaceSeparator) while (stream.match(namespaceSeparator)) stream.eatWhile(isIdentifierChar);\n      var cur = stream.current();\n      if (contains(keywords, cur)) {\n        if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n        if (contains(defKeywords, cur)) isDefKeyword = true;\n        return \"keyword\";\n      }\n      if (contains(types, cur)) return \"type\";\n      if (contains(builtin, cur) || isReservedIdentifier && isReservedIdentifier(cur)) {\n        if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n        return \"builtin\";\n      }\n      if (contains(atoms, cur)) return \"atom\";\n      return \"variable\";\n    }\n    function tokenString(quote) {\n      return function (stream, state) {\n        var escaped = false,\n          next,\n          end = false;\n        while ((next = stream.next()) != null) {\n          if (next == quote && !escaped) {\n            end = true;\n            break;\n          }\n          escaped = !escaped && next == \"\\\\\";\n        }\n        if (end || !(escaped || multiLineStrings)) state.tokenize = null;\n        return \"string\";\n      };\n    }\n    function tokenComment(stream, state) {\n      var maybeEnd = false,\n        ch;\n      while (ch = stream.next()) {\n        if (ch == \"/\" && maybeEnd) {\n          state.tokenize = null;\n          break;\n        }\n        maybeEnd = ch == \"*\";\n      }\n      return \"comment\";\n    }\n    function maybeEOL(stream, state) {\n      if (parserConfig.typeFirstDefinitions && stream.eol() && isTopScope(state.context)) state.typeAtEndOfLine = typeBefore(stream, state, stream.pos);\n    }\n\n    // Interface\n\n    return {\n      startState: function (basecolumn) {\n        return {\n          tokenize: null,\n          context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", null, false),\n          indented: 0,\n          startOfLine: true,\n          prevToken: null\n        };\n      },\n      token: function (stream, state) {\n        var ctx = state.context;\n        if (stream.sol()) {\n          if (ctx.align == null) ctx.align = false;\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n        }\n        if (stream.eatSpace()) {\n          maybeEOL(stream, state);\n          return null;\n        }\n        curPunc = isDefKeyword = null;\n        var style = (state.tokenize || tokenBase)(stream, state);\n        if (style == \"comment\" || style == \"meta\") return style;\n        if (ctx.align == null) ctx.align = true;\n        if (curPunc == \";\" || curPunc == \":\" || curPunc == \",\" && stream.match(/^\\s*(?:\\/\\/.*)?$/, false)) while (state.context.type == \"statement\") popContext(state);else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");else if (curPunc == \"}\") {\n          while (ctx.type == \"statement\") ctx = popContext(state);\n          if (ctx.type == \"}\") ctx = popContext(state);\n          while (ctx.type == \"statement\") ctx = popContext(state);\n        } else if (curPunc == ctx.type) popContext(state);else if (indentStatements && ((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != \";\" || ctx.type == \"statement\" && curPunc == \"newstatement\")) {\n          pushContext(state, stream.column(), \"statement\", stream.current());\n        }\n        if (style == \"variable\" && (state.prevToken == \"def\" || parserConfig.typeFirstDefinitions && typeBefore(stream, state, stream.start) && isTopScope(state.context) && stream.match(/^\\s*\\(/, false))) style = \"def\";\n        if (hooks.token) {\n          var result = hooks.token(stream, state, style);\n          if (result !== undefined) style = result;\n        }\n        if (style == \"def\" && parserConfig.styleDefs === false) style = \"variable\";\n        state.startOfLine = false;\n        state.prevToken = isDefKeyword ? \"def\" : style || curPunc;\n        maybeEOL(stream, state);\n        return style;\n      },\n      indent: function (state, textAfter) {\n        if (state.tokenize != tokenBase && state.tokenize != null || state.typeAtEndOfLine && isTopScope(state.context)) return CodeMirror.Pass;\n        var ctx = state.context,\n          firstChar = textAfter && textAfter.charAt(0);\n        var closing = firstChar == ctx.type;\n        if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n        if (parserConfig.dontIndentStatements) while (ctx.type == \"statement\" && parserConfig.dontIndentStatements.test(ctx.info)) ctx = ctx.prev;\n        if (hooks.indent) {\n          var hook = hooks.indent(state, ctx, textAfter, indentUnit);\n          if (typeof hook == \"number\") return hook;\n        }\n        var switchBlock = ctx.prev && ctx.prev.info == \"switch\";\n        if (parserConfig.allmanIndentation && /[{(]/.test(firstChar)) {\n          while (ctx.type != \"top\" && ctx.type != \"}\") ctx = ctx.prev;\n          return ctx.indented;\n        }\n        if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit);\n        if (ctx.align && (!dontAlignCalls || ctx.type != \")\")) return ctx.column + (closing ? 0 : 1);\n        if (ctx.type == \")\" && !closing) return ctx.indented + statementIndentUnit;\n        return ctx.indented + (closing ? 0 : indentUnit) + (!closing && switchBlock && !/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 0);\n      },\n      electricInput: indentSwitch ? /^\\s*(?:case .*?:|default:|\\{\\}?|\\})$/ : /^\\s*[{}]$/,\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      lineComment: \"//\",\n      fold: \"brace\"\n    };\n  });\n  function words(str) {\n    var obj = {},\n      words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n  function contains(words, word) {\n    if (typeof words === \"function\") {\n      return words(word);\n    } else {\n      return words.propertyIsEnumerable(word);\n    }\n  }\n  var cKeywords = \"auto if break case register continue return default do sizeof \" + \"static else struct switch extern typedef union for goto while enum const \" + \"volatile inline restrict asm fortran\";\n\n  // Keywords from https://en.cppreference.com/w/cpp/keyword includes C++20.\n  var cppKeywords = \"alignas alignof and and_eq audit axiom bitand bitor catch \" + \"class compl concept constexpr const_cast decltype delete dynamic_cast \" + \"explicit export final friend import module mutable namespace new noexcept \" + \"not not_eq operator or or_eq override private protected public \" + \"reinterpret_cast requires static_assert static_cast template this \" + \"thread_local throw try typeid typename using virtual xor xor_eq\";\n  var objCKeywords = \"bycopy byref in inout oneway out self super atomic nonatomic retain copy \" + \"readwrite readonly strong weak assign typeof nullable nonnull null_resettable _cmd \" + \"@interface @implementation @end @protocol @encode @property @synthesize @dynamic @class \" + \"@public @package @private @protected @required @optional @try @catch @finally @import \" + \"@selector @encode @defs @synchronized @autoreleasepool @compatibility_alias @available\";\n  var objCBuiltins = \"FOUNDATION_EXPORT FOUNDATION_EXTERN NS_INLINE NS_FORMAT_FUNCTION \" + \" NS_RETURNS_RETAINEDNS_ERROR_ENUM NS_RETURNS_NOT_RETAINED NS_RETURNS_INNER_POINTER \" + \"NS_DESIGNATED_INITIALIZER NS_ENUM NS_OPTIONS NS_REQUIRES_NIL_TERMINATION \" + \"NS_ASSUME_NONNULL_BEGIN NS_ASSUME_NONNULL_END NS_SWIFT_NAME NS_REFINED_FOR_SWIFT\";\n\n  // Do not use this. Use the cTypes function below. This is global just to avoid\n  // excessive calls when cTypes is being called multiple times during a parse.\n  var basicCTypes = words(\"int long char short double float unsigned signed \" + \"void bool\");\n\n  // Do not use this. Use the objCTypes function below. This is global just to avoid\n  // excessive calls when objCTypes is being called multiple times during a parse.\n  var basicObjCTypes = words(\"SEL instancetype id Class Protocol BOOL\");\n\n  // Returns true if identifier is a \"C\" type.\n  // C type is defined as those that are reserved by the compiler (basicTypes),\n  // and those that end in _t (Reserved by POSIX for types)\n  // http://www.gnu.org/software/libc/manual/html_node/Reserved-Names.html\n  function cTypes(identifier) {\n    return contains(basicCTypes, identifier) || /.+_t$/.test(identifier);\n  }\n\n  // Returns true if identifier is a \"Objective C\" type.\n  function objCTypes(identifier) {\n    return cTypes(identifier) || contains(basicObjCTypes, identifier);\n  }\n  var cBlockKeywords = \"case do else for if switch while struct enum union\";\n  var cDefKeywords = \"struct enum union\";\n  function cppHook(stream, state) {\n    if (!state.startOfLine) return false;\n    for (var ch, next = null; ch = stream.peek();) {\n      if (ch == \"\\\\\" && stream.match(/^.$/)) {\n        next = cppHook;\n        break;\n      } else if (ch == \"/\" && stream.match(/^\\/[\\/\\*]/, false)) {\n        break;\n      }\n      stream.next();\n    }\n    state.tokenize = next;\n    return \"meta\";\n  }\n  function pointerHook(_stream, state) {\n    if (state.prevToken == \"type\") return \"type\";\n    return false;\n  }\n\n  // For C and C++ (and ObjC): identifiers starting with __\n  // or _ followed by a capital letter are reserved for the compiler.\n  function cIsReservedIdentifier(token) {\n    if (!token || token.length < 2) return false;\n    if (token[0] != '_') return false;\n    return token[1] == '_' || token[1] !== token[1].toLowerCase();\n  }\n  function cpp14Literal(stream) {\n    stream.eatWhile(/[\\w\\.']/);\n    return \"number\";\n  }\n  function cpp11StringHook(stream, state) {\n    stream.backUp(1);\n    // Raw strings.\n    if (stream.match(/^(?:R|u8R|uR|UR|LR)/)) {\n      var match = stream.match(/^\"([^\\s\\\\()]{0,16})\\(/);\n      if (!match) {\n        return false;\n      }\n      state.cpp11RawStringDelim = match[1];\n      state.tokenize = tokenRawString;\n      return tokenRawString(stream, state);\n    }\n    // Unicode strings/chars.\n    if (stream.match(/^(?:u8|u|U|L)/)) {\n      if (stream.match(/^[\"']/, /* eat */false)) {\n        return \"string\";\n      }\n      return false;\n    }\n    // Ignore this hook.\n    stream.next();\n    return false;\n  }\n  function cppLooksLikeConstructor(word) {\n    var lastTwo = /(\\w+)::~?(\\w+)$/.exec(word);\n    return lastTwo && lastTwo[1] == lastTwo[2];\n  }\n\n  // C#-style strings where \"\" escapes a quote.\n  function tokenAtString(stream, state) {\n    var next;\n    while ((next = stream.next()) != null) {\n      if (next == '\"' && !stream.eat('\"')) {\n        state.tokenize = null;\n        break;\n      }\n    }\n    return \"string\";\n  }\n\n  // C++11 raw string literal is <prefix>\"<delim>( anything )<delim>\", where\n  // <delim> can be a string up to 16 characters long.\n  function tokenRawString(stream, state) {\n    // Escape characters that have special regex meanings.\n    var delim = state.cpp11RawStringDelim.replace(/[^\\w\\s]/g, '\\\\$&');\n    var match = stream.match(new RegExp(\".*?\\\\)\" + delim + '\"'));\n    if (match) state.tokenize = null;else stream.skipToEnd();\n    return \"string\";\n  }\n  function def(mimes, mode) {\n    if (typeof mimes == \"string\") mimes = [mimes];\n    var words = [];\n    function add(obj) {\n      if (obj) for (var prop in obj) if (obj.hasOwnProperty(prop)) words.push(prop);\n    }\n    add(mode.keywords);\n    add(mode.types);\n    add(mode.builtin);\n    add(mode.atoms);\n    if (words.length) {\n      mode.helperType = mimes[0];\n      CodeMirror.registerHelper(\"hintWords\", mimes[0], words);\n    }\n    for (var i = 0; i < mimes.length; ++i) CodeMirror.defineMIME(mimes[i], mode);\n  }\n  def([\"text/x-csrc\", \"text/x-c\", \"text/x-chdr\"], {\n    name: \"clike\",\n    keywords: words(cKeywords),\n    types: cTypes,\n    blockKeywords: words(cBlockKeywords),\n    defKeywords: words(cDefKeywords),\n    typeFirstDefinitions: true,\n    atoms: words(\"NULL true false\"),\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook\n    },\n    modeProps: {\n      fold: [\"brace\", \"include\"]\n    }\n  });\n  def([\"text/x-c++src\", \"text/x-c++hdr\"], {\n    name: \"clike\",\n    keywords: words(cKeywords + \" \" + cppKeywords),\n    types: cTypes,\n    blockKeywords: words(cBlockKeywords + \" class try catch\"),\n    defKeywords: words(cDefKeywords + \" class namespace\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false NULL nullptr\"),\n    dontIndentStatements: /^template$/,\n    isIdentifierChar: /[\\w\\$_~\\xa1-\\uffff]/,\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n      \"u\": cpp11StringHook,\n      \"U\": cpp11StringHook,\n      \"L\": cpp11StringHook,\n      \"R\": cpp11StringHook,\n      \"0\": cpp14Literal,\n      \"1\": cpp14Literal,\n      \"2\": cpp14Literal,\n      \"3\": cpp14Literal,\n      \"4\": cpp14Literal,\n      \"5\": cpp14Literal,\n      \"6\": cpp14Literal,\n      \"7\": cpp14Literal,\n      \"8\": cpp14Literal,\n      \"9\": cpp14Literal,\n      token: function (stream, state, style) {\n        if (style == \"variable\" && stream.peek() == \"(\" && (state.prevToken == \";\" || state.prevToken == null || state.prevToken == \"}\") && cppLooksLikeConstructor(stream.current())) return \"def\";\n      }\n    },\n    namespaceSeparator: \"::\",\n    modeProps: {\n      fold: [\"brace\", \"include\"]\n    }\n  });\n  def(\"text/x-java\", {\n    name: \"clike\",\n    keywords: words(\"abstract assert break case catch class const continue default \" + \"do else enum extends final finally for goto if implements import \" + \"instanceof interface native new package private protected public \" + \"return static strictfp super switch synchronized this throw throws transient \" + \"try volatile while @interface\"),\n    types: words(\"var byte short int long float double boolean char void Boolean Byte Character Double Float \" + \"Integer Long Number Object Short String StringBuffer StringBuilder Void\"),\n    blockKeywords: words(\"catch class do else finally for if switch try while\"),\n    defKeywords: words(\"class interface enum @interface\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+\\.?\\d*|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n    hooks: {\n      \"@\": function (stream) {\n        // Don't match the @interface keyword.\n        if (stream.match('interface', false)) return false;\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '\"': function (stream, state) {\n        if (!stream.match(/\"\"$/)) return false;\n        state.tokenize = tokenTripleString;\n        return state.tokenize(stream, state);\n      }\n    },\n    modeProps: {\n      fold: [\"brace\", \"import\"]\n    }\n  });\n  def(\"text/x-csharp\", {\n    name: \"clike\",\n    keywords: words(\"abstract as async await base break case catch checked class const continue\" + \" default delegate do else enum event explicit extern finally fixed for\" + \" foreach goto if implicit in init interface internal is lock namespace new\" + \" operator out override params private protected public readonly record ref required return sealed\" + \" sizeof stackalloc static struct switch this throw try typeof unchecked\" + \" unsafe using virtual void volatile while add alias ascending descending dynamic from get\" + \" global group into join let orderby partial remove select set value var yield\"),\n    types: words(\"Action Boolean Byte Char DateTime DateTimeOffset Decimal Double Func\" + \" Guid Int16 Int32 Int64 Object SByte Single String Task TimeSpan UInt16 UInt32\" + \" UInt64 bool byte char decimal double short int long object\" + \" sbyte float string ushort uint ulong\"),\n    blockKeywords: words(\"catch class do else finally for foreach if struct switch try while\"),\n    defKeywords: words(\"class interface namespace record struct var\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    hooks: {\n      \"@\": function (stream, state) {\n        if (stream.eat('\"')) {\n          state.tokenize = tokenAtString;\n          return tokenAtString(stream, state);\n        }\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    }\n  });\n  function tokenTripleString(stream, state) {\n    var escaped = false;\n    while (!stream.eol()) {\n      if (!escaped && stream.match('\"\"\"')) {\n        state.tokenize = null;\n        break;\n      }\n      escaped = stream.next() == \"\\\\\" && !escaped;\n    }\n    return \"string\";\n  }\n  function tokenNestedComment(depth) {\n    return function (stream, state) {\n      var ch;\n      while (ch = stream.next()) {\n        if (ch == \"*\" && stream.eat(\"/\")) {\n          if (depth == 1) {\n            state.tokenize = null;\n            break;\n          } else {\n            state.tokenize = tokenNestedComment(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        } else if (ch == \"/\" && stream.eat(\"*\")) {\n          state.tokenize = tokenNestedComment(depth + 1);\n          return state.tokenize(stream, state);\n        }\n      }\n      return \"comment\";\n    };\n  }\n  def(\"text/x-scala\", {\n    name: \"clike\",\n    keywords: words( /* scala */\n    \"abstract case catch class def do else extends final finally for forSome if \" + \"implicit import lazy match new null object override package private protected return \" + \"sealed super this throw trait try type val var while with yield _ \" + /* package scala */\n    \"assert assume require print println printf readLine readBoolean readByte readShort \" + \"readChar readInt readLong readFloat readDouble\"),\n    types: words(\"AnyVal App Application Array BufferedIterator BigDecimal BigInt Char Console Either \" + \"Enumeration Equiv Error Exception Fractional Function IndexedSeq Int Integral Iterable \" + \"Iterator List Map Numeric Nil NotNull Option Ordered Ordering PartialFunction PartialOrdering \" + \"Product Proxy Range Responder Seq Serializable Set Specializable Stream StringBuilder \" + \"StringContext Symbol Throwable Traversable TraversableOnce Tuple Unit Vector \" + /* package java.lang */\n    \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" + \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" + \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" + \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void\"),\n    multiLineStrings: true,\n    blockKeywords: words(\"catch class enum do else finally for forSome if match switch try while\"),\n    defKeywords: words(\"class enum def object package trait type val var\"),\n    atoms: words(\"true false null\"),\n    indentStatements: false,\n    indentSwitch: false,\n    isOperatorChar: /[+\\-*&%=<>!?|\\/#:@]/,\n    hooks: {\n      \"@\": function (stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '\"': function (stream, state) {\n        if (!stream.match('\"\"')) return false;\n        state.tokenize = tokenTripleString;\n        return state.tokenize(stream, state);\n      },\n      \"'\": function (stream) {\n        if (stream.match(/^(\\\\[^'\\s]+|[^\\\\'])'/)) return \"string-2\";\n        stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n        return \"atom\";\n      },\n      \"=\": function (stream, state) {\n        var cx = state.context;\n        if (cx.type == \"}\" && cx.align && stream.eat(\">\")) {\n          state.context = new Context(cx.indented, cx.column, cx.type, cx.info, null, cx.prev);\n          return \"operator\";\n        } else {\n          return false;\n        }\n      },\n      \"/\": function (stream, state) {\n        if (!stream.eat(\"*\")) return false;\n        state.tokenize = tokenNestedComment(1);\n        return state.tokenize(stream, state);\n      }\n    },\n    modeProps: {\n      closeBrackets: {\n        pairs: '()[]{}\"\"',\n        triples: '\"'\n      }\n    }\n  });\n  function tokenKotlinString(tripleString) {\n    return function (stream, state) {\n      var escaped = false,\n        next,\n        end = false;\n      while (!stream.eol()) {\n        if (!tripleString && !escaped && stream.match('\"')) {\n          end = true;\n          break;\n        }\n        if (tripleString && stream.match('\"\"\"')) {\n          end = true;\n          break;\n        }\n        next = stream.next();\n        if (!escaped && next == \"$\" && stream.match('{')) stream.skipTo(\"}\");\n        escaped = !escaped && next == \"\\\\\" && !tripleString;\n      }\n      if (end || !tripleString) state.tokenize = null;\n      return \"string\";\n    };\n  }\n  def(\"text/x-kotlin\", {\n    name: \"clike\",\n    keywords: words( /*keywords*/\n    \"package as typealias class interface this super val operator \" + \"var fun for is in This throw return annotation \" + \"break continue object if else while do try when !in !is as? \" + /*soft keywords*/\n    \"file import where by get set abstract enum open inner override private public internal \" + \"protected catch finally out final vararg reified dynamic companion constructor init \" + \"sealed field property receiver param sparam lateinit data inline noinline tailrec \" + \"external annotation crossinline const operator infix suspend actual expect setparam value\"),\n    types: words( /* package java.lang */\n    \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" + \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" + \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" + \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void Annotation Any BooleanArray \" + \"ByteArray Char CharArray DeprecationLevel DoubleArray Enum FloatArray Function Int IntArray Lazy \" + \"LazyThreadSafetyMode LongArray Nothing ShortArray Unit\"),\n    intendSwitch: false,\n    indentStatements: false,\n    multiLineStrings: true,\n    number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+(\\.\\d+)?|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n    blockKeywords: words(\"catch class do else finally for if where try while enum\"),\n    defKeywords: words(\"class val var object interface fun\"),\n    atoms: words(\"true false null this\"),\n    hooks: {\n      \"@\": function (stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '*': function (_stream, state) {\n        return state.prevToken == '.' ? 'variable' : 'operator';\n      },\n      '\"': function (stream, state) {\n        state.tokenize = tokenKotlinString(stream.match('\"\"'));\n        return state.tokenize(stream, state);\n      },\n      \"/\": function (stream, state) {\n        if (!stream.eat(\"*\")) return false;\n        state.tokenize = tokenNestedComment(1);\n        return state.tokenize(stream, state);\n      },\n      indent: function (state, ctx, textAfter, indentUnit) {\n        var firstChar = textAfter && textAfter.charAt(0);\n        if ((state.prevToken == \"}\" || state.prevToken == \")\") && textAfter == \"\") return state.indented;\n        if (state.prevToken == \"operator\" && textAfter != \"}\" && state.context.type != \"}\" || state.prevToken == \"variable\" && firstChar == \".\" || (state.prevToken == \"}\" || state.prevToken == \")\") && firstChar == \".\") return indentUnit * 2 + ctx.indented;\n        if (ctx.align && ctx.type == \"}\") return ctx.indented + (state.context.type == (textAfter || \"\").charAt(0) ? 0 : indentUnit);\n      }\n    },\n    modeProps: {\n      closeBrackets: {\n        triples: '\"'\n      }\n    }\n  });\n  def([\"x-shader/x-vertex\", \"x-shader/x-fragment\"], {\n    name: \"clike\",\n    keywords: words(\"sampler1D sampler2D sampler3D samplerCube \" + \"sampler1DShadow sampler2DShadow \" + \"const attribute uniform varying \" + \"break continue discard return \" + \"for while do if else struct \" + \"in out inout\"),\n    types: words(\"float int bool void \" + \"vec2 vec3 vec4 ivec2 ivec3 ivec4 bvec2 bvec3 bvec4 \" + \"mat2 mat3 mat4\"),\n    blockKeywords: words(\"for while do if else struct\"),\n    builtin: words(\"radians degrees sin cos tan asin acos atan \" + \"pow exp log exp2 sqrt inversesqrt \" + \"abs sign floor ceil fract mod min max clamp mix step smoothstep \" + \"length distance dot cross normalize ftransform faceforward \" + \"reflect refract matrixCompMult \" + \"lessThan lessThanEqual greaterThan greaterThanEqual \" + \"equal notEqual any all not \" + \"texture1D texture1DProj texture1DLod texture1DProjLod \" + \"texture2D texture2DProj texture2DLod texture2DProjLod \" + \"texture3D texture3DProj texture3DLod texture3DProjLod \" + \"textureCube textureCubeLod \" + \"shadow1D shadow2D shadow1DProj shadow2DProj \" + \"shadow1DLod shadow2DLod shadow1DProjLod shadow2DProjLod \" + \"dFdx dFdy fwidth \" + \"noise1 noise2 noise3 noise4\"),\n    atoms: words(\"true false \" + \"gl_FragColor gl_SecondaryColor gl_Normal gl_Vertex \" + \"gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 \" + \"gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 \" + \"gl_FogCoord gl_PointCoord \" + \"gl_Position gl_PointSize gl_ClipVertex \" + \"gl_FrontColor gl_BackColor gl_FrontSecondaryColor gl_BackSecondaryColor \" + \"gl_TexCoord gl_FogFragCoord \" + \"gl_FragCoord gl_FrontFacing \" + \"gl_FragData gl_FragDepth \" + \"gl_ModelViewMatrix gl_ProjectionMatrix gl_ModelViewProjectionMatrix \" + \"gl_TextureMatrix gl_NormalMatrix gl_ModelViewMatrixInverse \" + \"gl_ProjectionMatrixInverse gl_ModelViewProjectionMatrixInverse \" + \"gl_TextureMatrixTranspose gl_ModelViewMatrixInverseTranspose \" + \"gl_ProjectionMatrixInverseTranspose \" + \"gl_ModelViewProjectionMatrixInverseTranspose \" + \"gl_TextureMatrixInverseTranspose \" + \"gl_NormalScale gl_DepthRange gl_ClipPlane \" + \"gl_Point gl_FrontMaterial gl_BackMaterial gl_LightSource gl_LightModel \" + \"gl_FrontLightModelProduct gl_BackLightModelProduct \" + \"gl_TextureColor gl_EyePlaneS gl_EyePlaneT gl_EyePlaneR gl_EyePlaneQ \" + \"gl_FogParameters \" + \"gl_MaxLights gl_MaxClipPlanes gl_MaxTextureUnits gl_MaxTextureCoords \" + \"gl_MaxVertexAttribs gl_MaxVertexUniformComponents gl_MaxVaryingFloats \" + \"gl_MaxVertexTextureImageUnits gl_MaxTextureImageUnits \" + \"gl_MaxFragmentUniformComponents gl_MaxCombineTextureImageUnits \" + \"gl_MaxDrawBuffers\"),\n    indentSwitch: false,\n    hooks: {\n      \"#\": cppHook\n    },\n    modeProps: {\n      fold: [\"brace\", \"include\"]\n    }\n  });\n  def(\"text/x-nesc\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \" as atomic async call command component components configuration event generic \" + \"implementation includes interface module new norace nx_struct nx_union post provides \" + \"signal task uses abstract extends\"),\n    types: cTypes,\n    blockKeywords: words(cBlockKeywords),\n    atoms: words(\"null true false\"),\n    hooks: {\n      \"#\": cppHook\n    },\n    modeProps: {\n      fold: [\"brace\", \"include\"]\n    }\n  });\n  def(\"text/x-objectivec\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \" \" + objCKeywords),\n    types: objCTypes,\n    builtin: words(objCBuiltins),\n    blockKeywords: words(cBlockKeywords + \" @synthesize @try @catch @finally @autoreleasepool @synchronized\"),\n    defKeywords: words(cDefKeywords + \" @interface @implementation @protocol @class\"),\n    dontIndentStatements: /^@.*$/,\n    typeFirstDefinitions: true,\n    atoms: words(\"YES NO NULL Nil nil true false nullptr\"),\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook\n    },\n    modeProps: {\n      fold: [\"brace\", \"include\"]\n    }\n  });\n  def(\"text/x-objectivec++\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \" \" + objCKeywords + \" \" + cppKeywords),\n    types: objCTypes,\n    builtin: words(objCBuiltins),\n    blockKeywords: words(cBlockKeywords + \" @synthesize @try @catch @finally @autoreleasepool @synchronized class try catch\"),\n    defKeywords: words(cDefKeywords + \" @interface @implementation @protocol @class class namespace\"),\n    dontIndentStatements: /^@.*$|^template$/,\n    typeFirstDefinitions: true,\n    atoms: words(\"YES NO NULL Nil nil true false nullptr\"),\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n      \"u\": cpp11StringHook,\n      \"U\": cpp11StringHook,\n      \"L\": cpp11StringHook,\n      \"R\": cpp11StringHook,\n      \"0\": cpp14Literal,\n      \"1\": cpp14Literal,\n      \"2\": cpp14Literal,\n      \"3\": cpp14Literal,\n      \"4\": cpp14Literal,\n      \"5\": cpp14Literal,\n      \"6\": cpp14Literal,\n      \"7\": cpp14Literal,\n      \"8\": cpp14Literal,\n      \"9\": cpp14Literal,\n      token: function (stream, state, style) {\n        if (style == \"variable\" && stream.peek() == \"(\" && (state.prevToken == \";\" || state.prevToken == null || state.prevToken == \"}\") && cppLooksLikeConstructor(stream.current())) return \"def\";\n      }\n    },\n    namespaceSeparator: \"::\",\n    modeProps: {\n      fold: [\"brace\", \"include\"]\n    }\n  });\n  def(\"text/x-squirrel\", {\n    name: \"clike\",\n    keywords: words(\"base break clone continue const default delete enum extends function in class\" + \" foreach local resume return this throw typeof yield constructor instanceof static\"),\n    types: cTypes,\n    blockKeywords: words(\"case catch class else for foreach if switch try while\"),\n    defKeywords: words(\"function local class\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    hooks: {\n      \"#\": cppHook\n    },\n    modeProps: {\n      fold: [\"brace\", \"include\"]\n    }\n  });\n\n  // Ceylon Strings need to deal with interpolation\n  var stringTokenizer = null;\n  function tokenCeylonString(type) {\n    return function (stream, state) {\n      var escaped = false,\n        next,\n        end = false;\n      while (!stream.eol()) {\n        if (!escaped && stream.match('\"') && (type == \"single\" || stream.match('\"\"'))) {\n          end = true;\n          break;\n        }\n        if (!escaped && stream.match('``')) {\n          stringTokenizer = tokenCeylonString(type);\n          end = true;\n          break;\n        }\n        next = stream.next();\n        escaped = type == \"single\" && !escaped && next == \"\\\\\";\n      }\n      if (end) state.tokenize = null;\n      return \"string\";\n    };\n  }\n  def(\"text/x-ceylon\", {\n    name: \"clike\",\n    keywords: words(\"abstracts alias assembly assert assign break case catch class continue dynamic else\" + \" exists extends finally for function given if import in interface is let module new\" + \" nonempty object of out outer package return satisfies super switch then this throw\" + \" try value void while\"),\n    types: function (word) {\n      // In Ceylon all identifiers that start with an uppercase are types\n      var first = word.charAt(0);\n      return first === first.toUpperCase() && first !== first.toLowerCase();\n    },\n    blockKeywords: words(\"case catch class dynamic else finally for function if interface module new object switch try while\"),\n    defKeywords: words(\"class dynamic function interface module object package value\"),\n    builtin: words(\"abstract actual aliased annotation by default deprecated doc final formal late license\" + \" native optional sealed see serializable shared suppressWarnings tagged throws variable\"),\n    isPunctuationChar: /[\\[\\]{}\\(\\),;\\:\\.`]/,\n    isOperatorChar: /[+\\-*&%=<>!?|^~:\\/]/,\n    numberStart: /[\\d#$]/,\n    number: /^(?:#[\\da-fA-F_]+|\\$[01_]+|[\\d_]+[kMGTPmunpf]?|[\\d_]+\\.[\\d_]+(?:[eE][-+]?\\d+|[kMGTPmunpf]|)|)/i,\n    multiLineStrings: true,\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null larger smaller equal empty finished\"),\n    indentSwitch: false,\n    styleDefs: false,\n    hooks: {\n      \"@\": function (stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '\"': function (stream, state) {\n        state.tokenize = tokenCeylonString(stream.match('\"\"') ? \"triple\" : \"single\");\n        return state.tokenize(stream, state);\n      },\n      '`': function (stream, state) {\n        if (!stringTokenizer || !stream.match('`')) return false;\n        state.tokenize = stringTokenizer;\n        stringTokenizer = null;\n        return state.tokenize(stream, state);\n      },\n      \"'\": function (stream) {\n        stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n        return \"atom\";\n      },\n      token: function (_stream, state, style) {\n        if ((style == \"variable\" || style == \"type\") && state.prevToken == \".\") {\n          return \"variable-2\";\n        }\n      }\n    },\n    modeProps: {\n      fold: [\"brace\", \"import\"],\n      closeBrackets: {\n        triples: '\"'\n      }\n    }\n  });\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","Context","indented","column","type","info","align","prev","pushContext","state","col","indent","context","popContext","t","typeBefore","stream","pos","prevToken","test","string","slice","typeAtEndOfLine","indentation","isTopScope","defineMode","config","parserConfig","indentUnit","statementIndentUnit","dontAlignCalls","keywords","types","builtin","blockKeywords","defKeywords","atoms","hooks","multiLineStrings","indentStatements","indentSwitch","namespaceSeparator","isPunctuationChar","numberStart","number","isOperatorChar","isIdentifierChar","isReservedIdentifier","curPunc","isDefKeyword","tokenBase","ch","next","result","tokenize","tokenString","backUp","match","eat","tokenComment","skipToEnd","eatWhile","cur","current","contains","quote","escaped","end","maybeEnd","maybeEOL","typeFirstDefinitions","eol","startState","basecolumn","startOfLine","token","ctx","sol","eatSpace","style","start","undefined","styleDefs","textAfter","Pass","firstChar","charAt","closing","dontIndentStatements","hook","switchBlock","allmanIndentation","electricInput","blockCommentStart","blockCommentEnd","blockCommentContinue","lineComment","fold","words","str","obj","split","i","length","word","propertyIsEnumerable","cKeywords","cppKeywords","objCKeywords","objCBuiltins","basicCTypes","basicObjCTypes","cTypes","identifier","objCTypes","cBlockKeywords","cDefKeywords","cppHook","peek","pointerHook","_stream","cIsReservedIdentifier","toLowerCase","cpp14Literal","cpp11StringHook","cpp11RawStringDelim","tokenRawString","cppLooksLikeConstructor","lastTwo","exec","tokenAtString","delim","replace","RegExp","def","mimes","mode","add","prop","hasOwnProperty","push","helperType","registerHelper","defineMIME","name","modeProps","@","\"","tokenTripleString","tokenNestedComment","depth","'","=","cx","/","closeBrackets","pairs","triples","tokenKotlinString","tripleString","skipTo","intendSwitch","*","stringTokenizer","tokenCeylonString","first","toUpperCase","`"],"sources":["D:/Java_Projects/MYBLOG-备份/frontend/blog-frontend/node_modules/codemirror/mode/clike/clike.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction Context(indented, column, type, info, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.info = info;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type, info) {\n  var indent = state.indented;\n  if (state.context && state.context.type == \"statement\" && type != \"statement\")\n    indent = state.context.indented;\n  return state.context = new Context(indent, col, type, info, null, state.context);\n}\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\nfunction typeBefore(stream, state, pos) {\n  if (state.prevToken == \"variable\" || state.prevToken == \"type\") return true;\n  if (/\\S(?:[^- ]>|[*\\]])\\s*$|\\*$/.test(stream.string.slice(0, pos))) return true;\n  if (state.typeAtEndOfLine && stream.column() == stream.indentation()) return true;\n}\n\nfunction isTopScope(context) {\n  for (;;) {\n    if (!context || context.type == \"top\") return true;\n    if (context.type == \"}\" && context.prev.info != \"namespace\") return false;\n    context = context.prev;\n  }\n}\n\nCodeMirror.defineMode(\"clike\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit,\n      statementIndentUnit = parserConfig.statementIndentUnit || indentUnit,\n      dontAlignCalls = parserConfig.dontAlignCalls,\n      keywords = parserConfig.keywords || {},\n      types = parserConfig.types || {},\n      builtin = parserConfig.builtin || {},\n      blockKeywords = parserConfig.blockKeywords || {},\n      defKeywords = parserConfig.defKeywords || {},\n      atoms = parserConfig.atoms || {},\n      hooks = parserConfig.hooks || {},\n      multiLineStrings = parserConfig.multiLineStrings,\n      indentStatements = parserConfig.indentStatements !== false,\n      indentSwitch = parserConfig.indentSwitch !== false,\n      namespaceSeparator = parserConfig.namespaceSeparator,\n      isPunctuationChar = parserConfig.isPunctuationChar || /[\\[\\]{}\\(\\),;\\:\\.]/,\n      numberStart = parserConfig.numberStart || /[\\d\\.]/,\n      number = parserConfig.number || /^(?:0x[a-f\\d]+|0b[01]+|(?:\\d+\\.?\\d*|\\.\\d+)(?:e[-+]?\\d+)?)(u|ll?|l|f)?/i,\n      isOperatorChar = parserConfig.isOperatorChar || /[+\\-*&%=<>!?|\\/]/,\n      isIdentifierChar = parserConfig.isIdentifierChar || /[\\w\\$_\\xa1-\\uffff]/,\n      // An optional function that takes a {string} token and returns true if it\n      // should be treated as a builtin.\n      isReservedIdentifier = parserConfig.isReservedIdentifier || false;\n\n  var curPunc, isDefKeyword;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (numberStart.test(ch)) {\n      stream.backUp(1)\n      if (stream.match(number)) return \"number\"\n      stream.next()\n    }\n    if (isPunctuationChar.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      while (!stream.match(/^\\/[\\/*]/, false) && stream.eat(isOperatorChar)) {}\n      return \"operator\";\n    }\n    stream.eatWhile(isIdentifierChar);\n    if (namespaceSeparator) while (stream.match(namespaceSeparator))\n      stream.eatWhile(isIdentifierChar);\n\n    var cur = stream.current();\n    if (contains(keywords, cur)) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      if (contains(defKeywords, cur)) isDefKeyword = true;\n      return \"keyword\";\n    }\n    if (contains(types, cur)) return \"type\";\n    if (contains(builtin, cur)\n        || (isReservedIdentifier && isReservedIdentifier(cur))) {\n      if (contains(blockKeywords, cur)) curPunc = \"newstatement\";\n      return \"builtin\";\n    }\n    if (contains(atoms, cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = null;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function maybeEOL(stream, state) {\n    if (parserConfig.typeFirstDefinitions && stream.eol() && isTopScope(state.context))\n      state.typeAtEndOfLine = typeBefore(stream, state, stream.pos)\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", null, false),\n        indented: 0,\n        startOfLine: true,\n        prevToken: null\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) { maybeEOL(stream, state); return null; }\n      curPunc = isDefKeyword = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if (curPunc == \";\" || curPunc == \":\" || (curPunc == \",\" && stream.match(/^\\s*(?:\\/\\/.*)?$/, false)))\n        while (state.context.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (indentStatements &&\n               (((ctx.type == \"}\" || ctx.type == \"top\") && curPunc != \";\") ||\n                (ctx.type == \"statement\" && curPunc == \"newstatement\"))) {\n        pushContext(state, stream.column(), \"statement\", stream.current());\n      }\n\n      if (style == \"variable\" &&\n          ((state.prevToken == \"def\" ||\n            (parserConfig.typeFirstDefinitions && typeBefore(stream, state, stream.start) &&\n             isTopScope(state.context) && stream.match(/^\\s*\\(/, false)))))\n        style = \"def\";\n\n      if (hooks.token) {\n        var result = hooks.token(stream, state, style);\n        if (result !== undefined) style = result;\n      }\n\n      if (style == \"def\" && parserConfig.styleDefs === false) style = \"variable\";\n\n      state.startOfLine = false;\n      state.prevToken = isDefKeyword ? \"def\" : style || curPunc;\n      maybeEOL(stream, state);\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null || state.typeAtEndOfLine && isTopScope(state.context))\n        return CodeMirror.Pass;\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      var closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\" && firstChar == \"}\") ctx = ctx.prev;\n      if (parserConfig.dontIndentStatements)\n        while (ctx.type == \"statement\" && parserConfig.dontIndentStatements.test(ctx.info))\n          ctx = ctx.prev\n      if (hooks.indent) {\n        var hook = hooks.indent(state, ctx, textAfter, indentUnit);\n        if (typeof hook == \"number\") return hook\n      }\n      var switchBlock = ctx.prev && ctx.prev.info == \"switch\";\n      if (parserConfig.allmanIndentation && /[{(]/.test(firstChar)) {\n        while (ctx.type != \"top\" && ctx.type != \"}\") ctx = ctx.prev\n        return ctx.indented\n      }\n      if (ctx.type == \"statement\")\n        return ctx.indented + (firstChar == \"{\" ? 0 : statementIndentUnit);\n      if (ctx.align && (!dontAlignCalls || ctx.type != \")\"))\n        return ctx.column + (closing ? 0 : 1);\n      if (ctx.type == \")\" && !closing)\n        return ctx.indented + statementIndentUnit;\n\n      return ctx.indented + (closing ? 0 : indentUnit) +\n        (!closing && switchBlock && !/^(?:case|default)\\b/.test(textAfter) ? indentUnit : 0);\n    },\n\n    electricInput: indentSwitch ? /^\\s*(?:case .*?:|default:|\\{\\}?|\\})$/ : /^\\s*[{}]$/,\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    blockCommentContinue: \" * \",\n    lineComment: \"//\",\n    fold: \"brace\"\n  };\n});\n\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n  function contains(words, word) {\n    if (typeof words === \"function\") {\n      return words(word);\n    } else {\n      return words.propertyIsEnumerable(word);\n    }\n  }\n  var cKeywords = \"auto if break case register continue return default do sizeof \" +\n    \"static else struct switch extern typedef union for goto while enum const \" +\n    \"volatile inline restrict asm fortran\";\n\n  // Keywords from https://en.cppreference.com/w/cpp/keyword includes C++20.\n  var cppKeywords = \"alignas alignof and and_eq audit axiom bitand bitor catch \" +\n  \"class compl concept constexpr const_cast decltype delete dynamic_cast \" +\n  \"explicit export final friend import module mutable namespace new noexcept \" +\n  \"not not_eq operator or or_eq override private protected public \" +\n  \"reinterpret_cast requires static_assert static_cast template this \" +\n  \"thread_local throw try typeid typename using virtual xor xor_eq\";\n\n  var objCKeywords = \"bycopy byref in inout oneway out self super atomic nonatomic retain copy \" +\n  \"readwrite readonly strong weak assign typeof nullable nonnull null_resettable _cmd \" +\n  \"@interface @implementation @end @protocol @encode @property @synthesize @dynamic @class \" +\n  \"@public @package @private @protected @required @optional @try @catch @finally @import \" +\n  \"@selector @encode @defs @synchronized @autoreleasepool @compatibility_alias @available\";\n\n  var objCBuiltins = \"FOUNDATION_EXPORT FOUNDATION_EXTERN NS_INLINE NS_FORMAT_FUNCTION \" +\n  \" NS_RETURNS_RETAINEDNS_ERROR_ENUM NS_RETURNS_NOT_RETAINED NS_RETURNS_INNER_POINTER \" +\n  \"NS_DESIGNATED_INITIALIZER NS_ENUM NS_OPTIONS NS_REQUIRES_NIL_TERMINATION \" +\n  \"NS_ASSUME_NONNULL_BEGIN NS_ASSUME_NONNULL_END NS_SWIFT_NAME NS_REFINED_FOR_SWIFT\"\n\n  // Do not use this. Use the cTypes function below. This is global just to avoid\n  // excessive calls when cTypes is being called multiple times during a parse.\n  var basicCTypes = words(\"int long char short double float unsigned signed \" +\n    \"void bool\");\n\n  // Do not use this. Use the objCTypes function below. This is global just to avoid\n  // excessive calls when objCTypes is being called multiple times during a parse.\n  var basicObjCTypes = words(\"SEL instancetype id Class Protocol BOOL\");\n\n  // Returns true if identifier is a \"C\" type.\n  // C type is defined as those that are reserved by the compiler (basicTypes),\n  // and those that end in _t (Reserved by POSIX for types)\n  // http://www.gnu.org/software/libc/manual/html_node/Reserved-Names.html\n  function cTypes(identifier) {\n    return contains(basicCTypes, identifier) || /.+_t$/.test(identifier);\n  }\n\n  // Returns true if identifier is a \"Objective C\" type.\n  function objCTypes(identifier) {\n    return cTypes(identifier) || contains(basicObjCTypes, identifier);\n  }\n\n  var cBlockKeywords = \"case do else for if switch while struct enum union\";\n  var cDefKeywords = \"struct enum union\";\n\n  function cppHook(stream, state) {\n    if (!state.startOfLine) return false\n    for (var ch, next = null; ch = stream.peek();) {\n      if (ch == \"\\\\\" && stream.match(/^.$/)) {\n        next = cppHook\n        break\n      } else if (ch == \"/\" && stream.match(/^\\/[\\/\\*]/, false)) {\n        break\n      }\n      stream.next()\n    }\n    state.tokenize = next\n    return \"meta\"\n  }\n\n  function pointerHook(_stream, state) {\n    if (state.prevToken == \"type\") return \"type\";\n    return false;\n  }\n\n  // For C and C++ (and ObjC): identifiers starting with __\n  // or _ followed by a capital letter are reserved for the compiler.\n  function cIsReservedIdentifier(token) {\n    if (!token || token.length < 2) return false;\n    if (token[0] != '_') return false;\n    return (token[1] == '_') || (token[1] !== token[1].toLowerCase());\n  }\n\n  function cpp14Literal(stream) {\n    stream.eatWhile(/[\\w\\.']/);\n    return \"number\";\n  }\n\n  function cpp11StringHook(stream, state) {\n    stream.backUp(1);\n    // Raw strings.\n    if (stream.match(/^(?:R|u8R|uR|UR|LR)/)) {\n      var match = stream.match(/^\"([^\\s\\\\()]{0,16})\\(/);\n      if (!match) {\n        return false;\n      }\n      state.cpp11RawStringDelim = match[1];\n      state.tokenize = tokenRawString;\n      return tokenRawString(stream, state);\n    }\n    // Unicode strings/chars.\n    if (stream.match(/^(?:u8|u|U|L)/)) {\n      if (stream.match(/^[\"']/, /* eat */ false)) {\n        return \"string\";\n      }\n      return false;\n    }\n    // Ignore this hook.\n    stream.next();\n    return false;\n  }\n\n  function cppLooksLikeConstructor(word) {\n    var lastTwo = /(\\w+)::~?(\\w+)$/.exec(word);\n    return lastTwo && lastTwo[1] == lastTwo[2];\n  }\n\n  // C#-style strings where \"\" escapes a quote.\n  function tokenAtString(stream, state) {\n    var next;\n    while ((next = stream.next()) != null) {\n      if (next == '\"' && !stream.eat('\"')) {\n        state.tokenize = null;\n        break;\n      }\n    }\n    return \"string\";\n  }\n\n  // C++11 raw string literal is <prefix>\"<delim>( anything )<delim>\", where\n  // <delim> can be a string up to 16 characters long.\n  function tokenRawString(stream, state) {\n    // Escape characters that have special regex meanings.\n    var delim = state.cpp11RawStringDelim.replace(/[^\\w\\s]/g, '\\\\$&');\n    var match = stream.match(new RegExp(\".*?\\\\)\" + delim + '\"'));\n    if (match)\n      state.tokenize = null;\n    else\n      stream.skipToEnd();\n    return \"string\";\n  }\n\n  function def(mimes, mode) {\n    if (typeof mimes == \"string\") mimes = [mimes];\n    var words = [];\n    function add(obj) {\n      if (obj) for (var prop in obj) if (obj.hasOwnProperty(prop))\n        words.push(prop);\n    }\n    add(mode.keywords);\n    add(mode.types);\n    add(mode.builtin);\n    add(mode.atoms);\n    if (words.length) {\n      mode.helperType = mimes[0];\n      CodeMirror.registerHelper(\"hintWords\", mimes[0], words);\n    }\n\n    for (var i = 0; i < mimes.length; ++i)\n      CodeMirror.defineMIME(mimes[i], mode);\n  }\n\n  def([\"text/x-csrc\", \"text/x-c\", \"text/x-chdr\"], {\n    name: \"clike\",\n    keywords: words(cKeywords),\n    types: cTypes,\n    blockKeywords: words(cBlockKeywords),\n    defKeywords: words(cDefKeywords),\n    typeFirstDefinitions: true,\n    atoms: words(\"NULL true false\"),\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n    },\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def([\"text/x-c++src\", \"text/x-c++hdr\"], {\n    name: \"clike\",\n    keywords: words(cKeywords + \" \" + cppKeywords),\n    types: cTypes,\n    blockKeywords: words(cBlockKeywords + \" class try catch\"),\n    defKeywords: words(cDefKeywords + \" class namespace\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false NULL nullptr\"),\n    dontIndentStatements: /^template$/,\n    isIdentifierChar: /[\\w\\$_~\\xa1-\\uffff]/,\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n      \"u\": cpp11StringHook,\n      \"U\": cpp11StringHook,\n      \"L\": cpp11StringHook,\n      \"R\": cpp11StringHook,\n      \"0\": cpp14Literal,\n      \"1\": cpp14Literal,\n      \"2\": cpp14Literal,\n      \"3\": cpp14Literal,\n      \"4\": cpp14Literal,\n      \"5\": cpp14Literal,\n      \"6\": cpp14Literal,\n      \"7\": cpp14Literal,\n      \"8\": cpp14Literal,\n      \"9\": cpp14Literal,\n      token: function(stream, state, style) {\n        if (style == \"variable\" && stream.peek() == \"(\" &&\n            (state.prevToken == \";\" || state.prevToken == null ||\n             state.prevToken == \"}\") &&\n            cppLooksLikeConstructor(stream.current()))\n          return \"def\";\n      }\n    },\n    namespaceSeparator: \"::\",\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-java\", {\n    name: \"clike\",\n    keywords: words(\"abstract assert break case catch class const continue default \" +\n                    \"do else enum extends final finally for goto if implements import \" +\n                    \"instanceof interface native new package private protected public \" +\n                    \"return static strictfp super switch synchronized this throw throws transient \" +\n                    \"try volatile while @interface\"),\n    types: words(\"var byte short int long float double boolean char void Boolean Byte Character Double Float \" +\n                 \"Integer Long Number Object Short String StringBuffer StringBuilder Void\"),\n    blockKeywords: words(\"catch class do else finally for if switch try while\"),\n    defKeywords: words(\"class interface enum @interface\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+\\.?\\d*|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n    hooks: {\n      \"@\": function(stream) {\n        // Don't match the @interface keyword.\n        if (stream.match('interface', false)) return false;\n\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '\"': function(stream, state) {\n        if (!stream.match(/\"\"$/)) return false;\n        state.tokenize = tokenTripleString;\n        return state.tokenize(stream, state);\n      }\n    },\n    modeProps: {fold: [\"brace\", \"import\"]}\n  });\n\n  def(\"text/x-csharp\", {\n    name: \"clike\",\n    keywords: words(\"abstract as async await base break case catch checked class const continue\" +\n                    \" default delegate do else enum event explicit extern finally fixed for\" +\n                    \" foreach goto if implicit in init interface internal is lock namespace new\" +\n                    \" operator out override params private protected public readonly record ref required return sealed\" +\n                    \" sizeof stackalloc static struct switch this throw try typeof unchecked\" +\n                    \" unsafe using virtual void volatile while add alias ascending descending dynamic from get\" +\n                    \" global group into join let orderby partial remove select set value var yield\"),\n    types: words(\"Action Boolean Byte Char DateTime DateTimeOffset Decimal Double Func\" +\n                 \" Guid Int16 Int32 Int64 Object SByte Single String Task TimeSpan UInt16 UInt32\" +\n                 \" UInt64 bool byte char decimal double short int long object\"  +\n                 \" sbyte float string ushort uint ulong\"),\n    blockKeywords: words(\"catch class do else finally for foreach if struct switch try while\"),\n    defKeywords: words(\"class interface namespace record struct var\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    hooks: {\n      \"@\": function(stream, state) {\n        if (stream.eat('\"')) {\n          state.tokenize = tokenAtString;\n          return tokenAtString(stream, state);\n        }\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      }\n    }\n  });\n\n  function tokenTripleString(stream, state) {\n    var escaped = false;\n    while (!stream.eol()) {\n      if (!escaped && stream.match('\"\"\"')) {\n        state.tokenize = null;\n        break;\n      }\n      escaped = stream.next() == \"\\\\\" && !escaped;\n    }\n    return \"string\";\n  }\n\n  function tokenNestedComment(depth) {\n    return function (stream, state) {\n      var ch\n      while (ch = stream.next()) {\n        if (ch == \"*\" && stream.eat(\"/\")) {\n          if (depth == 1) {\n            state.tokenize = null\n            break\n          } else {\n            state.tokenize = tokenNestedComment(depth - 1)\n            return state.tokenize(stream, state)\n          }\n        } else if (ch == \"/\" && stream.eat(\"*\")) {\n          state.tokenize = tokenNestedComment(depth + 1)\n          return state.tokenize(stream, state)\n        }\n      }\n      return \"comment\"\n    }\n  }\n\n  def(\"text/x-scala\", {\n    name: \"clike\",\n    keywords: words(\n      /* scala */\n      \"abstract case catch class def do else extends final finally for forSome if \" +\n      \"implicit import lazy match new null object override package private protected return \" +\n      \"sealed super this throw trait try type val var while with yield _ \" +\n\n      /* package scala */\n      \"assert assume require print println printf readLine readBoolean readByte readShort \" +\n      \"readChar readInt readLong readFloat readDouble\"\n    ),\n    types: words(\n      \"AnyVal App Application Array BufferedIterator BigDecimal BigInt Char Console Either \" +\n      \"Enumeration Equiv Error Exception Fractional Function IndexedSeq Int Integral Iterable \" +\n      \"Iterator List Map Numeric Nil NotNull Option Ordered Ordering PartialFunction PartialOrdering \" +\n      \"Product Proxy Range Responder Seq Serializable Set Specializable Stream StringBuilder \" +\n      \"StringContext Symbol Throwable Traversable TraversableOnce Tuple Unit Vector \" +\n\n      /* package java.lang */\n      \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void\"\n    ),\n    multiLineStrings: true,\n    blockKeywords: words(\"catch class enum do else finally for forSome if match switch try while\"),\n    defKeywords: words(\"class enum def object package trait type val var\"),\n    atoms: words(\"true false null\"),\n    indentStatements: false,\n    indentSwitch: false,\n    isOperatorChar: /[+\\-*&%=<>!?|\\/#:@]/,\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '\"': function(stream, state) {\n        if (!stream.match('\"\"')) return false;\n        state.tokenize = tokenTripleString;\n        return state.tokenize(stream, state);\n      },\n      \"'\": function(stream) {\n        if (stream.match(/^(\\\\[^'\\s]+|[^\\\\'])'/)) return \"string-2\"\n        stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n        return \"atom\";\n      },\n      \"=\": function(stream, state) {\n        var cx = state.context\n        if (cx.type == \"}\" && cx.align && stream.eat(\">\")) {\n          state.context = new Context(cx.indented, cx.column, cx.type, cx.info, null, cx.prev)\n          return \"operator\"\n        } else {\n          return false\n        }\n      },\n\n      \"/\": function(stream, state) {\n        if (!stream.eat(\"*\")) return false\n        state.tokenize = tokenNestedComment(1)\n        return state.tokenize(stream, state)\n      }\n    },\n    modeProps: {closeBrackets: {pairs: '()[]{}\"\"', triples: '\"'}}\n  });\n\n  function tokenKotlinString(tripleString){\n    return function (stream, state) {\n      var escaped = false, next, end = false;\n      while (!stream.eol()) {\n        if (!tripleString && !escaped && stream.match('\"') ) {end = true; break;}\n        if (tripleString && stream.match('\"\"\"')) {end = true; break;}\n        next = stream.next();\n        if(!escaped && next == \"$\" && stream.match('{'))\n          stream.skipTo(\"}\");\n        escaped = !escaped && next == \"\\\\\" && !tripleString;\n      }\n      if (end || !tripleString)\n        state.tokenize = null;\n      return \"string\";\n    }\n  }\n\n  def(\"text/x-kotlin\", {\n    name: \"clike\",\n    keywords: words(\n      /*keywords*/\n      \"package as typealias class interface this super val operator \" +\n      \"var fun for is in This throw return annotation \" +\n      \"break continue object if else while do try when !in !is as? \" +\n\n      /*soft keywords*/\n      \"file import where by get set abstract enum open inner override private public internal \" +\n      \"protected catch finally out final vararg reified dynamic companion constructor init \" +\n      \"sealed field property receiver param sparam lateinit data inline noinline tailrec \" +\n      \"external annotation crossinline const operator infix suspend actual expect setparam value\"\n    ),\n    types: words(\n      /* package java.lang */\n      \"Boolean Byte Character CharSequence Class ClassLoader Cloneable Comparable \" +\n      \"Compiler Double Exception Float Integer Long Math Number Object Package Pair Process \" +\n      \"Runtime Runnable SecurityManager Short StackTraceElement StrictMath String \" +\n      \"StringBuffer System Thread ThreadGroup ThreadLocal Throwable Triple Void Annotation Any BooleanArray \" +\n      \"ByteArray Char CharArray DeprecationLevel DoubleArray Enum FloatArray Function Int IntArray Lazy \" +\n      \"LazyThreadSafetyMode LongArray Nothing ShortArray Unit\"\n    ),\n    intendSwitch: false,\n    indentStatements: false,\n    multiLineStrings: true,\n    number: /^(?:0x[a-f\\d_]+|0b[01_]+|(?:[\\d_]+(\\.\\d+)?|\\.\\d+)(?:e[-+]?[\\d_]+)?)(u|ll?|l|f)?/i,\n    blockKeywords: words(\"catch class do else finally for if where try while enum\"),\n    defKeywords: words(\"class val var object interface fun\"),\n    atoms: words(\"true false null this\"),\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '*': function(_stream, state) {\n        return state.prevToken == '.' ? 'variable' : 'operator';\n      },\n      '\"': function(stream, state) {\n        state.tokenize = tokenKotlinString(stream.match('\"\"'));\n        return state.tokenize(stream, state);\n      },\n      \"/\": function(stream, state) {\n        if (!stream.eat(\"*\")) return false;\n        state.tokenize = tokenNestedComment(1);\n        return state.tokenize(stream, state)\n      },\n      indent: function(state, ctx, textAfter, indentUnit) {\n        var firstChar = textAfter && textAfter.charAt(0);\n        if ((state.prevToken == \"}\" || state.prevToken == \")\") && textAfter == \"\")\n          return state.indented;\n        if ((state.prevToken == \"operator\" && textAfter != \"}\" && state.context.type != \"}\") ||\n          state.prevToken == \"variable\" && firstChar == \".\" ||\n          (state.prevToken == \"}\" || state.prevToken == \")\") && firstChar == \".\")\n          return indentUnit * 2 + ctx.indented;\n        if (ctx.align && ctx.type == \"}\")\n          return ctx.indented + (state.context.type == (textAfter || \"\").charAt(0) ? 0 : indentUnit);\n      }\n    },\n    modeProps: {closeBrackets: {triples: '\"'}}\n  });\n\n  def([\"x-shader/x-vertex\", \"x-shader/x-fragment\"], {\n    name: \"clike\",\n    keywords: words(\"sampler1D sampler2D sampler3D samplerCube \" +\n                    \"sampler1DShadow sampler2DShadow \" +\n                    \"const attribute uniform varying \" +\n                    \"break continue discard return \" +\n                    \"for while do if else struct \" +\n                    \"in out inout\"),\n    types: words(\"float int bool void \" +\n                 \"vec2 vec3 vec4 ivec2 ivec3 ivec4 bvec2 bvec3 bvec4 \" +\n                 \"mat2 mat3 mat4\"),\n    blockKeywords: words(\"for while do if else struct\"),\n    builtin: words(\"radians degrees sin cos tan asin acos atan \" +\n                    \"pow exp log exp2 sqrt inversesqrt \" +\n                    \"abs sign floor ceil fract mod min max clamp mix step smoothstep \" +\n                    \"length distance dot cross normalize ftransform faceforward \" +\n                    \"reflect refract matrixCompMult \" +\n                    \"lessThan lessThanEqual greaterThan greaterThanEqual \" +\n                    \"equal notEqual any all not \" +\n                    \"texture1D texture1DProj texture1DLod texture1DProjLod \" +\n                    \"texture2D texture2DProj texture2DLod texture2DProjLod \" +\n                    \"texture3D texture3DProj texture3DLod texture3DProjLod \" +\n                    \"textureCube textureCubeLod \" +\n                    \"shadow1D shadow2D shadow1DProj shadow2DProj \" +\n                    \"shadow1DLod shadow2DLod shadow1DProjLod shadow2DProjLod \" +\n                    \"dFdx dFdy fwidth \" +\n                    \"noise1 noise2 noise3 noise4\"),\n    atoms: words(\"true false \" +\n                \"gl_FragColor gl_SecondaryColor gl_Normal gl_Vertex \" +\n                \"gl_MultiTexCoord0 gl_MultiTexCoord1 gl_MultiTexCoord2 gl_MultiTexCoord3 \" +\n                \"gl_MultiTexCoord4 gl_MultiTexCoord5 gl_MultiTexCoord6 gl_MultiTexCoord7 \" +\n                \"gl_FogCoord gl_PointCoord \" +\n                \"gl_Position gl_PointSize gl_ClipVertex \" +\n                \"gl_FrontColor gl_BackColor gl_FrontSecondaryColor gl_BackSecondaryColor \" +\n                \"gl_TexCoord gl_FogFragCoord \" +\n                \"gl_FragCoord gl_FrontFacing \" +\n                \"gl_FragData gl_FragDepth \" +\n                \"gl_ModelViewMatrix gl_ProjectionMatrix gl_ModelViewProjectionMatrix \" +\n                \"gl_TextureMatrix gl_NormalMatrix gl_ModelViewMatrixInverse \" +\n                \"gl_ProjectionMatrixInverse gl_ModelViewProjectionMatrixInverse \" +\n                \"gl_TextureMatrixTranspose gl_ModelViewMatrixInverseTranspose \" +\n                \"gl_ProjectionMatrixInverseTranspose \" +\n                \"gl_ModelViewProjectionMatrixInverseTranspose \" +\n                \"gl_TextureMatrixInverseTranspose \" +\n                \"gl_NormalScale gl_DepthRange gl_ClipPlane \" +\n                \"gl_Point gl_FrontMaterial gl_BackMaterial gl_LightSource gl_LightModel \" +\n                \"gl_FrontLightModelProduct gl_BackLightModelProduct \" +\n                \"gl_TextureColor gl_EyePlaneS gl_EyePlaneT gl_EyePlaneR gl_EyePlaneQ \" +\n                \"gl_FogParameters \" +\n                \"gl_MaxLights gl_MaxClipPlanes gl_MaxTextureUnits gl_MaxTextureCoords \" +\n                \"gl_MaxVertexAttribs gl_MaxVertexUniformComponents gl_MaxVaryingFloats \" +\n                \"gl_MaxVertexTextureImageUnits gl_MaxTextureImageUnits \" +\n                \"gl_MaxFragmentUniformComponents gl_MaxCombineTextureImageUnits \" +\n                \"gl_MaxDrawBuffers\"),\n    indentSwitch: false,\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-nesc\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \" as atomic async call command component components configuration event generic \" +\n                    \"implementation includes interface module new norace nx_struct nx_union post provides \" +\n                    \"signal task uses abstract extends\"),\n    types: cTypes,\n    blockKeywords: words(cBlockKeywords),\n    atoms: words(\"null true false\"),\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-objectivec\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \" \" + objCKeywords),\n    types: objCTypes,\n    builtin: words(objCBuiltins),\n    blockKeywords: words(cBlockKeywords + \" @synthesize @try @catch @finally @autoreleasepool @synchronized\"),\n    defKeywords: words(cDefKeywords + \" @interface @implementation @protocol @class\"),\n    dontIndentStatements: /^@.*$/,\n    typeFirstDefinitions: true,\n    atoms: words(\"YES NO NULL Nil nil true false nullptr\"),\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n    },\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-objectivec++\", {\n    name: \"clike\",\n    keywords: words(cKeywords + \" \" + objCKeywords + \" \" + cppKeywords),\n    types: objCTypes,\n    builtin: words(objCBuiltins),\n    blockKeywords: words(cBlockKeywords + \" @synthesize @try @catch @finally @autoreleasepool @synchronized class try catch\"),\n    defKeywords: words(cDefKeywords + \" @interface @implementation @protocol @class class namespace\"),\n    dontIndentStatements: /^@.*$|^template$/,\n    typeFirstDefinitions: true,\n    atoms: words(\"YES NO NULL Nil nil true false nullptr\"),\n    isReservedIdentifier: cIsReservedIdentifier,\n    hooks: {\n      \"#\": cppHook,\n      \"*\": pointerHook,\n      \"u\": cpp11StringHook,\n      \"U\": cpp11StringHook,\n      \"L\": cpp11StringHook,\n      \"R\": cpp11StringHook,\n      \"0\": cpp14Literal,\n      \"1\": cpp14Literal,\n      \"2\": cpp14Literal,\n      \"3\": cpp14Literal,\n      \"4\": cpp14Literal,\n      \"5\": cpp14Literal,\n      \"6\": cpp14Literal,\n      \"7\": cpp14Literal,\n      \"8\": cpp14Literal,\n      \"9\": cpp14Literal,\n      token: function(stream, state, style) {\n        if (style == \"variable\" && stream.peek() == \"(\" &&\n            (state.prevToken == \";\" || state.prevToken == null ||\n             state.prevToken == \"}\") &&\n            cppLooksLikeConstructor(stream.current()))\n          return \"def\";\n      }\n    },\n    namespaceSeparator: \"::\",\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  def(\"text/x-squirrel\", {\n    name: \"clike\",\n    keywords: words(\"base break clone continue const default delete enum extends function in class\" +\n                    \" foreach local resume return this throw typeof yield constructor instanceof static\"),\n    types: cTypes,\n    blockKeywords: words(\"case catch class else for foreach if switch try while\"),\n    defKeywords: words(\"function local class\"),\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null\"),\n    hooks: {\"#\": cppHook},\n    modeProps: {fold: [\"brace\", \"include\"]}\n  });\n\n  // Ceylon Strings need to deal with interpolation\n  var stringTokenizer = null;\n  function tokenCeylonString(type) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while (!stream.eol()) {\n        if (!escaped && stream.match('\"') &&\n              (type == \"single\" || stream.match('\"\"'))) {\n          end = true;\n          break;\n        }\n        if (!escaped && stream.match('``')) {\n          stringTokenizer = tokenCeylonString(type);\n          end = true;\n          break;\n        }\n        next = stream.next();\n        escaped = type == \"single\" && !escaped && next == \"\\\\\";\n      }\n      if (end)\n          state.tokenize = null;\n      return \"string\";\n    }\n  }\n\n  def(\"text/x-ceylon\", {\n    name: \"clike\",\n    keywords: words(\"abstracts alias assembly assert assign break case catch class continue dynamic else\" +\n                    \" exists extends finally for function given if import in interface is let module new\" +\n                    \" nonempty object of out outer package return satisfies super switch then this throw\" +\n                    \" try value void while\"),\n    types: function(word) {\n        // In Ceylon all identifiers that start with an uppercase are types\n        var first = word.charAt(0);\n        return (first === first.toUpperCase() && first !== first.toLowerCase());\n    },\n    blockKeywords: words(\"case catch class dynamic else finally for function if interface module new object switch try while\"),\n    defKeywords: words(\"class dynamic function interface module object package value\"),\n    builtin: words(\"abstract actual aliased annotation by default deprecated doc final formal late license\" +\n                   \" native optional sealed see serializable shared suppressWarnings tagged throws variable\"),\n    isPunctuationChar: /[\\[\\]{}\\(\\),;\\:\\.`]/,\n    isOperatorChar: /[+\\-*&%=<>!?|^~:\\/]/,\n    numberStart: /[\\d#$]/,\n    number: /^(?:#[\\da-fA-F_]+|\\$[01_]+|[\\d_]+[kMGTPmunpf]?|[\\d_]+\\.[\\d_]+(?:[eE][-+]?\\d+|[kMGTPmunpf]|)|)/i,\n    multiLineStrings: true,\n    typeFirstDefinitions: true,\n    atoms: words(\"true false null larger smaller equal empty finished\"),\n    indentSwitch: false,\n    styleDefs: false,\n    hooks: {\n      \"@\": function(stream) {\n        stream.eatWhile(/[\\w\\$_]/);\n        return \"meta\";\n      },\n      '\"': function(stream, state) {\n          state.tokenize = tokenCeylonString(stream.match('\"\"') ? \"triple\" : \"single\");\n          return state.tokenize(stream, state);\n        },\n      '`': function(stream, state) {\n          if (!stringTokenizer || !stream.match('`')) return false;\n          state.tokenize = stringTokenizer;\n          stringTokenizer = null;\n          return state.tokenize(stream, state);\n        },\n      \"'\": function(stream) {\n        stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n        return \"atom\";\n      },\n      token: function(_stream, state, style) {\n          if ((style == \"variable\" || style == \"type\") &&\n              state.prevToken == \".\") {\n            return \"variable-2\";\n          }\n        }\n    },\n    modeProps: {\n        fold: [\"brace\", \"import\"],\n        closeBrackets: {triples: '\"'}\n    }\n  });\n\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}