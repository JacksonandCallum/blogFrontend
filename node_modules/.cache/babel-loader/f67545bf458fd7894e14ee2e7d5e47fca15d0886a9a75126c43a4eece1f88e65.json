{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"go\", function (config) {\n    var indentUnit = config.indentUnit;\n    var keywords = {\n      \"break\": true,\n      \"case\": true,\n      \"chan\": true,\n      \"const\": true,\n      \"continue\": true,\n      \"default\": true,\n      \"defer\": true,\n      \"else\": true,\n      \"fallthrough\": true,\n      \"for\": true,\n      \"func\": true,\n      \"go\": true,\n      \"goto\": true,\n      \"if\": true,\n      \"import\": true,\n      \"interface\": true,\n      \"map\": true,\n      \"package\": true,\n      \"range\": true,\n      \"return\": true,\n      \"select\": true,\n      \"struct\": true,\n      \"switch\": true,\n      \"type\": true,\n      \"var\": true,\n      \"bool\": true,\n      \"byte\": true,\n      \"complex64\": true,\n      \"complex128\": true,\n      \"float32\": true,\n      \"float64\": true,\n      \"int8\": true,\n      \"int16\": true,\n      \"int32\": true,\n      \"int64\": true,\n      \"string\": true,\n      \"uint8\": true,\n      \"uint16\": true,\n      \"uint32\": true,\n      \"uint64\": true,\n      \"int\": true,\n      \"uint\": true,\n      \"uintptr\": true,\n      \"error\": true,\n      \"rune\": true,\n      \"any\": true,\n      \"comparable\": true\n    };\n    var atoms = {\n      \"true\": true,\n      \"false\": true,\n      \"iota\": true,\n      \"nil\": true,\n      \"append\": true,\n      \"cap\": true,\n      \"close\": true,\n      \"complex\": true,\n      \"copy\": true,\n      \"delete\": true,\n      \"imag\": true,\n      \"len\": true,\n      \"make\": true,\n      \"new\": true,\n      \"panic\": true,\n      \"print\": true,\n      \"println\": true,\n      \"real\": true,\n      \"recover\": true\n    };\n    var isOperatorChar = /[+\\-*&^%:=<>!|\\/]/;\n    var curPunc;\n    function tokenBase(stream, state) {\n      var ch = stream.next();\n      if (ch == '\"' || ch == \"'\" || ch == \"`\") {\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      }\n      if (/[\\d\\.]/.test(ch)) {\n        if (ch == \".\") {\n          stream.match(/^[0-9_]+([eE][\\-+]?[0-9_]+)?/);\n        } else if (ch == \"0\") {\n          stream.match(/^[xX][0-9a-fA-F_]+/) || stream.match(/^[0-7_]+/);\n        } else {\n          stream.match(/^[0-9_]*\\.?[0-9_]*([eE][\\-+]?[0-9_]+)?/);\n        }\n        return \"number\";\n      }\n      if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n        curPunc = ch;\n        return null;\n      }\n      if (ch == \"/\") {\n        if (stream.eat(\"*\")) {\n          state.tokenize = tokenComment;\n          return tokenComment(stream, state);\n        }\n        if (stream.eat(\"/\")) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n      if (isOperatorChar.test(ch)) {\n        stream.eatWhile(isOperatorChar);\n        return \"operator\";\n      }\n      stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n      var cur = stream.current();\n      if (keywords.propertyIsEnumerable(cur)) {\n        if (cur == \"case\" || cur == \"default\") curPunc = \"case\";\n        return \"keyword\";\n      }\n      if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n      return \"variable\";\n    }\n    function tokenString(quote) {\n      return function (stream, state) {\n        var escaped = false,\n          next,\n          end = false;\n        while ((next = stream.next()) != null) {\n          if (next == quote && !escaped) {\n            end = true;\n            break;\n          }\n          escaped = !escaped && quote != \"`\" && next == \"\\\\\";\n        }\n        if (end || !(escaped || quote == \"`\")) state.tokenize = tokenBase;\n        return \"string\";\n      };\n    }\n    function tokenComment(stream, state) {\n      var maybeEnd = false,\n        ch;\n      while (ch = stream.next()) {\n        if (ch == \"/\" && maybeEnd) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        maybeEnd = ch == \"*\";\n      }\n      return \"comment\";\n    }\n    function Context(indented, column, type, align, prev) {\n      this.indented = indented;\n      this.column = column;\n      this.type = type;\n      this.align = align;\n      this.prev = prev;\n    }\n    function pushContext(state, col, type) {\n      return state.context = new Context(state.indented, col, type, null, state.context);\n    }\n    function popContext(state) {\n      if (!state.context.prev) return;\n      var t = state.context.type;\n      if (t == \")\" || t == \"]\" || t == \"}\") state.indented = state.context.indented;\n      return state.context = state.context.prev;\n    }\n\n    // Interface\n\n    return {\n      startState: function (basecolumn) {\n        return {\n          tokenize: null,\n          context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n          indented: 0,\n          startOfLine: true\n        };\n      },\n      token: function (stream, state) {\n        var ctx = state.context;\n        if (stream.sol()) {\n          if (ctx.align == null) ctx.align = false;\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          if (ctx.type == \"case\") ctx.type = \"}\";\n        }\n        if (stream.eatSpace()) return null;\n        curPunc = null;\n        var style = (state.tokenize || tokenBase)(stream, state);\n        if (style == \"comment\") return style;\n        if (ctx.align == null) ctx.align = true;\n        if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");else if (curPunc == \"case\") ctx.type = \"case\";else if (curPunc == \"}\" && ctx.type == \"}\") popContext(state);else if (curPunc == ctx.type) popContext(state);\n        state.startOfLine = false;\n        return style;\n      },\n      indent: function (state, textAfter) {\n        if (state.tokenize != tokenBase && state.tokenize != null) return CodeMirror.Pass;\n        var ctx = state.context,\n          firstChar = textAfter && textAfter.charAt(0);\n        if (ctx.type == \"case\" && /^(?:case|default)\\b/.test(textAfter)) {\n          state.context.type = \"}\";\n          return ctx.indented;\n        }\n        var closing = firstChar == ctx.type;\n        if (ctx.align) return ctx.column + (closing ? 0 : 1);else return ctx.indented + (closing ? 0 : indentUnit);\n      },\n      electricChars: \"{}):\",\n      closeBrackets: \"()[]{}''\\\"\\\"``\",\n      fold: \"brace\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      lineComment: \"//\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-go\", \"go\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","indentUnit","keywords","atoms","isOperatorChar","curPunc","tokenBase","stream","state","ch","next","tokenize","tokenString","test","match","eat","tokenComment","skipToEnd","eatWhile","cur","current","propertyIsEnumerable","quote","escaped","end","maybeEnd","Context","indented","column","type","align","prev","pushContext","col","context","popContext","t","startState","basecolumn","startOfLine","token","ctx","sol","indentation","eatSpace","style","indent","textAfter","Pass","firstChar","charAt","closing","electricChars","closeBrackets","fold","blockCommentStart","blockCommentEnd","lineComment","defineMIME"],"sources":["D:/Java_Projects/MYBLOG-备份/frontend/blog-frontend/node_modules/codemirror/mode/go/go.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"go\", function(config) {\n  var indentUnit = config.indentUnit;\n\n  var keywords = {\n    \"break\":true, \"case\":true, \"chan\":true, \"const\":true, \"continue\":true,\n    \"default\":true, \"defer\":true, \"else\":true, \"fallthrough\":true, \"for\":true,\n    \"func\":true, \"go\":true, \"goto\":true, \"if\":true, \"import\":true,\n    \"interface\":true, \"map\":true, \"package\":true, \"range\":true, \"return\":true,\n    \"select\":true, \"struct\":true, \"switch\":true, \"type\":true, \"var\":true,\n    \"bool\":true, \"byte\":true, \"complex64\":true, \"complex128\":true,\n    \"float32\":true, \"float64\":true, \"int8\":true, \"int16\":true, \"int32\":true,\n    \"int64\":true, \"string\":true, \"uint8\":true, \"uint16\":true, \"uint32\":true,\n    \"uint64\":true, \"int\":true, \"uint\":true, \"uintptr\":true, \"error\": true,\n    \"rune\":true, \"any\":true, \"comparable\":true\n  };\n\n  var atoms = {\n    \"true\":true, \"false\":true, \"iota\":true, \"nil\":true, \"append\":true,\n    \"cap\":true, \"close\":true, \"complex\":true, \"copy\":true, \"delete\":true, \"imag\":true,\n    \"len\":true, \"make\":true, \"new\":true, \"panic\":true, \"print\":true,\n    \"println\":true, \"real\":true, \"recover\":true\n  };\n\n  var isOperatorChar = /[+\\-*&^%:=<>!|\\/]/;\n\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\" || ch == \"`\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (/[\\d\\.]/.test(ch)) {\n      if (ch == \".\") {\n        stream.match(/^[0-9_]+([eE][\\-+]?[0-9_]+)?/);\n      } else if (ch == \"0\") {\n        stream.match(/^[xX][0-9a-fA-F_]+/) || stream.match(/^[0-7_]+/);\n      } else {\n        stream.match(/^[0-9_]*\\.?[0-9_]*([eE][\\-+]?[0-9_]+)?/);\n      }\n      return \"number\";\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\n    var cur = stream.current();\n    if (keywords.propertyIsEnumerable(cur)) {\n      if (cur == \"case\" || cur == \"default\") curPunc = \"case\";\n      return \"keyword\";\n    }\n    if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && quote != \"`\" && next == \"\\\\\";\n      }\n      if (end || !(escaped || quote == \"`\"))\n        state.tokenize = tokenBase;\n      return \"string\";\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    return state.context = new Context(state.indented, col, type, null, state.context);\n  }\n  function popContext(state) {\n    if (!state.context.prev) return;\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n        if (ctx.type == \"case\") ctx.type = \"}\";\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"case\") ctx.type = \"case\";\n      else if (curPunc == \"}\" && ctx.type == \"}\") popContext(state);\n      else if (curPunc == ctx.type) popContext(state);\n      state.startOfLine = false;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null) return CodeMirror.Pass;\n      var ctx = state.context, firstChar = textAfter && textAfter.charAt(0);\n      if (ctx.type == \"case\" && /^(?:case|default)\\b/.test(textAfter)) {\n        state.context.type = \"}\";\n        return ctx.indented;\n      }\n      var closing = firstChar == ctx.type;\n      if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"{}):\",\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n    fold: \"brace\",\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-go\", \"go\");\n\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}