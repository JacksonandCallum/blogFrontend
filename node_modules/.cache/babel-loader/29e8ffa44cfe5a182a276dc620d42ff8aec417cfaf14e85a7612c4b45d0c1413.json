{"ast":null,"code":"import dropdownSelect from \"../components/dropdown-select\";\nimport extendContent from \"../components/extend-content\";\nimport config from \"../config/index\";\nimport lazyLoad from \"../directives/lazy-load\";\nconst temp = src => {\n  return `\n    <div class=\"laytEditor-emoticon\" style=\"display: flex; justify-content: center;padding:20px 0;\">\n      <div\n        class=\"laytEditor-emoticon-img\"\n        style=\"\n          max-width: 120px;\n          max-height: 120px;\n          min-width: 60px;\n          min-height: 60px;\n          background: #f5f5f5;\n          padding: 10px;\n          display: flex;\n          border-radius:3px;\n        \"\n      >\n        <img\n          style=\"max-width: 100%; max-height: 100%; -webkit-user-drag: none\"\n          src=\"${src}\"\n          alt=\"\"\n        />\n      </div>\n    </div>\n    `;\n};\nexport default {\n  name: \"WorkspaceJsonTitle\",\n  components: {\n    dropdownSelect,\n    extendContent\n  },\n  directives: {\n    lazyLoad\n  },\n  data() {\n    return {\n      value: \"\",\n      show: false,\n      isLoad: false\n    };\n  },\n  computed: {\n    semoticonList() {\n      return config.maxEmoticon;\n    }\n  },\n  watch: {\n    show() {\n      if (this.show) {\n        this.$nextTick(() => {\n          this.isLoad = true;\n        });\n        setTimeout(() => this.isLoad = true, 100);\n      }\n    }\n  },\n  methods: {\n    selectEmoticon(item) {\n      this.$emit(\"change\", {\n        type: \"emoticon\",\n        content: {\n          src: item.src,\n          template: temp(item.src)\n        }\n      });\n      this.show = false;\n    }\n  }\n};","map":{"version":3,"names":["dropdownSelect","extendContent","config","lazyLoad","temp","src","name","components","directives","data","value","show","isLoad","computed","semoticonList","maxEmoticon","watch","$nextTick","setTimeout","methods","selectEmoticon","item","$emit","type","content","template"],"sources":["node_modules/vue2-lay-editor/tools/emoticonBar.vue"],"sourcesContent":["<template>\n  <div class=\"extend-bar\">\n    <dropdown-select v-model=\"show\" title=\"表情包\">\n      <div class=\"emoticon\">\n        <div v-if=\"isLoad\" class=\"emoticon-list\">\n          <div\n            class=\"item\"\n            @click=\"selectEmoticon(item)\"\n            v-for=\"(item, index) in semoticonList\"\n            :key=\"index\"\n          >\n            <img v-lazy-load=\"item.src\" alt=\"\" />\n          </div>\n        </div>\n      </div>\n    </dropdown-select>\n  </div>\n</template>\n\n<script>\nimport dropdownSelect from \"../components/dropdown-select\";\nimport extendContent from \"../components/extend-content\";\nimport config from \"../config/index\";\nimport lazyLoad from \"../directives/lazy-load\";\n\nconst temp = (src) => {\n  return `\n    <div class=\"laytEditor-emoticon\" style=\"display: flex; justify-content: center;padding:20px 0;\">\n      <div\n        class=\"laytEditor-emoticon-img\"\n        style=\"\n          max-width: 120px;\n          max-height: 120px;\n          min-width: 60px;\n          min-height: 60px;\n          background: #f5f5f5;\n          padding: 10px;\n          display: flex;\n          border-radius:3px;\n        \"\n      >\n        <img\n          style=\"max-width: 100%; max-height: 100%; -webkit-user-drag: none\"\n          src=\"${src}\"\n          alt=\"\"\n        />\n      </div>\n    </div>\n    `;\n};\nexport default {\n  name: \"WorkspaceJsonTitle\",\n  components: {\n    dropdownSelect,\n    extendContent,\n  },\n  directives: {\n    lazyLoad,\n  },\n  data() {\n    return {\n      value: \"\",\n      show: false,\n      isLoad: false,\n    };\n  },\n\n  computed: {\n    semoticonList() {\n      return config.maxEmoticon;\n    },\n  },\n  watch: {\n    show() {\n      if (this.show) {\n        this.$nextTick(() => {\n          this.isLoad = true;\n        });\n        setTimeout(() => (this.isLoad = true), 100);\n      }\n    },\n  },\n\n  methods: {\n    selectEmoticon(item) {\n      this.$emit(\"change\", {\n        type: \"emoticon\",\n        content: {\n          src: item.src,\n          template: temp(item.src),\n        },\n      });\n      this.show = false;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.emoticon {\n  width: 250px;\n  height: 200px;\n  background: #fff;\n  box-shadow: 0 2px 12px 0 rgba(97, 97, 97, 0.1);\n  padding: 10px;\n  margin-top: 10px;\n}\n\n.emoticon .emoticon-list {\n  height: 200px;\n  display: flex;\n  flex-wrap: wrap;\n  align-content: baseline;\n  overflow: auto;\n  position: relative;\n}\n.emoticon .item {\n  width: 50px;\n  height: 50px;\n  margin: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.emoticon .item:hover {\n  background: #eee;\n}\n\n.emoticon .item img {\n  width: 40px;\n  height: 40px;\n}\n\n/*滚动条样式*/\n.emoticon .emoticon-list::-webkit-scrollbar {\n  width: 4px;\n  /*height: 4px;*/\n}\n.emoticon .emoticon-list::-webkit-scrollbar-thumb {\n  border-radius: 10px;\n  background: rgb(224, 224, 224);\n}\n.emoticon .emoticon-list::-webkit-scrollbar-track {\n  border-radius: 0;\n  background: #eee;\n}\n</style>\n"],"mappings":"AAoBA,OAAAA,cAAA;AACA,OAAAC,aAAA;AACA,OAAAC,MAAA;AACA,OAAAC,QAAA;AAEA,MAAAC,IAAA,GAAAC,GAAA;EACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAAA,GAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACAC,IAAA;EACAC,UAAA;IACAP,cAAA;IACAC;EACA;EACAO,UAAA;IACAL;EACA;EACAM,KAAA;IACA;MACAC,KAAA;MACAC,IAAA;MACAC,MAAA;IACA;EACA;EAEAC,QAAA;IACAC,cAAA;MACA,OAAAZ,MAAA,CAAAa,WAAA;IACA;EACA;EACAC,KAAA;IACAL,KAAA;MACA,SAAAA,IAAA;QACA,KAAAM,SAAA;UACA,KAAAL,MAAA;QACA;QACAM,UAAA,YAAAN,MAAA;MACA;IACA;EACA;EAEAO,OAAA;IACAC,eAAAC,IAAA;MACA,KAAAC,KAAA;QACAC,IAAA;QACAC,OAAA;UACAnB,GAAA,EAAAgB,IAAA,CAAAhB,GAAA;UACAoB,QAAA,EAAArB,IAAA,CAAAiB,IAAA,CAAAhB,GAAA;QACA;MACA;MACA,KAAAM,IAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}