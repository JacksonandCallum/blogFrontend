{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport mapData from \"./map\";\nexport default {\n  name: \"area-map\",\n  data() {\n    return {\n      chinaJson: [],\n      areaVisitData: {},\n      max: 200\n    };\n  },\n  mounted() {\n    // 在通过mounted调用即可\n    this.$nextTick(() => {\n      this.getAreaVisitData();\n    });\n  },\n  methods: {\n    // 获取省份访问数据\n    getAreaVisitData() {\n      this.$request.get(\"/user/selectAll\").then(res => {\n        if (res.code === \"200\") {\n          const data = res.data;\n          // 地图数据\n          this.chinaJson = mapData;\n          // 省份数据\n          let province = [];\n          this.chinaJson.features.forEach(item => {\n            data.forEach(user => {\n              const ipInfo = user.ip;\n              if (ipInfo) {\n                // 检查 ipInfo 是否存在\n                const addressMatch = ipInfo.match(/address=([^,]*)/);\n                if (addressMatch) {\n                  const addressParts = addressMatch[1].split('|');\n                  const provinceName = addressParts[2]; // 假设省份名称是第三部分\n                  if (item.properties.name.indexOf(provinceName) !== -1) {\n                    let curProvince = province.find(p => p.name === item.properties.name);\n                    if (curProvince) {\n                      curProvince.value++;\n                    } else {\n                      province.push({\n                        name: item.properties.name,\n                        value: 1\n                      });\n                    }\n                    // 重新计算最大值\n                    this.max = Math.max(this.max, curProvince ? curProvince.value : 1);\n                  }\n                }\n              }\n            });\n          });\n          this.areaVisitData = province;\n          this.echartsInit();\n        } else {\n          console.error(\"Failed to fetch data: \", res.msg);\n        }\n      }).catch(err => {\n        console.error(\"Request failed: \", err);\n      });\n    },\n    //初始化echarts\n    // 文档 echarts https://echarts.apache.org/zh/option.html#series-map.emphasis.label\n    async echartsInit() {\n      // 省份访问数据\n      let data = this.areaVisitData;\n      console.log(data);\n      //柱形图\n      const echart = this.$echarts.init(document.getElementById(\"area-map\"));\n      this.$echarts.registerMap(\"chinaMap\", this.chinaJson);\n      echart.setOption({\n        title: {\n          left: \"right\"\n        },\n        tooltip: {\n          trigger: \"item\",\n          formatter(params) {\n            return `${params.name}<br/>${params.value || 0}访问次数`;\n          }\n        },\n        backgroundColor: \"#fff\",\n        // 设置地图的背景颜色\n        visualMap: {\n          top: 0,\n          orient: \"horizontal\",\n          type: \"piecewise\",\n          formatter: function (value, value2) {\n            return value.toFixed(0) + \"-\" + value2.toFixed(0); // 范围标签显示内容。\n          },\n          min: 0,\n          max: this.max,\n          textGap: 5,\n          itemGap: 30,\n          inRange: {\n            color: [\"#A3E80D\", \"#FAC858\", \"#B289EB\", \"#8089EF\", \"#EF3B34\"]\n          }\n        },\n        series: [{\n          type: \"map\",\n          map: \"chinaMap\",\n          zoom: 1.4,\n          //设置初始化的缩放比例\n          center: [107.97, 37.71],\n          data: this.areaVisitData,\n          //配置散点的坐标数据\n          geoIndex: 0,\n          // 默认样式\n          itemStyle: {\n            borderColor: \"#FFF\",\n            areaColor: \"#F5F5F5\",\n            borderWidth: 1.5\n          },\n          // 高亮下面的样式\n          emphasis: {\n            label: {\n              color: \"#333\",\n              fontWeight: 500\n            },\n            itemStyle: {\n              borderColor: \"#FFF\",\n              areaColor: \"#9FD7DD\"\n            }\n          }\n        }]\n      });\n      window.addEventListener(\"resize\", () => {\n        echart.resize();\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapData","name","data","chinaJson","areaVisitData","max","mounted","$nextTick","getAreaVisitData","methods","$request","get","then","res","code","province","features","forEach","item","user","ipInfo","ip","addressMatch","match","addressParts","split","provinceName","properties","indexOf","curProvince","find","p","value","push","Math","echartsInit","console","error","msg","catch","err","log","echart","$echarts","init","document","getElementById","registerMap","setOption","title","left","tooltip","trigger","formatter","params","backgroundColor","visualMap","top","orient","type","value2","toFixed","min","textGap","itemGap","inRange","color","series","map","zoom","center","geoIndex","itemStyle","borderColor","areaColor","borderWidth","emphasis","label","fontWeight","window","addEventListener","resize"],"sources":["src/components/dataStatistics/area-map.vue"],"sourcesContent":["<template>\n  <div style=\"width: 100; height: 100%\">\n    <div id=\"area-map\"></div>\n  </div>\n</template>\n\n<script>\nimport mapData from \"./map\";\nexport default {\n  name: \"area-map\",\n  data() {\n    return {\n      chinaJson: [],\n      areaVisitData: {},\n      max: 200,\n    };\n  },\n\n  mounted() {\n    // 在通过mounted调用即可\n    this.$nextTick(() => {\n      this.getAreaVisitData();\n    });\n  },\n\n  methods: {\n    // 获取省份访问数据\n    getAreaVisitData() {\n      this.$request.get(\"/user/selectAll\").then(res => {\n        if (res.code === \"200\") {\n          const data = res.data;\n          // 地图数据\n          this.chinaJson = mapData;\n          // 省份数据\n          let province = [];\n          this.chinaJson.features.forEach((item) => {\n            data.forEach((user) => {\n              const ipInfo = user.ip;\n              if (ipInfo) { // 检查 ipInfo 是否存在\n                const addressMatch = ipInfo.match(/address=([^,]*)/);\n                if (addressMatch) {\n                  const addressParts = addressMatch[1].split('|');\n                  const provinceName = addressParts[2]; // 假设省份名称是第三部分\n                  if (item.properties.name.indexOf(provinceName) !== -1) {\n                    let curProvince = province.find(p => p.name === item.properties.name);\n                    if (curProvince) {\n                      curProvince.value++;\n                    } else {\n                      province.push({\n                        name: item.properties.name,\n                        value: 1,\n                      });\n                    }\n                    // 重新计算最大值\n                    this.max = Math.max(this.max, curProvince ? curProvince.value : 1);\n                  }\n                }\n              }\n            });\n          });\n          this.areaVisitData = province;\n          this.echartsInit();\n        } else {\n          console.error(\"Failed to fetch data: \", res.msg);\n        }\n      }).catch(err => {\n        console.error(\"Request failed: \", err);\n      });\n    },\n\n    //初始化echarts\n    // 文档 echarts https://echarts.apache.org/zh/option.html#series-map.emphasis.label\n    async echartsInit() {\n      // 省份访问数据\n      let data = this.areaVisitData;\n      console.log(data)\n      //柱形图\n      const echart = this.$echarts.init(document.getElementById(\"area-map\"));\n      this.$echarts.registerMap(\"chinaMap\", this.chinaJson);\n\n      echart.setOption({\n        title: {\n          left: \"right\",\n        },\n        tooltip: {\n          trigger: \"item\",\n          formatter(params) {\n            return `${params.name}<br/>${params.value || 0}访问次数`;\n          },\n        },\n        backgroundColor: \"#fff\", // 设置地图的背景颜色\n        visualMap: {\n          top: 0,\n          orient: \"horizontal\",\n          type: \"piecewise\",\n          formatter: function (value, value2) {\n            return value.toFixed(0) + \"-\" + value2.toFixed(0); // 范围标签显示内容。\n          },\n          min: 0,\n          max: this.max,\n          textGap: 5,\n          itemGap: 30,\n          inRange: {\n            color: [\"#A3E80D\", \"#FAC858\", \"#B289EB\", \"#8089EF\", \"#EF3B34\"],\n          },\n        },\n        series: [\n          {\n            type: \"map\",\n            map: \"chinaMap\",\n            zoom: 1.4, //设置初始化的缩放比例\n            center: [107.97, 37.71],\n            data: this.areaVisitData, //配置散点的坐标数据\n            geoIndex: 0,\n            // 默认样式\n            itemStyle: {\n              borderColor: \"#FFF\",\n              areaColor: \"#F5F5F5\",\n              borderWidth: 1.5,\n            },\n            // 高亮下面的样式\n            emphasis: {\n              label: {\n                color: \"#333\",\n                fontWeight: 500,\n              },\n              itemStyle: {\n                borderColor: \"#FFF\",\n                areaColor: \"#9FD7DD\",\n              },\n            },\n          },\n        ],\n      });\n      window.addEventListener(\"resize\", () => {\n        echart.resize();\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n#area-map {\n  width: 100%;\n  height: 100%;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}