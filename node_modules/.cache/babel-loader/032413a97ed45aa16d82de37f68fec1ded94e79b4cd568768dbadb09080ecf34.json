{"ast":null,"code":"const twoPoem = () => import(\"@/components/twoPoem.vue\");\nconst proTag = () => import(\"@/components/proTag\");\nconst articleList = () => import(\"@/components/articleList\");\nconst myFooter = () => import(\"@/components/myFooter.vue\");\nexport default {\n  components: {\n    twoPoem,\n    proTag,\n    articleList,\n    myFooter\n  },\n  data() {\n    return {\n      sortId: this.$route.query.sortId,\n      labelId: this.$route.query.labelId,\n      sort: null,\n      pagination: {\n        current: 1,\n        size: 10,\n        total: 0,\n        searchKey: \"\",\n        sortId: this.$route.query.sortId,\n        labelId: this.$route.query.labelId\n      },\n      articles: []\n    };\n  },\n  computed: {},\n  watch: {\n    $route() {\n      this.pagination = {\n        current: 1,\n        size: 10,\n        total: 0,\n        searchKey: \"\",\n        sortId: this.$route.query.sortId,\n        labelId: this.$route.query.labelId\n      };\n      this.articles.splice(0, this.articles.length);\n      this.sortId = this.$route.query.sortId;\n      this.labelId = this.$route.query.labelId;\n      this.getSort();\n      this.getArticles();\n    }\n  },\n  created() {\n    this.getSort();\n    this.getArticles();\n  },\n  mounted() {},\n  methods: {\n    pageArticles() {\n      this.pagination.current = this.pagination.current + 1;\n      this.getArticles();\n    },\n    getSort() {\n      let sortInfo = this.$store.state.sortInfo;\n      if (!this.$common.isEmpty(sortInfo)) {\n        let sortArray = sortInfo.filter(f => {\n          return f.id === parseInt(this.sortId);\n        });\n        if (!this.$common.isEmpty(sortArray)) {\n          this.sort = sortArray[0];\n        }\n      }\n    },\n    listArticle(label) {\n      this.labelId = label.id;\n      this.pagination = {\n        current: 1,\n        size: 10,\n        total: 0,\n        searchKey: \"\",\n        sortId: this.$route.query.sortId,\n        labelId: label.id\n      };\n      this.articles.splice(0, this.articles.length);\n      this.$nextTick(() => {\n        this.getArticles();\n      });\n    },\n    getArticles() {\n      this.$http.post(this.$constant.baseURL + \"/article/listArticle\", this.pagination).then(res => {\n        if (!this.$common.isEmpty(res.data)) {\n          this.articles = this.articles.concat(res.data.records);\n          this.pagination.total = res.data.total;\n        }\n      }).catch(error => {\n        this.$message({\n          message: error.message,\n          type: \"error\"\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["twoPoem","proTag","articleList","myFooter","components","data","sortId","$route","query","labelId","sort","pagination","current","size","total","searchKey","articles","computed","watch","splice","length","getSort","getArticles","created","mounted","methods","pageArticles","sortInfo","$store","state","$common","isEmpty","sortArray","filter","f","id","parseInt","listArticle","label","$nextTick","$http","post","$constant","baseURL","then","res","concat","records","catch","error","$message","message","type"],"sources":["src/views/front/BlogSort.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- 两句诗 -->\r\n        <div class=\"my-animation-slide-top\">\r\n            <twoPoem></twoPoem>\r\n        </div>\r\n\r\n        <div style=\"background: white;padding-top: 40px;\" class=\"my-animation-slide-bottom\">\r\n            <!-- 标签 -->\r\n            <div class=\"sort-warp shadow-box\" v-if=\"!$common.isEmpty(sort) && !$common.isEmpty(sort.labels)\">\r\n                <div v-for=\"(label, index) in sort.labels\" :key=\"index\"\r\n                    :class=\"{ isActive: !$common.isEmpty(labelId) && parseInt(labelId) === label.id }\"\r\n                    @click=\"listArticle(label)\">\r\n                    <proTag :info=\"label.labelName + ' ' + label.countOfLabel\"\r\n                        :color=\"$constant.before_color_list[Math.floor(Math.random() * 6)]\" style=\"margin: 12px\">\r\n                    </proTag>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- 文章 -->\r\n            <div class=\"article-wrap\">\r\n                <articleList :articleList=\"articles\"></articleList>\r\n                <div class=\"pagination-wrap\">\r\n                    <div @click=\"pageArticles()\" class=\"pagination\" v-if=\"pagination.total !== articles.length\">\r\n                        下一页\r\n                    </div>\r\n                    <div v-else style=\"user-select: none\">\r\n                        ~~到底啦~~\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- 页脚 -->\r\n            <myFooter></myFooter>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nconst twoPoem = () => import(\"@/components/twoPoem.vue\");\r\nconst proTag = () => import(\"@/components/proTag\");\r\nconst articleList = () => import(\"@/components/articleList\");\r\nconst myFooter = () => import(\"@/components/myFooter.vue\");\r\n\r\nexport default {\r\n    components: {\r\n        twoPoem,\r\n        proTag,\r\n        articleList,\r\n        myFooter\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            sortId: this.$route.query.sortId,\r\n            labelId: this.$route.query.labelId,\r\n            sort: null,\r\n            pagination: {\r\n                current: 1,\r\n                size: 10,\r\n                total: 0,\r\n                searchKey: \"\",\r\n                sortId: this.$route.query.sortId,\r\n                labelId: this.$route.query.labelId\r\n            },\r\n            articles: []\r\n        }\r\n    },\r\n\r\n    computed: {},\r\n\r\n    watch: {\r\n        $route() {\r\n            this.pagination = {\r\n                current: 1,\r\n                size: 10,\r\n                total: 0,\r\n                searchKey: \"\",\r\n                sortId: this.$route.query.sortId,\r\n                labelId: this.$route.query.labelId\r\n            };\r\n            this.articles.splice(0, this.articles.length);\r\n            this.sortId = this.$route.query.sortId;\r\n            this.labelId = this.$route.query.labelId;\r\n            this.getSort();\r\n            this.getArticles();\r\n        }\r\n    },\r\n\r\n    created() {\r\n        this.getSort();\r\n        this.getArticles();\r\n    },\r\n\r\n    mounted() {\r\n    },\r\n\r\n    methods: {\r\n        pageArticles() {\r\n            this.pagination.current = this.pagination.current + 1;\r\n            this.getArticles();\r\n        },\r\n\r\n        getSort() {\r\n            let sortInfo = this.$store.state.sortInfo;\r\n            if (!this.$common.isEmpty(sortInfo)) {\r\n                let sortArray = sortInfo.filter(f => {\r\n                    return f.id === parseInt(this.sortId);\r\n                });\r\n                if (!this.$common.isEmpty(sortArray)) {\r\n                    this.sort = sortArray[0];\r\n                }\r\n            }\r\n        },\r\n        listArticle(label) {\r\n            this.labelId = label.id;\r\n            this.pagination = {\r\n                current: 1,\r\n                size: 10,\r\n                total: 0,\r\n                searchKey: \"\",\r\n                sortId: this.$route.query.sortId,\r\n                labelId: label.id\r\n            };\r\n            this.articles.splice(0, this.articles.length);\r\n            this.$nextTick(() => {\r\n                this.getArticles();\r\n            });\r\n        },\r\n        getArticles() {\r\n            this.$http.post(this.$constant.baseURL + \"/article/listArticle\", this.pagination)\r\n                .then((res) => {\r\n                    if (!this.$common.isEmpty(res.data)) {\r\n                        this.articles = this.articles.concat(res.data.records);\r\n                        this.pagination.total = res.data.total;\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    this.$message({\r\n                        message: error.message,\r\n                        type: \"error\"\r\n                    });\r\n                });\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 以my-animation-开头的class */\r\n[class*=my-animation-] {\r\n    animation-duration: 1s;\r\n    animation-timing-function: ease-out;\r\n    animation-fill-mode: both;\r\n}\r\n\r\n\r\n.my-animation-slide-top {\r\n    animation-name: slide-top\r\n}\r\n\r\n.my-animation-slide-bottom {\r\n    animation-name: slide-bottom\r\n}\r\n\r\n.sort-warp {\r\n    width: 70%;\r\n    max-width: 780px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.shadow-box {\r\n    box-shadow: 0 1px 20px -6px rgba(0, 0, 0, 0.5);\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.shadow-box:hover {\r\n    box-shadow: 0 5px 10px 5px rgba(110, 110, 110, 0.4);\r\n}\r\n\r\n.article-wrap {\r\n    width: 70%;\r\n    margin: 40px auto;\r\n    min-height: 600px;\r\n}\r\n\r\n.isActive {\r\n    animation: scale 1.5s ease-in-out infinite;\r\n}\r\n\r\n.pagination-wrap {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 40px;\r\n}\r\n\r\n.pagination {\r\n    padding: 13px 15px;\r\n    border: 1px solid var(--lightGray);\r\n    border-radius: 3rem;\r\n    color: var(--greyFont);\r\n    width: 100px;\r\n    user-select: none;\r\n    cursor: pointer;\r\n    text-align: center;\r\n}\r\n\r\n.pagination:hover {\r\n    border: 1px solid var(--themeBackground);\r\n    color: var(--themeBackground);\r\n    box-shadow: 0 0 5px var(--themeBackground);\r\n}\r\n\r\n\r\n@media screen and (max-width: 900px) {\r\n    .sort-warp {\r\n        width: 90%;\r\n    }\r\n\r\n    .article-wrap {\r\n        width: 90%;\r\n    }\r\n}\r\n</style>"],"mappings":"AAsCA,MAAAA,OAAA,GAAAA,CAAA;AACA,MAAAC,MAAA,GAAAA,CAAA;AACA,MAAAC,WAAA,GAAAA,CAAA;AACA,MAAAC,QAAA,GAAAA,CAAA;AAEA;EACAC,UAAA;IACAJ,OAAA;IACAC,MAAA;IACAC,WAAA;IACAC;EACA;EAEAE,KAAA;IACA;MACAC,MAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,MAAA;MACAG,OAAA,OAAAF,MAAA,CAAAC,KAAA,CAAAC,OAAA;MACAC,IAAA;MACAC,UAAA;QACAC,OAAA;QACAC,IAAA;QACAC,KAAA;QACAC,SAAA;QACAT,MAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,MAAA;QACAG,OAAA,OAAAF,MAAA,CAAAC,KAAA,CAAAC;MACA;MACAO,QAAA;IACA;EACA;EAEAC,QAAA;EAEAC,KAAA;IACAX,OAAA;MACA,KAAAI,UAAA;QACAC,OAAA;QACAC,IAAA;QACAC,KAAA;QACAC,SAAA;QACAT,MAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,MAAA;QACAG,OAAA,OAAAF,MAAA,CAAAC,KAAA,CAAAC;MACA;MACA,KAAAO,QAAA,CAAAG,MAAA,SAAAH,QAAA,CAAAI,MAAA;MACA,KAAAd,MAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAF,MAAA;MACA,KAAAG,OAAA,QAAAF,MAAA,CAAAC,KAAA,CAAAC,OAAA;MACA,KAAAY,OAAA;MACA,KAAAC,WAAA;IACA;EACA;EAEAC,QAAA;IACA,KAAAF,OAAA;IACA,KAAAC,WAAA;EACA;EAEAE,QAAA,GACA;EAEAC,OAAA;IACAC,aAAA;MACA,KAAAf,UAAA,CAAAC,OAAA,QAAAD,UAAA,CAAAC,OAAA;MACA,KAAAU,WAAA;IACA;IAEAD,QAAA;MACA,IAAAM,QAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAF,QAAA;MACA,UAAAG,OAAA,CAAAC,OAAA,CAAAJ,QAAA;QACA,IAAAK,SAAA,GAAAL,QAAA,CAAAM,MAAA,CAAAC,CAAA;UACA,OAAAA,CAAA,CAAAC,EAAA,KAAAC,QAAA,MAAA9B,MAAA;QACA;QACA,UAAAwB,OAAA,CAAAC,OAAA,CAAAC,SAAA;UACA,KAAAtB,IAAA,GAAAsB,SAAA;QACA;MACA;IACA;IACAK,YAAAC,KAAA;MACA,KAAA7B,OAAA,GAAA6B,KAAA,CAAAH,EAAA;MACA,KAAAxB,UAAA;QACAC,OAAA;QACAC,IAAA;QACAC,KAAA;QACAC,SAAA;QACAT,MAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,MAAA;QACAG,OAAA,EAAA6B,KAAA,CAAAH;MACA;MACA,KAAAnB,QAAA,CAAAG,MAAA,SAAAH,QAAA,CAAAI,MAAA;MACA,KAAAmB,SAAA;QACA,KAAAjB,WAAA;MACA;IACA;IACAA,YAAA;MACA,KAAAkB,KAAA,CAAAC,IAAA,MAAAC,SAAA,CAAAC,OAAA,gCAAAhC,UAAA,EACAiC,IAAA,CAAAC,GAAA;QACA,UAAAf,OAAA,CAAAC,OAAA,CAAAc,GAAA,CAAAxC,IAAA;UACA,KAAAW,QAAA,QAAAA,QAAA,CAAA8B,MAAA,CAAAD,GAAA,CAAAxC,IAAA,CAAA0C,OAAA;UACA,KAAApC,UAAA,CAAAG,KAAA,GAAA+B,GAAA,CAAAxC,IAAA,CAAAS,KAAA;QACA;MACA,GACAkC,KAAA,CAAAC,KAAA;QACA,KAAAC,QAAA;UACAC,OAAA,EAAAF,KAAA,CAAAE,OAAA;UACAC,IAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}