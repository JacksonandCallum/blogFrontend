{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst proButton = () => import(\"@/components/proButton\");\nconst PersonPage = () => import(\"@/components/PersonPage.vue\");\nexport default {\n  components: {\n    proButton,\n    PersonPage\n  },\n  data() {\n    return {\n      currentUser: this.$store.state.currentUser,\n      username: \"\",\n      password: \"\",\n      // phoneNumber: \"\",\n      email: \"\",\n      // avatar: \"\",\n      // showDialog: false,\n      code: \"\",\n      // dialogTitle: \"\",\n      // codeString: \"验证码\",\n      // passwordFlag: null,\n      // intervalCode: null,\n      src: require(\"@/assets/imgs/boyWithCat.jpg\"),\n      login_register_src: require(\"@/assets/imgs/nice.jpg\"),\n      activeName: \"个人资料\"\n    };\n  },\n  computed: {},\n  created() {},\n  methods: {\n    // addPicture(res) {\n    //     this.avatar = res;\n    //     this.submitDialog()\n    // },\n    clickTab() {},\n    signUp() {\n      document.querySelector(\"#loginAndRegist\").classList.add('right-panel-active');\n    },\n    signIn() {\n      document.querySelector(\"#loginAndRegist\").classList.remove('right-panel-active');\n    },\n    login() {\n      if (this.$common.isEmpty(this.username) || this.$common.isEmpty(this.password)) {\n        this.$message.error(\"请输入账号或密码！\");\n        return;\n      }\n      let user = {\n        username: this.username.trim(),\n        // password: this.password.trim(),\n        role: \"USER\",\n        password: this.$common.decrypt(this.$common.encrypt(this.password.trim()))\n      };\n      this.$request.post('/login', user).then(res => {\n        if (!this.$common.isEmpty(res.data)) {\n          location.href = '/front/home';\n          localStorage.setItem(\"USER\", JSON.stringify(res.data)); // 存储用户数据\n          this.username = \"\";\n          this.password = \"\";\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    regist() {\n      if (this.$common.isEmpty(this.username) || this.$common.isEmpty(this.password)) {\n        this.$message.error(\"请输入用户名或密码！\");\n        return;\n      }\n      if (this.dialogTitle === \"邮箱验证码\" && this.$common.isEmpty(this.email)) {\n        this.$message.error(\"请输入邮箱！\");\n        return false;\n      }\n      if (this.$common.isEmpty(this.code)) {\n        this.$message.error(\"请输入验证码！\");\n        return;\n      }\n      if (this.username.indexOf(\" \") !== -1 || this.password.indexOf(\" \") !== -1) {\n        this.$message.error(\"用户名或密码不能包含空格！\");\n        return;\n      }\n      let user = {\n        username: this.username.trim(),\n        code: this.code.trim(),\n        password: this.$common.encrypt(this.password.trim())\n      };\n      if (this.dialogTitle === \"邮箱验证码\") {\n        user.email = this.email;\n      }\n      this.$http.post(this.$constant.baseURL + \"/user/regist\", user).then(res => {\n        if (!this.$common.isEmpty(res.data)) {\n          this.$store.commit(\"loadCurrentUser\", res.data);\n          localStorage.setItem(\"userToken\", res.data.accessToken);\n          this.username = \"\";\n          this.password = \"\";\n          this.$router.push({\n            path: '/'\n          });\n          let userToken = this.$common.encrypt(localStorage.getItem(\"userToken\"));\n          window.open(this.$constant.imBaseURL + \"?userToken=\" + userToken);\n        }\n      }).catch(error => {\n        this.$message({\n          message: error.message,\n          type: \"error\"\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["proButton","PersonPage","components","data","currentUser","$store","state","username","password","email","code","src","require","login_register_src","activeName","computed","created","methods","clickTab","signUp","document","querySelector","classList","add","signIn","remove","login","$common","isEmpty","$message","error","user","trim","role","decrypt","encrypt","$request","post","then","res","location","href","localStorage","setItem","JSON","stringify","msg","regist","dialogTitle","indexOf","$http","$constant","baseURL","commit","accessToken","$router","push","path","userToken","getItem","window","open","imBaseURL","catch","message","type"],"sources":["src/views/front/PersonDemo.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- 登陆和注册 -->\r\n        <div v-if=\"this.$common.isEmpty(currentUser)\" class=\"myCenter in-up-container my-animation-hideToShow\">\r\n            <!-- 背景图片 -->\r\n            <el-image class=\"my-el-image\" style=\"position: absolute\" v-once lazy :src=\"login_register_src\" fit=\"cover\">\r\n                <div slot=\"error\" class=\"image-slot\"></div>\r\n            </el-image>\r\n            <div class=\"in-up\" id=\"loginAndRegist\">\r\n                <div class=\"form-container sign-up-container\">\r\n                    <div class=\"myCenter\">\r\n                        <h1>注册</h1>\r\n                        <input v-model=\"username\" type=\"text\" maxlength=\"30\" placeholder=\"用户名\">\r\n                        <input v-model=\"password\" type=\"password\" maxlength=\"30\" placeholder=\"密码\">\r\n                        <input v-model=\"email\" type=\"email\" placeholder=\"邮箱\">\r\n                        <input v-model=\"code\" type=\"text\" placeholder=\"验证码\" disabled>\r\n                        <a style=\"margin: 0\" href=\"#\" @click=\"changeDialog('邮箱验证码')\">获取验证码</a>\r\n                        <button @click=\"regist()\">注册</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-container sign-in-container\">\r\n                    <div class=\"myCenter\">\r\n                        <h1>登录</h1>\r\n                        <input v-model=\"username\" type=\"text\" placeholder=\"用户名/邮箱/手机号\">\r\n                        <input v-model=\"password\" type=\"password\" placeholder=\"密码\">\r\n                        <a href=\"#\" @click=\"changeDialog('找回密码')\">忘记密码？</a>\r\n                        <button @click=\"login()\">登录</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"overlay-container\">\r\n                    <div class=\"overlay\">\r\n                        <div class=\"overlay-panel myCenter overlay-left\">\r\n                            <h1>已有帐号？</h1>\r\n                            <p>请登录🚀</p>\r\n                            <button class=\"ghost\" @click=\"signIn()\">登录</button>\r\n                        </div>\r\n                        <div class=\"overlay-panel myCenter overlay-right\">\r\n                            <h1>没有帐号？</h1>\r\n                            <p>立即注册吧😃</p>\r\n                            <button class=\"ghost\" @click=\"signUp()\">注册</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- 用户信息 -->\r\n        <div v-else class=\"user-container myCenter my-animation-hideToShow\">\r\n            <!-- 背景图片 -->\r\n            <el-image class=\"my-el-image\" style=\"position: absolute\" v-once lazy :src=\"src\" fit=\"cover\">\r\n                <div slot=\"error\" class=\"image-slot\"></div>\r\n            </el-image>\r\n            <div class=\"shadow-box-mini user-info\" style=\"display: flex\">\r\n                <div class=\"user-left\">\r\n                    <el-tabs v-model=\"activeName\" @tab-click=\"clickTab\">\r\n                        <el-tab-pane label=\"个人资料\" name=\"个人资料\">\r\n                            <!-- 个人中心 -->\r\n                            <PersonPage :currentUser=\"currentUser\"></PersonPage>\r\n                        </el-tab-pane>\r\n                        <el-tab-pane label=\"配置管理\" name=\"second\">配置管理</el-tab-pane>\r\n                        <el-tab-pane label=\"角色管理\" name=\"third\">角色管理</el-tab-pane>\r\n                        <el-tab-pane label=\"定时任务补偿\" name=\"fourth\">定时任务补偿</el-tab-pane>\r\n                    </el-tabs>\r\n                </div>\r\n                <!-- <div class=\"user-right\"></div> -->\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nconst proButton = () => import(\"@/components/proButton\");\r\nconst PersonPage = () => import(\"@/components/PersonPage.vue\")\r\n\r\nexport default {\r\n    components: {\r\n        proButton,\r\n        PersonPage\r\n    },\r\n    data() {\r\n        return {\r\n            currentUser: this.$store.state.currentUser,\r\n            username: \"\",\r\n            password: \"\",\r\n            // phoneNumber: \"\",\r\n            email: \"\",\r\n            // avatar: \"\",\r\n            // showDialog: false,\r\n            code: \"\",\r\n            // dialogTitle: \"\",\r\n            // codeString: \"验证码\",\r\n            // passwordFlag: null,\r\n            // intervalCode: null,\r\n            src: require(\"@/assets/imgs/boyWithCat.jpg\"),\r\n            login_register_src: require(\"@/assets/imgs/nice.jpg\"),\r\n            activeName:\"个人资料\"\r\n        }\r\n    },\r\n    computed: {},\r\n    created() {\r\n\r\n    },\r\n    methods: {\r\n        // addPicture(res) {\r\n        //     this.avatar = res;\r\n        //     this.submitDialog()\r\n        // },\r\n        clickTab(){},\r\n        signUp() {\r\n            document.querySelector(\"#loginAndRegist\").classList.add('right-panel-active');\r\n        },\r\n        signIn() {\r\n            document.querySelector(\"#loginAndRegist\").classList.remove('right-panel-active');\r\n        },\r\n        login() {\r\n            if (this.$common.isEmpty(this.username) || this.$common.isEmpty(this.password)) {\r\n                this.$message.error(\"请输入账号或密码！\")\r\n                return;\r\n            }\r\n\r\n            let user = {\r\n                username: this.username.trim(),\r\n                // password: this.password.trim(),\r\n                role: \"USER\",\r\n                password: this.$common.decrypt(this.$common.encrypt(this.password.trim()))\r\n            };\r\n\r\n            this.$request.post('/login', user).then(res => {\r\n                if (!this.$common.isEmpty(res.data)) {\r\n                    location.href = '/front/home'\r\n                    localStorage.setItem(\"USER\", JSON.stringify(res.data))  // 存储用户数据\r\n                    this.username = \"\";\r\n                    this.password = \"\";\r\n                } else {\r\n                    this.$message.error(res.msg)\r\n                }\r\n            })\r\n        },\r\n        regist() {\r\n            if (this.$common.isEmpty(this.username) || this.$common.isEmpty(this.password)) {\r\n                this.$message.error(\"请输入用户名或密码！\")\r\n                return;\r\n            }\r\n\r\n            if (this.dialogTitle === \"邮箱验证码\" && this.$common.isEmpty(this.email)) {\r\n                this.$message.error(\"请输入邮箱！\")\r\n                return false;\r\n            }\r\n\r\n            if (this.$common.isEmpty(this.code)) {\r\n                this.$message.error(\"请输入验证码！\")\r\n                return;\r\n            }\r\n\r\n            if (this.username.indexOf(\" \") !== -1 || this.password.indexOf(\" \") !== -1) {\r\n                this.$message.error(\"用户名或密码不能包含空格！\")\r\n                return;\r\n            }\r\n\r\n            let user = {\r\n                username: this.username.trim(),\r\n                code: this.code.trim(),\r\n                password: this.$common.encrypt(this.password.trim())\r\n            };\r\n\r\n            if (this.dialogTitle === \"邮箱验证码\") {\r\n                user.email = this.email;\r\n            }\r\n\r\n            this.$http.post(this.$constant.baseURL + \"/user/regist\", user)\r\n                .then((res) => {\r\n                    if (!this.$common.isEmpty(res.data)) {\r\n                        this.$store.commit(\"loadCurrentUser\", res.data);\r\n                        localStorage.setItem(\"userToken\", res.data.accessToken);\r\n                        this.username = \"\";\r\n                        this.password = \"\";\r\n                        this.$router.push({ path: '/' });\r\n                        let userToken = this.$common.encrypt(localStorage.getItem(\"userToken\"));\r\n                        window.open(this.$constant.imBaseURL + \"?userToken=\" + userToken);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    this.$message({\r\n                        message: error.message,\r\n                        type: \"error\"\r\n                    });\r\n                });\r\n        },\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.in-up-container {\r\n    height: 100vh;\r\n    position: relative;\r\n}\r\n\r\n.in-up {\r\n    opacity: 0.9;\r\n    border-radius: 10px;\r\n    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15), 0 10px 10px rgba(0, 0, 0, 0.15);\r\n    position: relative;\r\n    overflow: hidden;\r\n    width: 750px;\r\n    max-width: 100%;\r\n    min-height: 450px;\r\n    margin: 10px;\r\n}\r\n\r\n.in-up p {\r\n    font-size: 14px;\r\n    letter-spacing: 1px;\r\n    margin: 20px 0 30px 0;\r\n}\r\n\r\n.in-up a {\r\n    color: black;\r\n    font-size: 14px;\r\n    text-decoration: none;\r\n    margin: 15px 0;\r\n}\r\n\r\n/* 以my-animation-开头的class */\r\n[class*=my-animation-] {\r\n    animation-duration: 1s;\r\n    animation-timing-function: ease-out;\r\n    animation-fill-mode: both;\r\n}\r\n\r\n.my-animation-hideToShow {\r\n    animation-name: hideToShow\r\n}\r\n\r\n.form-container {\r\n    position: absolute;\r\n    height: 100%;\r\n    transition: all 0.5s ease-in-out;\r\n}\r\n\r\n.sign-in-container {\r\n    left: 0;\r\n    width: 50%;\r\n}\r\n\r\n.sign-up-container {\r\n    left: 0;\r\n    width: 50%;\r\n    opacity: 0;\r\n}\r\n\r\n.form-container div {\r\n    background: white;\r\n    flex-direction: column;\r\n    padding: 0 20px;\r\n    height: 100%;\r\n}\r\n\r\n.form-container input {\r\n    background: #EEEEEE;\r\n    border-radius: 2px;\r\n    border: none;\r\n    padding: 12px 15px;\r\n    margin: 10px 0;\r\n    width: 100%;\r\n    outline: none;\r\n}\r\n\r\n.in-up button {\r\n    border-radius: 2rem;\r\n    border: none;\r\n    background: #ff4b2b;\r\n    color: white;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    padding: 12px 45px;\r\n    letter-spacing: 2px;\r\n    cursor: pointer;\r\n}\r\n\r\n.in-up button:hover {\r\n    animation: scale 0.8s ease-in-out;\r\n}\r\n\r\n.in-up button.ghost {\r\n    background: transparent;\r\n    border: 1px solid white;\r\n}\r\n\r\n.sign-up-container button {\r\n    margin-top: 20px;\r\n}\r\n\r\n.overlay-container {\r\n    position: absolute;\r\n    left: 50%;\r\n    width: 50%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    transition: all 0.5s ease-in-out;\r\n}\r\n\r\n.overlay {\r\n    background: linear-gradient(to right, #ff4b2b, #ff416c);\r\n    color: white;\r\n    position: relative;\r\n    left: -100%;\r\n    height: 100%;\r\n    width: 200%;\r\n}\r\n\r\n.overlay-panel {\r\n    position: absolute;\r\n    top: 0;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    width: 50%;\r\n    transition: all 0.5s ease-in-out;\r\n}\r\n\r\n.overlay-right {\r\n    right: 0;\r\n    transform: translateY(0);\r\n}\r\n\r\n.overlay-left {\r\n    transform: translateY(-20%);\r\n}\r\n\r\n.in-up.right-panel-active .sign-in-container {\r\n    transform: translateY(100%);\r\n}\r\n\r\n.in-up.right-panel-active .overlay-container {\r\n    transform: translateX(-100%);\r\n}\r\n\r\n.in-up.right-panel-active .sign-up-container {\r\n    transform: translateX(100%);\r\n    opacity: 1;\r\n}\r\n\r\n.in-up.right-panel-active .overlay {\r\n    transform: translateX(50%);\r\n}\r\n\r\n.in-up.right-panel-active .overlay-left {\r\n    transform: translateY(0);\r\n}\r\n\r\n.in-up.right-panel-active .overlay-right {\r\n    transform: translateY(20%);\r\n}\r\n\r\n.user-container {\r\n    width: 100vw;\r\n    height: 100vh;\r\n    position: relative;\r\n}\r\n\r\n/* 阴影 */\r\n.shadow-box-mini {\r\n    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.user-info {\r\n    width: 80%;\r\n    z-index: 10;\r\n    margin-top: 70px;\r\n    height: calc(100vh - 90px);\r\n    margin-bottom: 20px;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n}\r\n\r\n.user-left {\r\n    width: 100%;\r\n    background: rgba(255, 255, 255, 0.7);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    overflow-y: auto;\r\n    padding: 20px;\r\n}\r\n\r\n.user-right {\r\n    width: 50%;\r\n    background: rgba(255, 255, 255, 0.5);\r\n    padding: 20px;\r\n}\r\n\r\n.user-title {\r\n    text-align: right;\r\n    user-select: none;\r\n}\r\n\r\n.user-content {\r\n    text-align: left;\r\n}\r\n\r\n.user-title div {\r\n    height: 55px;\r\n    line-height: 55px;\r\n    text-align: center;\r\n}\r\n\r\n.user-content>div {\r\n    height: 55px;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.user-content>>>.el-input__inner,\r\n.user-content>>>.el-textarea__inner {\r\n    border: none;\r\n    background: rgba(255, 255, 255, 0.3);\r\n}\r\n\r\n.user-content>>>.el-input__count {\r\n    background: rgba(0, 0, 0, 0);\r\n    user-select: none;\r\n}\r\n\r\n.changeInfo {\r\n    color: white;\r\n    font-size: 0.75rem;\r\n    cursor: pointer;\r\n    background: orange;\r\n    padding: 3px;\r\n    border-radius: 0.2rem;\r\n    user-select: none;\r\n}\r\n\r\n@media screen and (max-width: 920px) {\r\n    .user-info {\r\n        width: 90%;\r\n    }\r\n\r\n    .user-left {\r\n        width: 100%;\r\n    }\r\n\r\n    .user-right {\r\n        display: none;\r\n    }\r\n}\r\n</style>"],"mappings":";AAwEA,MAAAA,SAAA,GAAAA,CAAA;AACA,MAAAC,UAAA,GAAAA,CAAA;AAEA;EACAC,UAAA;IACAF,SAAA;IACAC;EACA;EACAE,KAAA;IACA;MACAC,WAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,WAAA;MACAG,QAAA;MACAC,QAAA;MACA;MACAC,KAAA;MACA;MACA;MACAC,IAAA;MACA;MACA;MACA;MACA;MACAC,GAAA,EAAAC,OAAA;MACAC,kBAAA,EAAAD,OAAA;MACAE,UAAA;IACA;EACA;EACAC,QAAA;EACAC,QAAA,GAEA;EACAC,OAAA;IACA;IACA;IACA;IACA;IACAC,SAAA;IACAC,OAAA;MACAC,QAAA,CAAAC,aAAA,oBAAAC,SAAA,CAAAC,GAAA;IACA;IACAC,OAAA;MACAJ,QAAA,CAAAC,aAAA,oBAAAC,SAAA,CAAAG,MAAA;IACA;IACAC,MAAA;MACA,SAAAC,OAAA,CAAAC,OAAA,MAAArB,QAAA,UAAAoB,OAAA,CAAAC,OAAA,MAAApB,QAAA;QACA,KAAAqB,QAAA,CAAAC,KAAA;QACA;MACA;MAEA,IAAAC,IAAA;QACAxB,QAAA,OAAAA,QAAA,CAAAyB,IAAA;QACA;QACAC,IAAA;QACAzB,QAAA,OAAAmB,OAAA,CAAAO,OAAA,MAAAP,OAAA,CAAAQ,OAAA,MAAA3B,QAAA,CAAAwB,IAAA;MACA;MAEA,KAAAI,QAAA,CAAAC,IAAA,WAAAN,IAAA,EAAAO,IAAA,CAAAC,GAAA;QACA,UAAAZ,OAAA,CAAAC,OAAA,CAAAW,GAAA,CAAApC,IAAA;UACAqC,QAAA,CAAAC,IAAA;UACAC,YAAA,CAAAC,OAAA,SAAAC,IAAA,CAAAC,SAAA,CAAAN,GAAA,CAAApC,IAAA;UACA,KAAAI,QAAA;UACA,KAAAC,QAAA;QACA;UACA,KAAAqB,QAAA,CAAAC,KAAA,CAAAS,GAAA,CAAAO,GAAA;QACA;MACA;IACA;IACAC,OAAA;MACA,SAAApB,OAAA,CAAAC,OAAA,MAAArB,QAAA,UAAAoB,OAAA,CAAAC,OAAA,MAAApB,QAAA;QACA,KAAAqB,QAAA,CAAAC,KAAA;QACA;MACA;MAEA,SAAAkB,WAAA,qBAAArB,OAAA,CAAAC,OAAA,MAAAnB,KAAA;QACA,KAAAoB,QAAA,CAAAC,KAAA;QACA;MACA;MAEA,SAAAH,OAAA,CAAAC,OAAA,MAAAlB,IAAA;QACA,KAAAmB,QAAA,CAAAC,KAAA;QACA;MACA;MAEA,SAAAvB,QAAA,CAAA0C,OAAA,qBAAAzC,QAAA,CAAAyC,OAAA;QACA,KAAApB,QAAA,CAAAC,KAAA;QACA;MACA;MAEA,IAAAC,IAAA;QACAxB,QAAA,OAAAA,QAAA,CAAAyB,IAAA;QACAtB,IAAA,OAAAA,IAAA,CAAAsB,IAAA;QACAxB,QAAA,OAAAmB,OAAA,CAAAQ,OAAA,MAAA3B,QAAA,CAAAwB,IAAA;MACA;MAEA,SAAAgB,WAAA;QACAjB,IAAA,CAAAtB,KAAA,QAAAA,KAAA;MACA;MAEA,KAAAyC,KAAA,CAAAb,IAAA,MAAAc,SAAA,CAAAC,OAAA,mBAAArB,IAAA,EACAO,IAAA,CAAAC,GAAA;QACA,UAAAZ,OAAA,CAAAC,OAAA,CAAAW,GAAA,CAAApC,IAAA;UACA,KAAAE,MAAA,CAAAgD,MAAA,oBAAAd,GAAA,CAAApC,IAAA;UACAuC,YAAA,CAAAC,OAAA,cAAAJ,GAAA,CAAApC,IAAA,CAAAmD,WAAA;UACA,KAAA/C,QAAA;UACA,KAAAC,QAAA;UACA,KAAA+C,OAAA,CAAAC,IAAA;YAAAC,IAAA;UAAA;UACA,IAAAC,SAAA,QAAA/B,OAAA,CAAAQ,OAAA,CAAAO,YAAA,CAAAiB,OAAA;UACAC,MAAA,CAAAC,IAAA,MAAAV,SAAA,CAAAW,SAAA,mBAAAJ,SAAA;QACA;MACA,GACAK,KAAA,CAAAjC,KAAA;QACA,KAAAD,QAAA;UACAmC,OAAA,EAAAlC,KAAA,CAAAkC,OAAA;UACAC,IAAA;QACA;MACA;IACA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}