{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// Swift mode created by Michael Kaminsky https://github.com/mkaminsky11\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) define([\"../../lib/codemirror\"], mod);else mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  function wordSet(words) {\n    var set = {};\n    for (var i = 0; i < words.length; i++) set[words[i]] = true;\n    return set;\n  }\n  var keywords = wordSet([\"_\", \"var\", \"let\", \"actor\", \"class\", \"enum\", \"extension\", \"import\", \"protocol\", \"struct\", \"func\", \"typealias\", \"associatedtype\", \"open\", \"public\", \"internal\", \"fileprivate\", \"private\", \"deinit\", \"init\", \"new\", \"override\", \"self\", \"subscript\", \"super\", \"convenience\", \"dynamic\", \"final\", \"indirect\", \"lazy\", \"required\", \"static\", \"unowned\", \"unowned(safe)\", \"unowned(unsafe)\", \"weak\", \"as\", \"is\", \"break\", \"case\", \"continue\", \"default\", \"else\", \"fallthrough\", \"for\", \"guard\", \"if\", \"in\", \"repeat\", \"switch\", \"where\", \"while\", \"defer\", \"return\", \"inout\", \"mutating\", \"nonmutating\", \"isolated\", \"nonisolated\", \"catch\", \"do\", \"rethrows\", \"throw\", \"throws\", \"async\", \"await\", \"try\", \"didSet\", \"get\", \"set\", \"willSet\", \"assignment\", \"associativity\", \"infix\", \"left\", \"none\", \"operator\", \"postfix\", \"precedence\", \"precedencegroup\", \"prefix\", \"right\", \"Any\", \"AnyObject\", \"Type\", \"dynamicType\", \"Self\", \"Protocol\", \"__COLUMN__\", \"__FILE__\", \"__FUNCTION__\", \"__LINE__\"]);\n  var definingKeywords = wordSet([\"var\", \"let\", \"actor\", \"class\", \"enum\", \"extension\", \"import\", \"protocol\", \"struct\", \"func\", \"typealias\", \"associatedtype\", \"for\"]);\n  var atoms = wordSet([\"true\", \"false\", \"nil\", \"self\", \"super\", \"_\"]);\n  var types = wordSet([\"Array\", \"Bool\", \"Character\", \"Dictionary\", \"Double\", \"Float\", \"Int\", \"Int8\", \"Int16\", \"Int32\", \"Int64\", \"Never\", \"Optional\", \"Set\", \"String\", \"UInt8\", \"UInt16\", \"UInt32\", \"UInt64\", \"Void\"]);\n  var operators = \"+-/*%=|&<>~^?!\";\n  var punc = \":;,.(){}[]\";\n  var binary = /^\\-?0b[01][01_]*/;\n  var octal = /^\\-?0o[0-7][0-7_]*/;\n  var hexadecimal = /^\\-?0x[\\dA-Fa-f][\\dA-Fa-f_]*(?:(?:\\.[\\dA-Fa-f][\\dA-Fa-f_]*)?[Pp]\\-?\\d[\\d_]*)?/;\n  var decimal = /^\\-?\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee]\\-?\\d[\\d_]*)?/;\n  var identifier = /^\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1/;\n  var property = /^\\.(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/;\n  var instruction = /^\\#[A-Za-z]+/;\n  var attribute = /^@(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/;\n  //var regexp = /^\\/(?!\\s)(?:\\/\\/)?(?:\\\\.|[^\\/])+\\//\n\n  function tokenBase(stream, state, prev) {\n    if (stream.sol()) state.indented = stream.indentation();\n    if (stream.eatSpace()) return null;\n    var ch = stream.peek();\n    if (ch == \"/\") {\n      if (stream.match(\"//\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      if (stream.match(\"/*\")) {\n        state.tokenize.push(tokenComment);\n        return tokenComment(stream, state);\n      }\n    }\n    if (stream.match(instruction)) return \"builtin\";\n    if (stream.match(attribute)) return \"attribute\";\n    if (stream.match(binary)) return \"number\";\n    if (stream.match(octal)) return \"number\";\n    if (stream.match(hexadecimal)) return \"number\";\n    if (stream.match(decimal)) return \"number\";\n    if (stream.match(property)) return \"property\";\n    if (operators.indexOf(ch) > -1) {\n      stream.next();\n      return \"operator\";\n    }\n    if (punc.indexOf(ch) > -1) {\n      stream.next();\n      stream.match(\"..\");\n      return \"punctuation\";\n    }\n    var stringMatch;\n    if (stringMatch = stream.match(/(\"\"\"|\"|')/)) {\n      var tokenize = tokenString.bind(null, stringMatch[0]);\n      state.tokenize.push(tokenize);\n      return tokenize(stream, state);\n    }\n    if (stream.match(identifier)) {\n      var ident = stream.current();\n      if (types.hasOwnProperty(ident)) return \"variable-2\";\n      if (atoms.hasOwnProperty(ident)) return \"atom\";\n      if (keywords.hasOwnProperty(ident)) {\n        if (definingKeywords.hasOwnProperty(ident)) state.prev = \"define\";\n        return \"keyword\";\n      }\n      if (prev == \"define\") return \"def\";\n      return \"variable\";\n    }\n    stream.next();\n    return null;\n  }\n  function tokenUntilClosingParen() {\n    var depth = 0;\n    return function (stream, state, prev) {\n      var inner = tokenBase(stream, state, prev);\n      if (inner == \"punctuation\") {\n        if (stream.current() == \"(\") ++depth;else if (stream.current() == \")\") {\n          if (depth == 0) {\n            stream.backUp(1);\n            state.tokenize.pop();\n            return state.tokenize[state.tokenize.length - 1](stream, state);\n          } else --depth;\n        }\n      }\n      return inner;\n    };\n  }\n  function tokenString(openQuote, stream, state) {\n    var singleLine = openQuote.length == 1;\n    var ch,\n      escaped = false;\n    while (ch = stream.peek()) {\n      if (escaped) {\n        stream.next();\n        if (ch == \"(\") {\n          state.tokenize.push(tokenUntilClosingParen());\n          return \"string\";\n        }\n        escaped = false;\n      } else if (stream.match(openQuote)) {\n        state.tokenize.pop();\n        return \"string\";\n      } else {\n        stream.next();\n        escaped = ch == \"\\\\\";\n      }\n    }\n    if (singleLine) {\n      state.tokenize.pop();\n    }\n    return \"string\";\n  }\n  function tokenComment(stream, state) {\n    var ch;\n    while (ch = stream.next()) {\n      if (ch === \"/\" && stream.eat(\"*\")) {\n        state.tokenize.push(tokenComment);\n      } else if (ch === \"*\" && stream.eat(\"/\")) {\n        state.tokenize.pop();\n        break;\n      }\n    }\n    return \"comment\";\n  }\n  function Context(prev, align, indented) {\n    this.prev = prev;\n    this.align = align;\n    this.indented = indented;\n  }\n  function pushContext(state, stream) {\n    var align = stream.match(/^\\s*($|\\/[\\/\\*])/, false) ? null : stream.column() + 1;\n    state.context = new Context(state.context, align, state.indented);\n  }\n  function popContext(state) {\n    if (state.context) {\n      state.indented = state.context.indented;\n      state.context = state.context.prev;\n    }\n  }\n  CodeMirror.defineMode(\"swift\", function (config) {\n    return {\n      startState: function () {\n        return {\n          prev: null,\n          context: null,\n          indented: 0,\n          tokenize: []\n        };\n      },\n      token: function (stream, state) {\n        var prev = state.prev;\n        state.prev = null;\n        var tokenize = state.tokenize[state.tokenize.length - 1] || tokenBase;\n        var style = tokenize(stream, state, prev);\n        if (!style || style == \"comment\") state.prev = prev;else if (!state.prev) state.prev = style;\n        if (style == \"punctuation\") {\n          var bracket = /[\\(\\[\\{]|([\\]\\)\\}])/.exec(stream.current());\n          if (bracket) (bracket[1] ? popContext : pushContext)(state, stream);\n        }\n        return style;\n      },\n      indent: function (state, textAfter) {\n        var cx = state.context;\n        if (!cx) return 0;\n        var closing = /^[\\]\\}\\)]/.test(textAfter);\n        if (cx.align != null) return cx.align - (closing ? 1 : 0);\n        return cx.indented + (closing ? 0 : config.indentUnit);\n      },\n      electricInput: /^\\s*[\\)\\}\\]]$/,\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      fold: \"brace\",\n      closeBrackets: \"()[]{}''\\\"\\\"``\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-swift\", \"swift\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","wordSet","words","set","i","length","keywords","definingKeywords","atoms","types","operators","punc","binary","octal","hexadecimal","decimal","identifier","property","instruction","attribute","tokenBase","stream","state","prev","sol","indented","indentation","eatSpace","ch","peek","match","skipToEnd","tokenize","push","tokenComment","indexOf","next","stringMatch","tokenString","bind","ident","current","hasOwnProperty","tokenUntilClosingParen","depth","inner","backUp","pop","openQuote","singleLine","escaped","eat","Context","align","pushContext","column","context","popContext","defineMode","config","startState","token","style","bracket","exec","indent","textAfter","cx","closing","test","indentUnit","electricInput","lineComment","blockCommentStart","blockCommentEnd","fold","closeBrackets","defineMIME"],"sources":["D:/Java_Projects/MYBLOG-备份/frontend/blog-frontend/node_modules/codemirror/mode/swift/swift.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// Swift mode created by Michael Kaminsky https://github.com/mkaminsky11\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd)\n    define([\"../../lib/codemirror\"], mod)\n  else\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n\n  function wordSet(words) {\n    var set = {}\n    for (var i = 0; i < words.length; i++) set[words[i]] = true\n    return set\n  }\n\n  var keywords = wordSet([\"_\",\"var\",\"let\",\"actor\",\"class\",\"enum\",\"extension\",\"import\",\"protocol\",\"struct\",\"func\",\"typealias\",\"associatedtype\",\n                          \"open\",\"public\",\"internal\",\"fileprivate\",\"private\",\"deinit\",\"init\",\"new\",\"override\",\"self\",\"subscript\",\"super\",\n                          \"convenience\",\"dynamic\",\"final\",\"indirect\",\"lazy\",\"required\",\"static\",\"unowned\",\"unowned(safe)\",\"unowned(unsafe)\",\"weak\",\"as\",\"is\",\n                          \"break\",\"case\",\"continue\",\"default\",\"else\",\"fallthrough\",\"for\",\"guard\",\"if\",\"in\",\"repeat\",\"switch\",\"where\",\"while\",\n                          \"defer\",\"return\",\"inout\",\"mutating\",\"nonmutating\",\"isolated\",\"nonisolated\",\"catch\",\"do\",\"rethrows\",\"throw\",\"throws\",\"async\",\"await\",\"try\",\"didSet\",\"get\",\"set\",\"willSet\",\n                          \"assignment\",\"associativity\",\"infix\",\"left\",\"none\",\"operator\",\"postfix\",\"precedence\",\"precedencegroup\",\"prefix\",\"right\",\n                          \"Any\",\"AnyObject\",\"Type\",\"dynamicType\",\"Self\",\"Protocol\",\"__COLUMN__\",\"__FILE__\",\"__FUNCTION__\",\"__LINE__\"])\n  var definingKeywords = wordSet([\"var\",\"let\",\"actor\",\"class\",\"enum\",\"extension\",\"import\",\"protocol\",\"struct\",\"func\",\"typealias\",\"associatedtype\",\"for\"])\n  var atoms = wordSet([\"true\",\"false\",\"nil\",\"self\",\"super\",\"_\"])\n  var types = wordSet([\"Array\",\"Bool\",\"Character\",\"Dictionary\",\"Double\",\"Float\",\"Int\",\"Int8\",\"Int16\",\"Int32\",\"Int64\",\"Never\",\"Optional\",\"Set\",\"String\",\n                       \"UInt8\",\"UInt16\",\"UInt32\",\"UInt64\",\"Void\"])\n  var operators = \"+-/*%=|&<>~^?!\"\n  var punc = \":;,.(){}[]\"\n  var binary = /^\\-?0b[01][01_]*/\n  var octal = /^\\-?0o[0-7][0-7_]*/\n  var hexadecimal = /^\\-?0x[\\dA-Fa-f][\\dA-Fa-f_]*(?:(?:\\.[\\dA-Fa-f][\\dA-Fa-f_]*)?[Pp]\\-?\\d[\\d_]*)?/\n  var decimal = /^\\-?\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee]\\-?\\d[\\d_]*)?/\n  var identifier = /^\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1/\n  var property = /^\\.(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/\n  var instruction = /^\\#[A-Za-z]+/\n  var attribute = /^@(?:\\$\\d+|(`?)[_A-Za-z][_A-Za-z$0-9]*\\1)/\n  //var regexp = /^\\/(?!\\s)(?:\\/\\/)?(?:\\\\.|[^\\/])+\\//\n\n  function tokenBase(stream, state, prev) {\n    if (stream.sol()) state.indented = stream.indentation()\n    if (stream.eatSpace()) return null\n\n    var ch = stream.peek()\n    if (ch == \"/\") {\n      if (stream.match(\"//\")) {\n        stream.skipToEnd()\n        return \"comment\"\n      }\n      if (stream.match(\"/*\")) {\n        state.tokenize.push(tokenComment)\n        return tokenComment(stream, state)\n      }\n    }\n    if (stream.match(instruction)) return \"builtin\"\n    if (stream.match(attribute)) return \"attribute\"\n    if (stream.match(binary)) return \"number\"\n    if (stream.match(octal)) return \"number\"\n    if (stream.match(hexadecimal)) return \"number\"\n    if (stream.match(decimal)) return \"number\"\n    if (stream.match(property)) return \"property\"\n    if (operators.indexOf(ch) > -1) {\n      stream.next()\n      return \"operator\"\n    }\n    if (punc.indexOf(ch) > -1) {\n      stream.next()\n      stream.match(\"..\")\n      return \"punctuation\"\n    }\n    var stringMatch\n    if (stringMatch = stream.match(/(\"\"\"|\"|')/)) {\n      var tokenize = tokenString.bind(null, stringMatch[0])\n      state.tokenize.push(tokenize)\n      return tokenize(stream, state)\n    }\n\n    if (stream.match(identifier)) {\n      var ident = stream.current()\n      if (types.hasOwnProperty(ident)) return \"variable-2\"\n      if (atoms.hasOwnProperty(ident)) return \"atom\"\n      if (keywords.hasOwnProperty(ident)) {\n        if (definingKeywords.hasOwnProperty(ident))\n          state.prev = \"define\"\n        return \"keyword\"\n      }\n      if (prev == \"define\") return \"def\"\n      return \"variable\"\n    }\n\n    stream.next()\n    return null\n  }\n\n  function tokenUntilClosingParen() {\n    var depth = 0\n    return function(stream, state, prev) {\n      var inner = tokenBase(stream, state, prev)\n      if (inner == \"punctuation\") {\n        if (stream.current() == \"(\") ++depth\n        else if (stream.current() == \")\") {\n          if (depth == 0) {\n            stream.backUp(1)\n            state.tokenize.pop()\n            return state.tokenize[state.tokenize.length - 1](stream, state)\n          }\n          else --depth\n        }\n      }\n      return inner\n    }\n  }\n\n  function tokenString(openQuote, stream, state) {\n    var singleLine = openQuote.length == 1\n    var ch, escaped = false\n    while (ch = stream.peek()) {\n      if (escaped) {\n        stream.next()\n        if (ch == \"(\") {\n          state.tokenize.push(tokenUntilClosingParen())\n          return \"string\"\n        }\n        escaped = false\n      } else if (stream.match(openQuote)) {\n        state.tokenize.pop()\n        return \"string\"\n      } else {\n        stream.next()\n        escaped = ch == \"\\\\\"\n      }\n    }\n    if (singleLine) {\n      state.tokenize.pop()\n    }\n    return \"string\"\n  }\n\n  function tokenComment(stream, state) {\n    var ch\n    while (ch = stream.next()) {\n      if (ch === \"/\" && stream.eat(\"*\")) {\n        state.tokenize.push(tokenComment)\n      } else if (ch === \"*\" && stream.eat(\"/\")) {\n        state.tokenize.pop()\n        break\n      }\n    }\n    return \"comment\"\n  }\n\n  function Context(prev, align, indented) {\n    this.prev = prev\n    this.align = align\n    this.indented = indented\n  }\n\n  function pushContext(state, stream) {\n    var align = stream.match(/^\\s*($|\\/[\\/\\*])/, false) ? null : stream.column() + 1\n    state.context = new Context(state.context, align, state.indented)\n  }\n\n  function popContext(state) {\n    if (state.context) {\n      state.indented = state.context.indented\n      state.context = state.context.prev\n    }\n  }\n\n  CodeMirror.defineMode(\"swift\", function(config) {\n    return {\n      startState: function() {\n        return {\n          prev: null,\n          context: null,\n          indented: 0,\n          tokenize: []\n        }\n      },\n\n      token: function(stream, state) {\n        var prev = state.prev\n        state.prev = null\n        var tokenize = state.tokenize[state.tokenize.length - 1] || tokenBase\n        var style = tokenize(stream, state, prev)\n        if (!style || style == \"comment\") state.prev = prev\n        else if (!state.prev) state.prev = style\n\n        if (style == \"punctuation\") {\n          var bracket = /[\\(\\[\\{]|([\\]\\)\\}])/.exec(stream.current())\n          if (bracket) (bracket[1] ? popContext : pushContext)(state, stream)\n        }\n\n        return style\n      },\n\n      indent: function(state, textAfter) {\n        var cx = state.context\n        if (!cx) return 0\n        var closing = /^[\\]\\}\\)]/.test(textAfter)\n        if (cx.align != null) return cx.align - (closing ? 1 : 0)\n        return cx.indented + (closing ? 0 : config.indentUnit)\n      },\n\n      electricInput: /^\\s*[\\)\\}\\]]$/,\n\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      fold: \"brace\",\n      closeBrackets: \"()[]{}''\\\"\\\"``\"\n    }\n  })\n\n  CodeMirror.defineMIME(\"text/x-swift\",\"swift\")\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}