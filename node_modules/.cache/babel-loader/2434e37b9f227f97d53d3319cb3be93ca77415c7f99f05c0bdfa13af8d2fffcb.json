{"ast":null,"code":"import constant from \"./constant\";\nimport CryptoJS from 'crypto-js';\nexport default {\n  /**\r\n  * 判断是否为空\r\n  */\n  isEmpty(value) {\n    if (typeof value === \"undefined\" || value === null || typeof value === \"string\" && value.trim() === \"\" || Array.prototype.isPrototypeOf(value) && value.length === 0 || Object.prototype.isPrototypeOf(value) && Object.keys(value).length === 0) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n  /**\r\n  * 表情包转换\r\n  */\n  faceReg(content) {\n    content = content.replace(/\\[[^\\[^\\]]+\\]/g, word => {\n      console.log(\"Matched word: \", word);\n      let index = constant.emojiList.indexOf(word.replace(\"[\", \"\").replace(\"]\", \"\"));\n      if (index > -1) {\n        let url = constant.qiniuDownload + \"/emoji/\" + (index + 1) + \".png\";\n        console.log(\"Emoji URL: \", url);\n        return '<img style=\"vertical-align: middle;width: 32px;height: 32px\" src=\"' + url + '\" title=\"' + word + '\"/>';\n      } else {\n        console.log(\"Processed content: \", content);\n        return word;\n      }\n    });\n    return content;\n  },\n  /**\r\n  * 图片转换\r\n  */\n  pictureReg(content) {\n    content = content.replace(/\\[[^\\[^\\]]+\\]/g, word => {\n      let index = word.indexOf(\",\");\n      if (index > -1) {\n        let arr = word.replace(\"[\", \"\").replace(\"]\", \"\").split(\",\");\n        return '<img class=\"pictureReg\" style=\"border-radius: 5px;width: 100%;max-width: 250px;display: block\" src=\"' + arr[1] + '\" title=\"' + arr[0] + '\"/>';\n      } else {\n        return word;\n      }\n    });\n    return content;\n  },\n  imgShow(select) {\n    $(select).click(function () {\n      let src = $(this).attr(\"src\");\n      $(\"#bigImg\").attr(\"src\", src);\n\n      /** 获取当前点击图片的真实大小，并显示弹出层及大图 */\n      $(\"<img/>\").attr(\"src\", src).load(function () {\n        let windowW = $(window).width(); //获取当前窗口宽度\n        let windowH = $(window).height(); //获取当前窗口高度\n        let realWidth = this.width; //获取图片真实宽度\n        let realHeight = this.height; //获取图片真实高度\n        let imgWidth, imgHeight;\n        let scale = 0.8; //缩放尺寸，当图片真实宽度和高度大于窗口宽度和高度时进行缩放\n\n        if (realHeight > windowH * scale) {\n          //判断图片高度\n          imgHeight = windowH * scale; //如大于窗口高度，图片高度进行缩放\n          imgWidth = imgHeight / realHeight * realWidth; //等比例缩放宽度\n          if (imgWidth > windowW * scale) {\n            //如宽度仍大于窗口宽度\n            imgWidth = windowW * scale; //再对宽度进行缩放\n          }\n        } else if (realWidth > windowW * scale) {\n          //如图片高度合适，判断图片宽度\n          imgWidth = windowW * scale; //如大于窗口宽度，图片宽度进行缩放\n          imgHeight = imgWidth / realWidth * realHeight; //等比例缩放高度\n        } else {\n          //如果图片真实高度和宽度都符合要求，高宽不变\n          imgWidth = realWidth;\n          imgHeight = realHeight;\n        }\n        $(\"#bigImg\").css(\"width\", imgWidth); //以最终的宽度对图片缩放\n\n        let w = (windowW - imgWidth) / 2; //计算图片与窗口左边距\n        let h = (windowH - imgHeight) / 2; //计算图片与窗口上边距\n        $(\"#innerImg\").css({\n          \"top\": h,\n          \"left\": w\n        }); //设置top和left属性\n        $(\"#outerImg\").fadeIn(\"fast\"); //淡入显示\n      });\n      $(\"#outerImg\").click(function () {\n        //再次点击淡出消失弹出层\n        $(this).fadeOut(\"fast\");\n      });\n    });\n  },\n  getDateDiff(dateStr) {\n    if (!dateStr) {\n      return ''; // 如果 dateStr 不存在，返回空字符串或其他默认值\n    }\n    let publishTime = isNaN(Date.parse(dateStr.replace(/-/gi, \"/\")) / 1000) ? Date.parse(dateStr) / 1000 : Date.parse(dateStr.replace(/-/gi, \"/\")) / 1000;\n    let d_seconds,\n      d_minutes,\n      d_hours,\n      d_days,\n      timeNow = Math.floor(new Date().getTime() / 1000),\n      d,\n      date = new Date(publishTime * 1000),\n      Y = date.getFullYear(),\n      M = date.getMonth() + 1,\n      D = date.getDate(),\n      H = date.getHours(),\n      m = date.getMinutes(),\n      s = date.getSeconds();\n    //小于10的在前面补0\n    if (M < 10) {\n      M = '0' + M;\n    }\n    if (D < 10) {\n      D = '0' + D;\n    }\n    if (H < 10) {\n      H = '0' + H;\n    }\n    if (m < 10) {\n      m = '0' + m;\n    }\n    if (s < 10) {\n      s = '0' + s;\n    }\n    d = timeNow - publishTime;\n    d_days = Math.floor(d / 86400);\n    d_hours = Math.floor(d / 3600);\n    d_minutes = Math.floor(d / 60);\n    d_seconds = Math.floor(d);\n    if (d_days > 0 && d_days < 3) {\n      return d_days + '天前';\n    } else if (d_days <= 0 && d_hours > 0) {\n      return d_hours + '小时前';\n    } else if (d_hours <= 0 && d_minutes > 0) {\n      return d_minutes + '分钟前';\n    } else if (d_seconds < 60) {\n      if (d_seconds <= 0) {\n        return '刚刚发表';\n      } else {\n        return d_seconds + '秒前';\n      }\n    } else if (d_days >= 3) {\n      return Y + '-' + M + '-' + D + ' ' + H + ':' + m;\n    }\n  },\n  /**\r\n  * 加密\r\n  */\n  encrypt(plaintText) {\n    let options = {\n      mode: CryptoJS.mode.ECB,\n      padding: CryptoJS.pad.Pkcs7\n    };\n    let key = CryptoJS.enc.Utf8.parse(constant.cryptojs_key);\n    let encryptedData = CryptoJS.AES.encrypt(plaintText, key, options);\n    return encryptedData.toString().replace(/\\//g, \"_\").replace(/\\+/g, \"-\");\n  },\n  /**\r\n   * 解密\r\n   */\n  decrypt(encryptedBase64Str) {\n    let val = encryptedBase64Str.replace(/\\-/g, '+').replace(/_/g, '/');\n    let options = {\n      mode: CryptoJS.mode.ECB,\n      padding: CryptoJS.pad.Pkcs7\n    };\n    let key = CryptoJS.enc.Utf8.parse(constant.cryptojs_key);\n    let decryptedData = CryptoJS.AES.decrypt(val, key, options);\n    return CryptoJS.enc.Utf8.stringify(decryptedData);\n  }\n};","map":{"version":3,"names":["constant","CryptoJS","isEmpty","value","trim","Array","prototype","isPrototypeOf","length","Object","keys","faceReg","content","replace","word","console","log","index","emojiList","indexOf","url","qiniuDownload","pictureReg","arr","split","imgShow","select","$","click","src","attr","load","windowW","window","width","windowH","height","realWidth","realHeight","imgWidth","imgHeight","scale","css","w","h","fadeIn","fadeOut","getDateDiff","dateStr","publishTime","isNaN","Date","parse","d_seconds","d_minutes","d_hours","d_days","timeNow","Math","floor","getTime","d","date","Y","getFullYear","M","getMonth","D","getDate","H","getHours","m","getMinutes","s","getSeconds","encrypt","plaintText","options","mode","ECB","padding","pad","Pkcs7","key","enc","Utf8","cryptojs_key","encryptedData","AES","toString","decrypt","encryptedBase64Str","val","decryptedData","stringify"],"sources":["D:/Java_Projects/MYBLOG-备份/frontend/blog-frontend/src/utils/common.js"],"sourcesContent":["import constant from \"./constant\";\r\nimport CryptoJS from 'crypto-js';\r\n\r\nexport default {\r\n    /**\r\n   * 判断是否为空\r\n   */\r\n    isEmpty(value) {\r\n        if (typeof value === \"undefined\" || value === null || (typeof value === \"string\" && value.trim() === \"\") || (Array.prototype.isPrototypeOf(value) && value.length === 0) || (Object.prototype.isPrototypeOf(value) && Object.keys(value).length === 0)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    /**\r\n   * 表情包转换\r\n   */\r\n    faceReg(content) {\r\n        content = content.replace(/\\[[^\\[^\\]]+\\]/g, (word) => {\r\n            console.log(\"Matched word: \", word);\r\n            let index = constant.emojiList.indexOf(word.replace(\"[\", \"\").replace(\"]\", \"\"));\r\n            if (index > -1) {\r\n                let url = constant.qiniuDownload + \"/emoji/\" + (index + 1) + \".png\";\r\n                console.log(\"Emoji URL: \", url);\r\n                return '<img style=\"vertical-align: middle;width: 32px;height: 32px\" src=\"' + url + '\" title=\"' + word + '\"/>';\r\n            } else {\r\n                console.log(\"Processed content: \", content);\r\n                return word;\r\n            }\r\n        });\r\n        return content;\r\n    },\r\n\r\n    /**\r\n   * 图片转换\r\n   */\r\n    pictureReg(content) {\r\n        content = content.replace(/\\[[^\\[^\\]]+\\]/g, (word) => {\r\n            let index = word.indexOf(\",\");\r\n            if (index > -1) {\r\n                let arr = word.replace(\"[\", \"\").replace(\"]\", \"\").split(\",\");\r\n                return '<img class=\"pictureReg\" style=\"border-radius: 5px;width: 100%;max-width: 250px;display: block\" src=\"' + arr[1] + '\" title=\"' + arr[0] + '\"/>';\r\n            } else {\r\n                return word;\r\n            }\r\n        });\r\n        return content;\r\n    },\r\n\r\n    imgShow(select) {\r\n        $(select).click(function () {\r\n            let src = $(this).attr(\"src\");\r\n            $(\"#bigImg\").attr(\"src\", src);\r\n\r\n            /** 获取当前点击图片的真实大小，并显示弹出层及大图 */\r\n            $(\"<img/>\").attr(\"src\", src).load(function () {\r\n                let windowW = $(window).width();//获取当前窗口宽度\r\n                let windowH = $(window).height();//获取当前窗口高度\r\n                let realWidth = this.width;//获取图片真实宽度\r\n                let realHeight = this.height;//获取图片真实高度\r\n                let imgWidth, imgHeight;\r\n                let scale = 0.8;//缩放尺寸，当图片真实宽度和高度大于窗口宽度和高度时进行缩放\r\n\r\n                if (realHeight > windowH * scale) {//判断图片高度\r\n                    imgHeight = windowH * scale;//如大于窗口高度，图片高度进行缩放\r\n                    imgWidth = imgHeight / realHeight * realWidth;//等比例缩放宽度\r\n                    if (imgWidth > windowW * scale) {//如宽度仍大于窗口宽度\r\n                        imgWidth = windowW * scale;//再对宽度进行缩放\r\n                    }\r\n                } else if (realWidth > windowW * scale) {//如图片高度合适，判断图片宽度\r\n                    imgWidth = windowW * scale;//如大于窗口宽度，图片宽度进行缩放\r\n                    imgHeight = imgWidth / realWidth * realHeight;//等比例缩放高度\r\n                } else {//如果图片真实高度和宽度都符合要求，高宽不变\r\n                    imgWidth = realWidth;\r\n                    imgHeight = realHeight;\r\n                }\r\n                $(\"#bigImg\").css(\"width\", imgWidth);//以最终的宽度对图片缩放\r\n\r\n                let w = (windowW - imgWidth) / 2;//计算图片与窗口左边距\r\n                let h = (windowH - imgHeight) / 2;//计算图片与窗口上边距\r\n                $(\"#innerImg\").css({ \"top\": h, \"left\": w });//设置top和left属性\r\n                $(\"#outerImg\").fadeIn(\"fast\");//淡入显示\r\n            });\r\n\r\n            $(\"#outerImg\").click(function () {//再次点击淡出消失弹出层\r\n                $(this).fadeOut(\"fast\");\r\n            });\r\n        });\r\n    },\r\n\r\n    getDateDiff(dateStr) {\r\n        if (!dateStr) {\r\n            return ''; // 如果 dateStr 不存在，返回空字符串或其他默认值\r\n        }\r\n        let publishTime = isNaN(Date.parse(dateStr.replace(/-/gi, \"/\")) / 1000) ? Date.parse(dateStr) / 1000 : Date.parse(dateStr.replace(/-/gi, \"/\")) / 1000;\r\n        let d_seconds,\r\n            d_minutes,\r\n            d_hours,\r\n            d_days,\r\n            timeNow = Math.floor(new Date().getTime() / 1000),\r\n            d,\r\n            date = new Date(publishTime * 1000),\r\n            Y = date.getFullYear(),\r\n            M = date.getMonth() + 1,\r\n            D = date.getDate(),\r\n            H = date.getHours(),\r\n            m = date.getMinutes(),\r\n            s = date.getSeconds();\r\n        //小于10的在前面补0\r\n        if (M < 10) {\r\n            M = '0' + M;\r\n        }\r\n        if (D < 10) {\r\n            D = '0' + D;\r\n        }\r\n        if (H < 10) {\r\n            H = '0' + H;\r\n        }\r\n        if (m < 10) {\r\n            m = '0' + m;\r\n        }\r\n        if (s < 10) {\r\n            s = '0' + s;\r\n        }\r\n        d = timeNow - publishTime;\r\n        d_days = Math.floor(d / 86400);\r\n        d_hours = Math.floor(d / 3600);\r\n        d_minutes = Math.floor(d / 60);\r\n        d_seconds = Math.floor(d);\r\n        if (d_days > 0 && d_days < 3) {\r\n            return d_days + '天前';\r\n        } else if (d_days <= 0 && d_hours > 0) {\r\n            return d_hours + '小时前';\r\n        } else if (d_hours <= 0 && d_minutes > 0) {\r\n            return d_minutes + '分钟前';\r\n        } else if (d_seconds < 60) {\r\n            if (d_seconds <= 0) {\r\n                return '刚刚发表';\r\n            } else {\r\n                return d_seconds + '秒前';\r\n            }\r\n        } else if (d_days >= 3) {\r\n            return Y + '-' + M + '-' + D + ' ' + H + ':' + m;\r\n        }\r\n    },\r\n\r\n    /**\r\n   * 加密\r\n   */\r\n    encrypt(plaintText) {\r\n        let options = {\r\n            mode: CryptoJS.mode.ECB,\r\n            padding: CryptoJS.pad.Pkcs7\r\n        };\r\n        let key = CryptoJS.enc.Utf8.parse(constant.cryptojs_key);\r\n        let encryptedData = CryptoJS.AES.encrypt(plaintText, key, options);\r\n        return encryptedData.toString().replace(/\\//g, \"_\").replace(/\\+/g, \"-\");\r\n    },\r\n\r\n    /**\r\n     * 解密\r\n     */\r\n    decrypt(encryptedBase64Str) {\r\n        let val = encryptedBase64Str.replace(/\\-/g, '+').replace(/_/g, '/');\r\n        let options = {\r\n            mode: CryptoJS.mode.ECB,\r\n            padding: CryptoJS.pad.Pkcs7\r\n        };\r\n        let key = CryptoJS.enc.Utf8.parse(constant.cryptojs_key);\r\n        let decryptedData = CryptoJS.AES.decrypt(val, key, options);\r\n        return CryptoJS.enc.Utf8.stringify(decryptedData);\r\n    },\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}